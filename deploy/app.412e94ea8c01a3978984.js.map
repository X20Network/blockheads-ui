{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../src/fable-library/Reflection.ts","webpack:///./.fable/fable-library.2.4.13/MutableMap.js","webpack:///./.fable/fable-library.2.4.13/Map.js","webpack:///.fable/Fable.SimpleJson.3.23.0/Json.fs","webpack:///../../src/fable-library/Option.ts","webpack:///../../src/fable-library/Double.ts","webpack:///./.fable/fable-library.2.4.13/BigInt/n.js","webpack:///./.fable/fable-library.2.4.13/BigInt/z.js","webpack:///./.fable/fable-library.2.4.13/BigInt.js","webpack:///../../src/fable-library/Util.ts","webpack:///../../src/fable-library/DateOffset.ts","webpack:///../../src/fable-library/BitConverter.ts","webpack:///../../src/fable-library/Date.ts","webpack:///./src/data.js","webpack:///../../src/fable-library/Types.ts","webpack:///./.fable/Fable.Parsimmon.4.1.0/Parsimmon.js","webpack:///../../src/fable-library/Int32.ts","webpack:///../../src/fable-library/Uri.ts","webpack:///./.fable/Fable.SimpleJson.3.23.0/quote.js","webpack:///./src/NFT-Blockheads-abi.js","webpack:///./src/NFT-Blocklets-abi.js","webpack:///./src/NFT-Blocktrophies-abi.js","webpack:///./src/Game-Blockball-abi.js","webpack:///./src/Minting-Blockheads-abi.js","webpack:///../../../src/fable-library/lib/long.js","webpack:///../../src/fable-library/Long.ts","webpack:///.fable/Fable.Parsimmon.4.1.0/Parsimmon.fs","webpack:///.fable/Fable.SimpleJson.3.23.0/Parser.fs","webpack:///.fable/Fable.SimpleJson.3.23.0/SimpleJson.fs","webpack:///.fable/Fable.SimpleJson.3.23.0/TypeInfo.fs","webpack:///.fable/Fable.SimpleJson.3.23.0/TypeInfo.Converter.fs","webpack:///../../src/fable-library/RegExp.ts","webpack:///../../src/fable-library/String.ts","webpack:///../../../src/fable-library/lib/big.js","webpack:///../../src/fable-library/Decimal.ts","webpack:///./.fable/fable-library.2.4.13/Array.js","webpack:///./.fable/fable-library.2.4.13/MutableSet.js","webpack:///./.fable/fable-library.2.4.13/Set.js","webpack:///../../src/fable-library/Seq.ts","webpack:///.fable/Fable.React.5.3.6/Fable.React.Helpers.fs","webpack:///src/Blockhead/View.fs","webpack:///../../src/fable-library/AsyncBuilder.ts","webpack:///../../src/fable-library/Async.ts","webpack:///.fable/Fable.SimpleHttp.3.1.0/Http.fs","webpack:///src/Common.fs","webpack:///src/Navbar/View.fs","webpack:///src/Info/View.fs","webpack:///src/Counter/View.fs","webpack:///src/ViewComponents.fs","webpack:///../../src/fable-library/TimeSpan.ts","webpack:///src/Home/View.fs","webpack:///.fable/Fable.Promise.2.1.0/Promise.fs","webpack:///src/Blockball/View.fs","webpack:///src/Gallery/View.fs","webpack:///.fable/Fable.React.5.3.6/Fable.React.Extensions.fs","webpack:///src/UserGuide/View.fs","webpack:///../../src/fable-library/Observable.ts","webpack:///../../src/fable-library/Event.ts","webpack:///../../src/fable-library/Timer.ts","webpack:///src/Gallery/State.fs","webpack:///.fable/Fable.Elmish.3.0.6/cmd.fs","webpack:///.fable/Fable.Elmish.Browser.3.0.4/parser.fs","webpack:///.fable/Fable.Elmish.3.0.6/ring.fs","webpack:///.fable/Fable.Elmish.Browser.3.0.4/navigation.fs","webpack:///src/State.fs","webpack:///src/Blockball/State.fs","webpack:///src/App.fs","webpack:///./.fable/fable-library.2.4.13/List.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","MutableMap$00602","declare","pairs","comparer","this$","FSharpRef","this","contents","hashMap","Map","iterate","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","this$$$1","k","h","GetHashCode","matchValue","tryGetValue","findIndex","pair$$1","Equals","MutableMap$00602$$TryFind$$2B595","this$$$2","k$$1","matchValue$$1","getItemFromDict","MutableMap$00602$$Clear","this$$$4","clear","MutableMap$00602$$get_Count","this$$$5","source","values","sumBy","pairs$$2","GetZero","Add","$x$$2","$y$$3","this$$$8","k$$4","v$$1","matchValue$$4","msg","toText","printf","clo1","Error","set","MutableMap$00602$$Remove$$2B595","this$$$10","k$$6","matchValue$$6","iterator","elems","this$$$11","toIterator","delay","collect","pairs$$3","map","pair$$3","getEnumerator","item","Clear","Contains","item$$1","$target$$31","matchValue$$7","equals","CopyTo","array","arrayIndex","iterateIndexed","i$$10","e","Remove","item$$2","matchValue$$8","pair$$4","delete","k$$7","entries","x","k$$8","this$$$6","k$$2","matchValue$$2","MutableMap$00602$$get_Item$$2B595","has","k$$9","this$$$9","k$$5","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","keys","pair$$5","k$$10","v$$2","this$$$7","k$$3","v","matchValue$$3","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","tag","fields","Union","MapTreeModule$$$size","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","acc","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","hl","hr","MapTreeModule$$$rebalance","t1","t2","t1h","t2h","MapTreeModule$$$add","m$$3","Compare","c$$1","MapTreeModule$$$find","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","comparer$$1","m$$4","c$$3","MapTreeModule$$$tryFind","$comparer$$2$$26","$k$$4$$27","$m$$5$$28","comparer$$2","m$$5","some","c$$5","MapTreeModule$$$remove","comparer$$9","k$$11","m$$7","c$$7","patternInput$$1","MapTreeModule$$$spliceOutSuccessor","m$$6","patternInput","MapTreeModule$$$mem","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","comparer$$10","k$$12","m$$8","c$$8","MapTreeModule$$$iter","$f$$6$$62","$m$$9$$63","f$$6","m$$9","MapTreeModule$$$toList","m$$20","MapTreeModule$$$loop","$m$$19$$92","$acc$$8$$93","m$$19","acc$$8","List","MapTreeModule$$$ofSeq","comparer$$16","c$$9","ie","$comparer$$14$$97","$acc$$10$$98","$e$$99","comparer$$14","acc$$10","MoveNext","patternInput$$2","Current","MapTreeModule$$$mkFromEnumerator","isDisposable","Dispose","MapTreeModule$002EMapIterator$00602","arg1","arg2","stack","started","Record","MapTreeModule$$$collapseLHS","$stack$$111","tail","head","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","en","unfold","en$$1","i$$3","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$get_Item$$2B595","__$$8","k$$29","FSharpMap$$Map$$Z6F6B671C","__$$18","f$$25","MapTreeModule$$$mapi","f$$11","m$$14","l2$$1","v2$$17","r2$$1","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","isEmpty","m$$23","add","k$$37","v$$27","m$$24","k$$28","v$$24","__$$6","find","k$$38","m$$25","tryFind","k$$39","m$$26","k$$33","__$$23","remove","k$$40","m$$27","k$$32","__$$22","containsKey","k$$41","m$$28","f$$35","m$$37","toSeq","m$$40","ofList","l$$22","comparer$$18","comparer$$13","l$$20","fold$$1","acc$$9","tupledArg","ofSeq","l$$23","comparer$$19","ofArray","comparer$$20","comparer$$15","arr","res$$2","patternInput$$3","MapTreeModule$$$ofArray","toList","m$$45","toArray","m$$46","res$$6","s$$4","arr$$1","len","Array","x$$15","y$$2","empty","comparer$$21","createMutable","source$$5","comparer$$23","MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3","count","m$$47","toString","strings","map$$2","kv","clo2","join","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3703","structuralHash","Math","abs","that","CompareTo","obj","res$$4","finished","e1","e2","kvp1","kvp2","c$$10","compare","_arg1$$1","k$$34","k$$35","source$$1","kv$$1","k$$36","v$$26","source$$2","kv$$2","isDefined","flattenMap","json","( |MapEmpty|_| )","activePatternResult2990","activePatternResult2985","( |MapKey|_| )","( |MapOne|_| )","activePatternResult2989","activePatternResult2987","left","right","( |MapNode|_| )","generateMap","leftMap","rightMap","flatteFable3Map","linkedList","flattenFable3Lists","case","input","typeInfo","arg0","getlElemType","getElemType","genericJson","jsonValue","optionalTypeDelayed","getTypes","arg20","elemType","insideBrowser","seconds","caseName","activePatternResult3019","caseNames","expectedCases","clo3","foundCase","arrayLike","deserialized","fromJsonAs","parsedOptional","arg30","parsedValues","array2","_arg2","testExpr","caseInfo","caseType","caseIndex","fieldValues","index","arg10","unionOfRecords","unexpectedJson","expectedType","foundDiscriminatorKey","discriminators","keyword","discriminatorKey","discriminatorValueJson","foundUnionCase","record","isQuoted","dict","_arg3","list","high","low","lowBytes","highBytes","combinedBytes","_arg4","serializedRecord","getType","caseValue","elementTypeDelayed","tupleTypesDelayed","tuples","items","_arg5","otherwise","_arg6","_arg7","types","foundCaseName","elementType","flattenedList","elements","converted","tupleTypes","recordValues","_arg8","dictKeys","recordFields","clo4","keyValuePair","tuple","a","output","inputSequence","forLoopVar","hashset","inputJson","flattenedMap","unknownType","isUsingFable3","str","BigNat","bound","digits","BigNatModule$002EFFT$$$pow32","$x$$1","$n$$2","fromBits","initialize","BigNatModule$002EFFT$$$maxTwoPower","i$$1","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","fromInteger","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","$x$$23$$48","$n$$15$$49","x$$23","n$$15","op_Multiply","BigNatModule$$$pow32","$x$$24$$50","$n$$16$$51","x$$24","n$$16","BigNatModule$$$maxInt","b$$2","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$divbase","x$$25","BigNatModule$$$modbase","x$$26","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","$na$$62","$i$$9$$63","na","i$$9","findLeastBound","BigNatModule$$$embed","x$$28","x$$29","r$$2","r$$3","BigNatModule$$$boundInt","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$add","p$$1","q$$1","rbound","r$$6","$i$$16$$75","$n$$25$$76","$c$$77","$p$$78","$q$$79","$r$$5$$80","i$$16","n$$25","q","r$$5","x$$32","BigNatModule$$$addP","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","$pa$$96","$qa$$97","$i$$22$$98","pa","qa","i$$22","check","BigNatModule$$$compare","p$$9","q$$6","$pa$$2$$108","$qa$$2$$109","$i$$24$$110","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","$r$$12$$130","$c$$8$$131","$k$$4$$132","value$$2","r$$12","rak$$1","op_Addition","op_BitwiseAnd","toInt","op_Division","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","value$$3","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","value$$1","r$$11","rak","pSmall","qSmall","p$$17","q$$14","value$$4","r$$14","i$$29","pai$$1","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","arg3","arg4","arg5","arg6","arg7","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule$$$mkEncoding","bigK$$2","i$$30","BigNatModule$$$table","i$$32","i$$33","i$$34","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","f","a$$5","n$$30","f$$1","j$$4","z$$7","zLo","x$$59","value$$5","zHi","x$$60","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","x$$64","value$$7","zHi$$1","x$$65","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","p$$8","pn","q$$5","qn","patternInput$$6","f64","f64$$1","$pa$$1$$103","$qa$$1$$104","$i$$23$$105","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","b$$7","a$$12","x$$68","x$$27","copy","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$toFloat","n$$40","$acc$$4$$219","$k$$10$$220","$i$$49$$221","acc$$4","i$$49","evalFloat","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","x$$31","r$$4","i$$11","BigNatModule$$$boundInt64","op_Modulus","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","arg00","degn","kten2ks","$prior$$227","$k$$11$$228","$ten2k$$229","prior","ten2k","route","digits$$4","isLeading","n$$46","_arg1$$3","patternInput$$13","digits$$2","n$$47","n$$19","i$$12","BigNatModule$$$eval32","int32ToString","BigNatModule$$$ofString","isNullOrEmpty","ten","$acc$$5$$235","$i$$50$$236","acc$$5","i$$50","d$$7","charCodeAt","build","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$$posn$$Z67CCE57D","n$$3","BigInteger$$$negn$$Z67CCE57D","n$$4","BigInteger$$get_SignInt","x$$1","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","y","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","x$$5","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","op_UnaryNegation","op_UnaryNegation_Int32","BigInteger$$$$002Ector$$Z524259C1","n$$7","BigNatModule$0024$0024$0024add","BigNatModule$0024$0024$0024one","BigInteger$$$get_One","one","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigInteger$$get_ToDouble","x$$34","BigNatModule$0024$0024$0024toFloat","BigInteger$$$Parse$$Z721C83C5","text","text$$1","trim","matchValue$$13","BigNatModule$0024$0024$0024ofString","BigNatModule$0024$0024$0024toString","z","n$$17","i$$8","BigNatModule$0024$0024$0024hash","obj$$1","n$$5","nn","parse","BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","fromInt32","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1","BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4","toDecimal","x$$11","x$$40","Decimal","rep","utc","date","getUTCHours","getHours","baseDate","traits","blockheads","Parsimmon","action","_","times","reduce","seed","forEach","elem","concat","bufferExists","Buffer","isParser","isArray","isBuffer","makeSuccess","status","furthest","expected","makeFailure","mergeReplies","last","xs","ys","sort","union","makeLineColumnIndex","offset","line","column","lines","assertParser","charAt","assertNumber","assertRegexp","RegExp","flags","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","from","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkSize","chunks","chunkIndex","toChunks","toJSON","floor","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","prefix","re","lastIndexOf","anchoredRegexp","seq","parsers","arguments","numParsers","accum","seqMap","args","mapper","pop","results","alt","fail","sepBy1","parser","separator","then","many","rs","regexp","group","anchored","match","exec","fullMatch","groupMatch","succeed","lookahead","test","predicate","oneOf","idx","ch","indexOf","desc","noneOf","takeWhile","lazy","undefined","skip","eof","tryParse","err","type","or","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","next","self","tieWith","assertArray","tie","min","max","prevResult","res","atMost","atLeast","init","rest","fn","contramap","promap","g","mark","start","end","node","sepBy","notFollowedBy","reply","fallback","ap","other","chain","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","quote","inputText","escapable","meta","lastIndex","replace","Long","$this","ticksToUnixEpochMilliseconds","ticks","stepComparedWithZero","content","others","keep","skipped","ps","floatWithComma","floatWithoutComma","jint","jfloat","negJint","escape","escapedCharSnippet","anyCharSnippet","otherParser","normalCharSnippet","stringLiteral","withWhitespace","jnull","jbool","jnumber","jstring","jarray","comma","jobject","leftBrace","rightBrace","jvalue","toPlainObject","jsObject","isBigInt","bigInt","dateOffset","copyOfStruct","activePatternResult2912","activePatternResult2911","number","activePatternResult2910","activePatternResult2908","parseNative'","activePatternResult2907","flattenFuncTypes","typeDef","lazyToDelayed","unitVar0","Value","_createTypeInfo","resolvedType","activePatternResult2831","primType","( |PrimitiveType|_| )","activePatternResult2830","( |FuncType|_| )","createTypeInfo","activePatternResult2829","field","( |RecordType|_| )","activePatternResult2828","info","prop","( |UnionType|_| )","cases","activePatternResult2827","activePatternResult2826","activePatternResult2825","activePatternResult2824","activePatternResult2823","activePatternResult2822","activePatternResult2821","activePatternResult2820","activePatternResult2819","activePatternResult2818","genArgs","( |MapType|_| )","keyType","valueType","activePatternResult2817","( |DictionaryType|_| )","activePatternResult2816","activePatternResult2815","activePatternResult2814","typeInfoCache","ti","isPrimitive","enumUnion","rm","P","hex","indexNotFoundMsg","append","array1","cons","ArrayBuffer","isView","len1","len2","newArray","fill","target","targetIndex","mapIndexed","cons$$1","target$$1","delegateArg0","delegateArg1","cons$$2","len$$1","target$$2","i$$4","arrays","cons$$9","arr$$4","arrays$$1","totalIdx","totalLength","result$$4","idx$$1","arr$$6","contains","array$$22","eq$$3","$i$$12$$79","loop","count$$8","initializer","cons$$15","result$$7","i$$13","array$$31","cons$$17","reverse","array$$33","cons$$18","take","count$$16","array$$43","cons$$25","predicate$$13","array$$59","findIndexBack","predicate$$22","array$$70","$i$$27$$162","i$$27","loop$$6","tryFindIndexBack","predicate$$23","array$$71","$i$$28$$165","loop$$7","choose","chooser$$2","array$$72","cons$$30","option$$1","value$$14","filter","x$$4","action$$1","array$$79","i$$31","forAll","predicate$$25","array$$81","every","permute","f$$8","array$$83","size","res$$7","checkFlags","x$$8","sortBy","projection$$4","xs$$4","comparer$$4","xs$$5","x$$13","y$$4","zip","array1$$4","array2$$4","result$$10","len$$16","i$$38","chunkBySize","array$$93","result$$12","x$$17","ceil","start$$8","equalsWith","array1$$7","array2$$7","comparer$$12","array1$$6","array2$$6","i$$40","result$$13","length1","length2","compareWith","source$$6","cons$$31","source$$7","cons$$32","source$$8","len$$18","target$$6","i$$48","splitInto","array$$120","result$$14","chunks$$1","min$$1","comparePrimitives","minChunkSize","chunksWithExtraItem","chunkSize$$1","start$$11","slice$$1","MutableSet$00601","MutableSet$00601$$Add$$2B595","MutableSet$00601$$$$002Ector$$Z6150332D","MutableSet$00601$$TryFindIndex$$2B595","MutableSet$00601$$Clear","MutableSet$00601$$get_Count","MutableSet$00601$$Contains$$2B595","MutableSet$00601$$Remove$$2B595","values$$1","item$$3","add_","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$$$height","SetTreeModule$$$mk","l$$2","SetTreeModule$$$rebalance","SetTreeModule$$$add","t$$1","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","l1","l2","SetTreeModule$$$ofSeq","c$$11","$comparer$$19$$126","$acc$$11$$127","$e$$128","acc$$11","SetTreeModule$$$mkFromEnumerator","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$$$002Ector$$2528C5CB","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","li","comparer$$28","comparer$$32","MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D","map$$1","x$$21","String","that$$1","cur","baseClass","classes","state","classBaseList","page","HttpMethod","BodyContent","ResponseContent","delimiter","url","defaultRequest","httpVerb","req","singleHeader","headers","bodyContent","xhr","serializeMethod","readyState","responseText","responseType","statusCode","response","splitAt","getAllResponseHeaders","headerLine","parts","setRequestHeader","mimeType","overrideMimeType","timeout","send","request","method","kovan","tokenAddress","account","cursor","Header","network","nfts","getNFTs","baseUrl","message","signedMessage","team","ci","blockheadsData","blockhead","getMerklePath","hashes","i2","traitsData","vc","shooting","wbmDistGoal","wbmNumAtck","wbmNumDef","wbpDistGoal","wbpNumAtck","wbpNumDef","wbpInvPos","wbpInvPas","wbpNotReq","ipDistBall","ipDistGoal","ipNumAtck","ipNumDef","opDistBall","opDistGoal","opNumAtck","opNumDef","weightings","sumip","table","sumop","sumwb","Seq","st","ws","w","trophyType","teamColour","visualTraits","strategy","getFromHexString","strength","speed","agility","accuracy","trait","fromBlockheadData","allBlockheads","search","sindex","allBlockheadsByIndex","contracts","nft","getBlockheadByIndex","getBlockletByIndex","getResults","getBlocklets","trophyByIndex","blockletByIndex","uri","trophy","attribute","getBlockheadGenericByIndex","_arg9","trophySrc","_arg10","props","children","root","model","navbarMenuActive","dispatch","toHash","bullet","roadmapLabel","rmlabel1","rmlabel2","rmlabel3","rmlabel4","rmlabel5","icon","title","sub","statusTxt","isComplete","SVGAttr","simpleButton","txt","css","CSSProp","strategyType","strategyWeightType","weighting","tags","strengths","row","vtraits","vtrait_0","vtrait_1","rarity","visualTrait","blockheadDetailCustomName","scoreStr","getProbStr","blockheadDetail","initialProps","blockheadsCompact","comp","blockheadsMini","blockheadsGrid","blockheadElements","imageSrc","carousel","carouselImgs","prev","src","countdown","days","hours","mins","secs","intro","carouselIndex","timeToLaunch_0","timeToLaunch_1","timeToLaunch_2","timeToLaunch_3","els","introTxt","equal","view","nextProps","_nextState","teamPositions","position","getCls","pos","nteam","saveRevertBtn","btns","dt","btn","checked","disableUnchecked","parentSelect","img","teamTab","accountData","savingTxt","signMsgNotification","notEnoughBlockheadsNotification","noBlockheadsNotification","loadingNotification","connectNotification","resultsTab","noResultsNotification","child","dateTxt","redColour","blueColour","redTeam","blueTeam","redteamName","blueTeamName","alreadyIncluded","wc","selectBlockhead","b","pageModel","breadCrumb","prevPage","selectedTrait","traitName","traitOptions","selectedValue","filters","opt","reset","squares","pitchSquare","drawBlockballDiag","midnightLocalStr","middayLocalStr","startingPositionsDiag","ex","interval","callback","returnVal","cmd","cmds","task","arg","ofSuccess","ofError","ofFunc","visited","unvisited","custom","tipe","stringToSomething","mkState","i32","subValue","( arg10@ )","parseHelp","states","segments","splitUrl","toKeyValuePair","segment","parseParams","querystring","__","rix'","ix","wix'","wix","setState","program","rb","reentered","syncDispatch","nextMsg","lastLocation","onChangeRef","location","href","urlUpdate","onLocationChange","mapInit","mapUpdate","mapView","mapSetState","mapSubscribe","update","userInit","unitVar1","userUpdate","userView","userSetState","userSubscribe","generator","f1","f2","er","success","PromiseBuilder","parseBefore","gbl","newUrl","CurrentPage","console","createContracts","web3","blockheadsContract","blockheadsAbi","blockletsContract","blockletsAbi","blockballContract","blockballAbi","blocktrophiesContract","blocktrophiesAbi","blockmintingContract","blockmintingAbi","getAuctionBatchFromEvent","currentAuction","pr","origindate","startTimeUx","repeatTime","t0","t3","t4","t5","tokenIds","startTime","now","num","endTime","tid","blockheadsDataByIndex","tokenId","auctions","priceSold","timeRemaining","price","initWeb3","auctionBlock","launchTs","launchTime","timeToLaunch","gallery","auction","Home","minting","tokenData","merklePath","receipt","exn","salt","teamArray","hash","blockball","blockheadId","selectingBlockhead","draftTeam","selectedAccount","messageToSign","eventSubCmd","event","blockletsTokenAddress","_arg11","wblockheads","TeamStatus","_arg12","lazyView2With","placeholderId","lastRequest","document","getElementById","web3ModalConfig","menuItem","label","currentPage","menu","Page","subscribe","web3Modal","n2","h2","h1","timer","toNavigableWith","pathname","parsePath","runWith","withReactBatchedUsing","foldIndexed","xs$$7","$f$$12","$i$$13","$acc$$14","$_arg1$$5$$15","_arg1$$5","foldIndexedAux","fold","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","xs$$8","xs$$9","acc$$1","x$$6","xs$$12","acc$$3","x$$9","lists","state$$3","xs$$14","x$$10","xs$$27","_arg1$$7","xs$$28","ys$$10","f$$15","xs$$29","collect$$1","f$$16","xs$$31","f$$17","xs$$33","acc$$12","f$$24","xs$$46","xs$$50","res$$1","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","tryFindIndexed","f$$32","xs$$55","f$$33","xs$$56","_arg1$$11","findIndexed","f$$34","xs$$57","xs$$58","_arg1$$12","f$$40","xs$$67","f$$38","x$$35","xs$$69","_arg1$$13","f$$42","xs$$71","acc$$17","x$$37","f$$44","xs$$74","acc$$18","x$$39","y$$10","eq","$xs$$76$$162","xs$$76","loop$$1","n$$2","f$$46","xs$$78","i$$15","f$$47","_arg1$$16","f$$49","xs$$79","acc$$19","x$$41","projection","xs$$90","comparer$$3","xs$$91","x$$50","y$$18","xs$$111","array$$4","xs$$113","chunkBySize$$1","xs$$115","$target$$242","i$$20","xs$$119","$i$$17$$240","$xs$$116$$241","i$$17","xs$$116","skipInner","skipWhile","$predicate$$243","$xs$$120$$244","$target$$245","t$$4","xs$$120"],"mappings":"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","file":"app.412e94ea8c01a3978984.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([398,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { anonRecord as makeAnonRecord, Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function anonRecord(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, () => fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, undefined, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enumType(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, enumCases);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str) {\n    try {\n        const v = parseEnum(t, str);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, NaN];\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.constructor != null\n        ? new uci.declaringType.constructor(uci.tag, uci.name, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.constructor != null\n        ? new t.constructor(...values)\n        : makeAnonRecord(fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n//# sourceMappingURL=Reflection.js.map","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { toText, printf } from \"./String.js\";\nexport const MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5]);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    const pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  const matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7.hashMap, matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          const value = getItemFromDict(this$$$7.hashMap, matchValue$$3[1]).push([k$$3, v]);\n          void null;\n        } else {\n          this$$$7.hashMap.set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  const matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        let msg;\n        const clo1 = toText(printf(\"An item with the same key has already been added. Key: %A\"));\n        msg = clo1(k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          const value$$1 = getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).push([k$$4, v$$1]);\n          void null;\n        } else {\n          this$$$8.hashMap.set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  const matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  const matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10.hashMap, matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  const this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  const this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  const this$$$14 = this;\n  const matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  const this$$$18 = this;\n  const matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    const pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      const value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      void value$$2;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  const this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  const this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  const this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  const this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  const this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  const this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]]);\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    const acc = $acc$$5,\n          m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    const comparer$$1 = $comparer$$1$$23,\n          k$$3 = $k$$3$$24,\n          m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    const comparer$$2 = $comparer$$2$$26,\n          k$$4 = $k$$4$$27,\n          m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          f$$1 = $f$$1$$36,\n          s = $s$$37,\n          acc_0 = $acc_0$$38,\n          acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$48,\n          f$$4 = $f$$4$$49,\n          s$$2 = $s$$2$$50,\n          acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    const comparer$$10 = $comparer$$10$$59,\n          k$$12 = $k$$12$$60,\n          m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          const c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $f$$6$$62,\n          m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $f$$7$$64,\n          m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $f$$8$$66,\n          m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $f$$9$$68,\n          m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        const v2$$16 = f$$10(m$$13.fields[1]);\n        const r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        const v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $f$$12$$74,\n          m$$15 = $m$$15$$75,\n          x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          const x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $f$$13$$77,\n          x$$4 = $x$$4$$78,\n          m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          const x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    const m$$19 = $m$$19$$92,\n          acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$14 = $comparer$$14$$97,\n          acc$$10 = $acc$$10$$98,\n          e = $e$$99;\n\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool]]);\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return type(\"Map.FSharpMap\", [$gen$$120, $gen$$121]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"map [\" + (strings = (map$$2(function mapping(kv) {\n    const clo1 = toText(printf(\"(%A, %A)\"));\n    const clo2 = clo1(kv[0]);\n    return clo2(kv[1]);\n  }, this$)), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3703 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3703[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3703[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.delete = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  const this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  const this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  const this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  const this$$$7 = this;\n  const source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping$$1(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  const this$$$8 = this;\n  const source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$2(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  let _arg1$$2;\n\n  const m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return null;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  const m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return null;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  let res$$6;\n  const len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$45) {\n      return MapTreeModule$$$find(comparer$$22, k$$45, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      const source$$3 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$3(kv$$3) {\n        return kv$$3[0];\n      }, source$$3);\n    },\n\n    set(k$$46, v$$30) {\n      const this$$$9 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$46, v$$30, tree$$1);\n      return this$$$9;\n    },\n\n    values() {\n      const source$$4 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$4(kv$$4) {\n        return kv$$4[1];\n      }, source$$4);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$5, comparer$$23) {\n  const map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$5, comparer$$23);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$31) {\n    const key = projection(v$$31);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$31);\n    } else {\n      const value = dict.set(key, [v$$31]);\n      void value;\n    }\n  }, xs);\n  return map$$2(function mapping$$5(kv$$5) {\n    return [kv$$5[0], kv$$5[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    const value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    void value$$2;\n  }, xs$$1);\n  return map$$2(function mapping$$6(kv$$6) {\n    return [kv$$6[0], kv$$6[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","namespace Fable.SimpleJson\r\n\r\nopen System\r\nopen Fable.Core\r\nopen FSharp.Reflection\r\nopen System.Numerics\r\nopen System.Collections\r\nopen System.Collections.Generic\r\nopen Fable.Core.JsInterop\r\n\r\nmodule Node =\r\n\r\n    /// Converts Base64 string into a byte array in Node environment\r\n    [<Emit(\"Array.prototype.slice.call(Buffer.from($0, 'base64'))\")>]\r\n    let bytesFromBase64 (value: string) : byte array = jsNative\r\n\r\nmodule Convert =\r\n    [<Emit(\"new Function(\\\"try {return this===window;}catch(e){ return false;}\\\")\")>]\r\n    let internal isBrowser : unit -> bool = jsNative\r\n\r\n    let insideBrowser = isBrowser()\r\n\r\n    [<Emit \"($0 === undefined)\">]\r\n    let private isUndefined (value: obj) : bool = jsNative\r\n    let private isDefined (value: obj) : bool = not (isUndefined value)\r\n\r\n    /// <summary>Uses internal representation of F# maps to determine whether we are using Fable 3 or not</summary>\r\n    let usingFable3() =\r\n        #if FABLE_COMPILER_3\r\n        true\r\n        #else\r\n        let map = JS.JSON.parse(JS.JSON.stringify (Map.ofList [ 1, 1; 2, 2 ]))\r\n        let tree = get \"tree\" map\r\n        isDefined tree && isDefined (get \"k\" tree) && isDefined (get \"v\" tree) && isDefined (get \"h\" tree)\r\n        #endif\r\n\r\n    let isUsingFable3 = usingFable3()\r\n\r\n    [<Emit(\"typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\")>]\r\n    let internal insideWorker :  bool = jsNative\r\n\r\n    [<Emit(\"$0[$1] = $2\")>]\r\n    let internal setProp o k v = jsNative\r\n\r\n    type InternalMap =\r\n        | MapEmpty\r\n        | MapOne of string * Json\r\n        | MapNode of string * Json * InternalMap * InternalMap\r\n\r\n    let rec flattenMap = function\r\n        | MapEmpty -> [ ]\r\n        | MapOne (key, value) -> [ key, value ]\r\n        | MapNode (key, value, left, right) ->\r\n            [ yield! flattenMap left\r\n              yield! flattenMap right\r\n              yield  (key, value) ]\r\n\r\n    let (|KeyValue|_|) key (map: Map<string, Json>) =\r\n        map\r\n        |> Map.tryFind key\r\n        |> Option.map (fun value -> key, value, Map.remove key map)\r\n\r\n    let (|NonArray|_|) = function\r\n        | JArray _ -> None\r\n        | json -> Some json\r\n\r\n    let (|MapEmpty|_|) json =\r\n        match json with\r\n        | JString \"MapEmpty\" -> Some json\r\n        | _ -> None\r\n\r\n    let (|MapKey|_|) = function\r\n        | JNumber number -> Some (string number)\r\n        | JString key -> Some key\r\n        | _ -> None\r\n\r\n    let (|MapOne|_|) = function\r\n        | JArray [ JString \"MapOne\"; MapKey key; value ] -> Some (key, value)\r\n        | _ -> None\r\n\r\n    let (|MapNode|_|) = function\r\n        | JArray [ JString \"MapNode\"; MapKey key; value; left; right; JNumber _  ] ->\r\n            Some (key, value, left, right)\r\n        | _ -> None\r\n\r\n    let rec generateMap json =\r\n        match json with\r\n        | MapEmpty _ -> Some InternalMap.MapEmpty\r\n        | MapOne (key, value) -> Some (InternalMap.MapOne (key, value))\r\n        | MapNode (key, value, left, right) ->\r\n            match generateMap left, generateMap right with\r\n            | Some leftMap, Some rightMap ->\r\n                Some (InternalMap.MapNode(key, value, leftMap, rightMap))\r\n            | _ -> None\r\n        | _ -> None\r\n\r\n    let rec flatteFable3Map (tree: Map<string, Json>) =\r\n        [\r\n            match Map.tryFind \"k\" tree, Map.tryFind \"v\" tree with\r\n            | Some (JString key), Some value -> (key, value)\r\n            | _ -> ()\r\n\r\n            match Map.tryFind \"left\" tree with\r\n            | Some (JObject left) -> yield! flatteFable3Map left\r\n            | _ -> ()\r\n\r\n            match Map.tryFind \"right\" tree with\r\n            | Some (JObject right) -> yield! flatteFable3Map right\r\n            | _ -> ()\r\n        ]\r\n\r\n    let rec flattenFable3Lists (linkedList: Map<string, Json>) =\r\n        [\r\n            match Map.tryFind \"head\" linkedList with\r\n            | Some value -> value\r\n            | None -> ()\r\n\r\n            match Map.tryFind \"tail\" linkedList with\r\n            | Some (JObject tail) -> yield! flattenFable3Lists tail\r\n            | _ -> ()\r\n        ]\r\n\r\n    /// <summary>Returns whether the type information resembles a type of a sequence of elements (including tuples)</summary>\r\n    let arrayLike = function\r\n        | TypeInfo.Array _ -> true\r\n        | TypeInfo.List _ -> true\r\n        | TypeInfo.Seq _ -> true\r\n        | TypeInfo.Tuple _ -> true\r\n        | TypeInfo.Set _ -> true\r\n        | TypeInfo.ResizeArray _ -> true\r\n        | TypeInfo.HashSet _ -> true\r\n        | _ -> false\r\n\r\n    let isRecord = function\r\n        | TypeInfo.Record recordType -> true\r\n        | _ -> false\r\n\r\n    let unionOfRecords = function\r\n        | TypeInfo.Union getCases ->\r\n            let (unionCases, unionType) = getCases()\r\n            unionCases\r\n            |> Seq.forall (fun case -> case.CaseTypes.Length = 1 && isRecord case.CaseTypes.[0])\r\n        | _ ->\r\n            false\r\n\r\n    let optional = function\r\n        | TypeInfo.Option _ -> true\r\n        | _ -> false\r\n\r\n    let isQuoted (input: string) =\r\n        input.StartsWith \"\\\"\" && input.EndsWith \"\\\"\"\r\n\r\n    let betweenQuotes (input: string) = \"\\\"\" + input + \"\\\"\"\r\n\r\n    let removeQuotes (input: string) =\r\n        input.Substring(1, input.Length - 2)\r\n\r\n    let rec fromJsonAs (input: Json) (typeInfo: Fable.SimpleJson.TypeInfo) : obj =\r\n        match input, typeInfo with\r\n        | JNumber value, TypeInfo.Float -> unbox value\r\n        | JString value, TypeInfo.Float when value.ToLower() = \"nan\" -> unbox (Double.NaN)\r\n        | JString value, TypeInfo.Float -> unbox (float value)\r\n        | JNumber value, TypeInfo.Float32 -> unbox (float32 value)\r\n        | JString value, TypeInfo.Float32 when value.ToLower() = \"nan\" -> unbox (Double.NaN)\r\n        | JString value, TypeInfo.Float32 -> unbox (float32 value)\r\n        // reading number as int -> floor it\r\n        | JNumber value, TypeInfo.Int32 -> unbox (JS.Math.floor(value))\r\n        | JBool value, TypeInfo.Bool -> unbox value\r\n        // reading int from string -> parse it\r\n        | JString value, TypeInfo.Int32 -> unbox (int value)\r\n        | JString value, TypeInfo.Char -> unbox (char value)\r\n        | JNumber value, TypeInfo.Char -> unbox (char (unbox<int> value))\r\n        // reading into strings\r\n        | JString value, TypeInfo.String -> unbox value\r\n        | JNumber value, TypeInfo.String -> unbox (string value)\r\n        // uri\r\n        | JString value, TypeInfo.Uri -> unbox(Uri(value))\r\n        // decimals\r\n        | JString value, TypeInfo.Decimal -> unbox (decimal value)\r\n        | JNumber value, TypeInfo.Decimal -> unbox (decimal value)\r\n        | JString value, TypeInfo.Short -> unbox (int16 value)\r\n        | JNumber value, TypeInfo.Short -> unbox (int16 value)\r\n        // Unsigned integers\r\n        | JNumber value, TypeInfo.UInt16 -> unbox (uint16 value)\r\n        | JString value, TypeInfo.UInt16 -> unbox (uint16 value)\r\n        | JNumber value, TypeInfo.UInt32 -> unbox (uint32 value)\r\n        | JString value, TypeInfo.UInt32 -> unbox (uint32 value)\r\n        | JNumber value, TypeInfo.UInt64 -> unbox (uint64 value)\r\n        | JString value, TypeInfo.UInt64 -> unbox (uint64 value)\r\n        | JNumber value, TypeInfo.TimeSpan -> unbox (JS.Math.floor value)\r\n        | JString value, TypeInfo.Enum getlElemType ->\r\n            let (underlyingType, originalType) = getlElemType()\r\n            match underlyingType with\r\n            | TypeInfo.Int32 ->\r\n                match Int32.TryParse(value) with\r\n                | true, parsedNumber ->\r\n                    unbox parsedNumber\r\n                | false, _ ->\r\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\r\n            | TypeInfo.Long ->\r\n                match Int64.TryParse(value) with\r\n                | true, parsedNumber ->\r\n                    unbox parsedNumber\r\n                | false, _ ->\r\n                    failwithf \"The value '%s' is not valid for enum of type '%s'\" value originalType.Name\r\n            | other ->\r\n                failwithf \"The value '%s' cannot be converted to enum of type '%s'\" value originalType.Name\r\n        | JNumber value, TypeInfo.Enum getElemType ->\r\n            let (_, originalType) = getElemType()\r\n            unbox value\r\n        // byte[] coming from the server is serialized as base64 string\r\n        // convert it back to the actual byte array\r\n        | JString value, TypeInfo.Array getElemType ->\r\n            let elemType = getElemType()\r\n            match elemType with\r\n            | TypeInfo.Byte ->\r\n                if insideWorker || insideBrowser\r\n                then unbox (Convert.FromBase64String value)\r\n                else unbox (Node.bytesFromBase64 value)\r\n            | otherType -> failwithf \"Cannot convert arbitrary string '%s' to %A\" value otherType\r\n\r\n        // null values for strings are just the null string\r\n        | JNull, TypeInfo.String -> unbox null\r\n        | JNull, TypeInfo.Unit -> unbox ()\r\n        | genericJson, TypeInfo.Object -> unbox (SimpleJson.toPlainObject genericJson)\r\n        // int64 as string -> parse it\r\n        | JString value, TypeInfo.Long -> unbox (int64 value)\r\n        | JString value, TypeInfo.Byte -> unbox (byte value)\r\n        | JNumber value, TypeInfo.Byte -> unbox (byte value)\r\n        | JNumber value, TypeInfo.SByte -> unbox (sbyte value)\r\n        | JString value, TypeInfo.SByte -> unbox (sbyte value)\r\n        // BigInt as string -> parse it\r\n        | JString value, TypeInfo.BigInt -> unbox (BigInteger.Parse value)\r\n        | JNumber value, TypeInfo.BigInt -> unbox (bigint (JS.Math.floor(value)))\r\n        // parse formatted date time\r\n        | JString value, TypeInfo.DateTime -> unbox (DateTime.Parse(value))\r\n        // parse formatted date time offset\r\n        | JString value, TypeInfo.DateTimeOffset -> unbox (DateTimeOffset.Parse(value))\r\n        | JNumber value, TypeInfo.DateTimeOffset ->\r\n            let seconds = int64 (JS.Math.floor(value))\r\n            unbox (DateTimeOffset.FromUnixTimeSeconds seconds)\r\n#if NET6_0_OR_GREATER\r\n        // TimeOnly, DateOnly\r\n        | JNumber value, TypeInfo.DateOnly -> unbox (DateOnly.FromDayNumber (int value))\r\n        | JString value, TypeInfo.DateOnly -> unbox (DateOnly.FromDayNumber (int value))\r\n        | JString value, TypeInfo.TimeOnly -> unbox (TimeOnly (int64 value))\r\n#endif\r\n\r\n        // deserialize union from objects\r\n        // { \"One\": 20 } or {\"One\": [20]} -> One of int\r\n        | JObject values, TypeInfo.Union (getTypes) ->\r\n            let (cases, unionType) = getTypes()\r\n            match Map.toList values with\r\n            | [ caseName, JArray values ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | None ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && arrayLike foundCase.CaseTypes.[0] ->\r\n                        let deserialized = fromJsonAs (JArray values) foundCase.CaseTypes.[0]\r\n                        FSharpValue.MakeUnion(foundCase.Info, [| deserialized |])\r\n                        |> unbox\r\n                    | Some foundCase when Array.length foundCase.CaseTypes = 1 && optional foundCase.CaseTypes.[0] ->\r\n                        let parsedOptional = unbox (fromJsonAs (JArray values) foundCase.CaseTypes.[0])\r\n                        FSharpValue.MakeUnion(foundCase.Info, [| parsedOptional |])\r\n                        |> unbox\r\n                    | Some foundCase ->\r\n                        if Array.length foundCase.CaseTypes = 1\r\n                            && not (arrayLike foundCase.CaseTypes.[0])\r\n                            && Array.length foundCase.CaseTypes <> List.length values\r\n                        then failwithf \"Expected case '%s' to have %d argument types but the JSON data only contained %d values\" foundCase.CaseName (Array.length foundCase.CaseTypes) (List.length values)\r\n                        let parsedValues =\r\n                            Array.ofList values\r\n                            |> Array.zip foundCase.CaseTypes\r\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\r\n                        FSharpValue.MakeUnion(foundCase.Info, parsedValues)\r\n                        |> unbox\r\n            | [ caseName, NonArray json ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = [| caseType |] }) ->\r\n                        FSharpValue.MakeUnion(caseInfo, [| unbox fromJsonAs json caseType |])\r\n                        |> unbox\r\n                    | _ ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n\r\n            // Specific for Fable 3\r\n            | otherwise when Map.containsKey \"tag\" values && Map.containsKey \"fields\" values && Map.count values = 2 ->\r\n                match Map.tryFind \"tag\" values, Map.tryFind \"fields\" values with\r\n                | Some (JNumber caseIndex), Some (JArray fieldValues) ->\r\n                    let foundCase = cases.[int caseIndex]\r\n                    let values =\r\n                        fieldValues\r\n                        |> Array.ofList\r\n                        |> Array.mapi (fun index value -> fromJsonAs value (foundCase.CaseTypes.[index]))\r\n\r\n                    FSharpValue.MakeUnion(foundCase.Info, values)\r\n                | _ ->\r\n                    failwithf \"Could not deserialize JSON(%s) into type %s\" (SimpleJson.toString (JObject values)) unionType.FullName\r\n\r\n            | otherwise when unionOfRecords typeInfo ->\r\n                let discriminators = [\"__typename\"; \"$typename\"; \"$type\" ]\r\n                let foundDiscriminatorKey =\r\n                    discriminators\r\n                    |> List.tryFind (fun keyword -> Map.containsKey keyword values)\r\n\r\n                match foundDiscriminatorKey with\r\n                | None ->\r\n                    failwithf \"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected '__typename', '$typeName' or '$type'\" unionType.Name\r\n                | Some discriminatorKey ->\r\n                    let discriminatorValueJson = Map.find discriminatorKey values\r\n                    match discriminatorValueJson with\r\n                    | JString discriminatorValue ->\r\n                        let foundUnionCase =\r\n                            cases\r\n                            |> Seq.tryFind (fun case -> case.CaseName.ToUpperInvariant() = discriminatorValue.ToUpperInvariant())\r\n\r\n                        match foundUnionCase with\r\n                        | None ->\r\n                            failwithf \"Union of records of type '%s' does not have a matching case '%s'\" unionType.Name discriminatorValue\r\n                        | Some case ->\r\n                            // Assuming the case types is [recordType]\r\n                            // one element of types and the first element is a record\r\n                            // as satisfied by the unionOfRecords function\r\n                            let record = unbox (fromJsonAs (JObject values) (case.CaseTypes.[0]))\r\n                            FSharpValue.MakeUnion(case.Info, [| record |])\r\n                    | otherwise ->\r\n                        failwithf \"Union of records of type '%s' cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\" unionType.Name\r\n            | otherwise ->\r\n                // TODO!!! Better error messages here\r\n                let unexpectedJson = JS.JSON.stringify otherwise\r\n                let expectedType = JS.JSON.stringify cases\r\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\r\n        | JNull, TypeInfo.Option _ -> unbox None\r\n        | jsonValue, TypeInfo.Option optionalTypeDelayed when jsonValue <> JNull ->\r\n            let optionalType = optionalTypeDelayed()\r\n            let parsedOptional = unbox (fromJsonAs jsonValue optionalType)\r\n            unbox Some parsedOptional\r\n        | JString value, TypeInfo.Guid _ -> unbox (System.Guid.Parse(value))\r\n        // int64 as a number, convert it to int then to in64\r\n        | JNumber value , TypeInfo.Long _ -> unbox int64 (int value)\r\n        // int64 as the internal representation from Long.js\r\n        // then reconstruct it from the high/low (two integers) components\r\n        | JObject dict, TypeInfo.Long _ ->\r\n            let get key = Map.tryFind key dict\r\n            [ get \"low\"; get \"high\"; get \"unsigned\" ]\r\n            |> List.choose id\r\n            |> function\r\n                | [ JNumber low; JNumber high; JBool _ ] ->\r\n                    let lowBytes = BitConverter.GetBytes(int low)\r\n                    let highBytes = BitConverter.GetBytes(int high)\r\n                    let combinedBytes = Array.concat [ lowBytes; highBytes ]\r\n                    BitConverter.ToInt64(combinedBytes, 0)\r\n                    |> unbox\r\n                | _ -> failwithf \"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"\r\n        // convert a single case string to union\r\n        // \"One\" -> One, here is a special case where the case in quoted inside the string\r\n        | JString caseName, TypeInfo.Union getTypes when isQuoted caseName ->\r\n            let (caseTypes, unionType) = getTypes()\r\n            caseTypes\r\n            |> Array.tryFind (fun case -> case.CaseName = removeQuotes caseName)\r\n            |> function\r\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                | None ->\r\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\r\n                    let expectedCases = String.concat \", \" caseNames\r\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n        // convert a single case string to union\r\n        // \"One\" -> One\r\n        | JString caseName, TypeInfo.Union getTypes ->\r\n            let (caseTypes, unionType) = getTypes()\r\n            caseTypes\r\n            |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n            |> function\r\n                | Some ({ Info = caseInfo }) -> unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                | None ->\r\n                    let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) caseTypes\r\n                    let expectedCases = String.concat \", \" caseNames\r\n                    failwithf \"Case %s was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n        | JString serializedRecord, TypeInfo.Record getFields ->\r\n            fromJsonAs (SimpleJson.parse serializedRecord) typeInfo\r\n        // convert unions from arrays\r\n        // [\"One\", 20] -> One of int\r\n        | JArray caseValue, TypeInfo.Union getTypes ->\r\n            let (cases, unionType) = getTypes()\r\n            match caseValue with\r\n            // Union case without values\r\n            | [ JString caseName ] ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | Some ({ CaseName = caseName; Info = caseInfo; CaseTypes = caseInfoTypes }) ->\r\n                        // single case without values\r\n                        unbox (FSharpValue.MakeUnion(caseInfo, [||]))\r\n                    | None ->\r\n                        let caseNames = Array.map (fun case -> sprintf \" '%s' \" case.CaseName) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case '%s' was not valid for type '%s', expected one of the cases [%s]\" caseName unionType.Name expectedCases\r\n            | JString caseName :: values ->\r\n                cases\r\n                |> Array.tryFind (fun case -> case.CaseName = caseName)\r\n                |> function\r\n                    | None ->\r\n                        let caseNames = Array.map (fun ({ CaseName = name }) -> name) cases\r\n                        let expectedCases = String.concat \", \" caseNames\r\n                        failwithf \"Case %s was not valid, expected one of [%s]\" caseName expectedCases\r\n                    | Some ({ CaseName = foundCaseName; Info = caseInfo; CaseTypes = types }) ->\r\n                        if Array.length types <> List.length values\r\n                        then failwithf \"The number of union case parameters for '%s' is different\" foundCaseName\r\n                        let parsedValues =\r\n                            Array.ofList values\r\n                            |> Array.zip types\r\n                            |> Array.map (fun (valueType, value) -> fromJsonAs value valueType)\r\n                        FSharpValue.MakeUnion(caseInfo, parsedValues)\r\n                        |> unbox\r\n            | otherwise ->\r\n                let unexpectedJson = JS.JSON.stringify otherwise\r\n                let expectedType = JS.JSON.stringify cases\r\n                failwithf \"Expected JSON:\\n%s\\nto match the type\\n%s\" unexpectedJson expectedType\r\n        // Arrays\r\n        | JArray values, TypeInfo.Array elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> Array.ofList\r\n            |> unbox\r\n        // Lists\r\n        | JArray values, TypeInfo.List elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> unbox\r\n\r\n        // Specific for Fable 3\r\n        | JObject linkedList, TypeInfo.List elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            let flattenedList = flattenFable3Lists linkedList\r\n            flattenedList\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> unbox\r\n\r\n        | JArray values, TypeInfo.Set elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            values\r\n            |> List.map (fun value -> unbox (fromJsonAs value elementType))\r\n            |> Set.ofList\r\n            |> unbox\r\n\r\n        | JArray values, TypeInfo.Seq elementTypeDelayed ->\r\n            let elementType = elementTypeDelayed()\r\n            let converted = List.map (fun value -> unbox (fromJsonAs value elementType)) values\r\n            unbox converted\r\n        // Tuples, become just arrays\r\n        | JArray array, TypeInfo.Tuple tupleTypesDelayed ->\r\n            let tupleTypes = tupleTypesDelayed()\r\n            array\r\n            |> Array.ofList\r\n            |> Array.zip tupleTypes\r\n            |> Array.map (fun (jsonType, jsonData) -> fromJsonAs jsonData jsonType)\r\n            |> unbox\r\n        // Records\r\n        | JObject dict, TypeInfo.Record getTypes ->\r\n            let fields, recordType = getTypes()\r\n            // Match the JSON object literal keys with their types\r\n            let recordValues =\r\n                let values = Map.toList dict\r\n                fields\r\n                |> Array.map (fun ({ FieldName = fieldName; FieldType = fieldType }) ->\r\n                    values\r\n                    |> List.tryFind (fun (key, value) -> fieldName = key)\r\n                    |> function\r\n                        | Some (key, value) -> unbox (fromJsonAs value fieldType)\r\n                        | None ->\r\n                            match fieldType with\r\n                            // field type is an option of something, just return None\r\n                            | TypeInfo.Option _ -> unbox None\r\n                            | _ ->\r\n                              // field type is required and it doens't exist in the JSON\r\n                              // then generate a nice error message\r\n                              let dictKeys =\r\n                                  Map.toList dict\r\n                                  |> List.map (fst >> sprintf \"'%s'\")\r\n                                  |> String.concat \", \"\r\n                                  |> sprintf \"[ %s ]\"\r\n                              let recordFields =\r\n                                  fields\r\n                                  |> Array.map (fun ({ FieldName = name; FieldType = innerFieldType }) ->\r\n                                      match innerFieldType with\r\n                                      | TypeInfo.Option _ -> sprintf \"optional('%s')\" name\r\n                                      | _ -> sprintf \"required('%s')\" name)\r\n                                  |> String.concat \", \"\r\n                                  |> sprintf \"[ %s ]\"\r\n                              failwithf \"Could not find the required key '%s' in the JSON object literal with keys %s to match with record type '%s' that has fields %s\" fieldName dictKeys recordType.Name recordFields)\r\n            unbox (FSharpValue.MakeRecord(recordType, recordValues))\r\n\r\n        | JArray tuples, TypeInfo.Map getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            let pairs =\r\n                [ for keyValuePair in tuples do\r\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (let a = [| keyType; valueType |] in fun () -> a))\r\n                    yield tuple ]\r\n            match keyType with\r\n            | TypeInfo.Int32\r\n            | TypeInfo.String\r\n            | TypeInfo.Bool ->\r\n                pairs\r\n                |> unbox<(string * obj) list>\r\n                |> Map.ofList\r\n                |> unbox\r\n            | _ ->\r\n                pairs\r\n                |> unbox<(IStructuralComparable * obj) list>\r\n                |> Map.ofList\r\n                |> unbox\r\n\r\n        | JArray tuples, TypeInfo.Dictionary getTypes ->\r\n            let (keyType, valueType, originalType) = getTypes()\r\n            let pairs =\r\n                [ for keyValuePair in tuples do\r\n                    let tuple = fromJsonAs keyValuePair (TypeInfo.Tuple (fun () -> [| keyType; valueType |]))\r\n                    yield tuple ]\r\n\r\n            let output =\r\n                match keyType with\r\n                | TypeInfo.Union _ ->  Dictionary<Result<_, _>, _>()\r\n                | TypeInfo.Record _ -> Dictionary<{| dummy: int |}, _>() |> unbox\r\n                | _ -> Dictionary<IStructuralComparable, _>() |> unbox\r\n\r\n            for (key, value) in (unbox<(IStructuralComparable * obj) list> pairs) do output.Add(unbox key, value)\r\n            unbox output\r\n\r\n        | JObject dict, TypeInfo.Dictionary getTypes ->\r\n            let (keyType, valueType, originalType) = getTypes()\r\n            dict\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> fromJsonAs (JString key) keyType, fromJsonAs value valueType )\r\n            |> fun pairs ->\r\n                let output =\r\n                    match keyType with\r\n                    | TypeInfo.Union _ -> Dictionary<Result<_, _>, _>()\r\n                    | TypeInfo.Record _ -> Dictionary<{| dummy: int |}, _>() |> unbox\r\n                    | _ -> Dictionary<IStructuralComparable, _>() |> unbox\r\n\r\n                for (key, value) in pairs do output.Add(unbox key, value)\r\n\r\n                unbox output\r\n\r\n        | JArray items, TypeInfo.HashSet getType ->\r\n            let elemType = getType()\r\n            let hashset =\r\n                match elemType with\r\n                | TypeInfo.Union _ -> HashSet<Result<_, _>>()\r\n                | TypeInfo.Record _ -> HashSet<{| dummy: int |}>() |> unbox\r\n                | _ -> HashSet<IStructuralComparable>() |> unbox\r\n\r\n            for item in items do\r\n                let deserialized = fromJsonAs item elemType\r\n                hashset.Add(unbox deserialized) |> ignore\r\n\r\n            unbox hashset\r\n\r\n        | JObject map, TypeInfo.Map getTypes ->\r\n            let (keyType, valueType) = getTypes()\r\n            // check whether the map is serialized to it's internal representation\r\n            // and convert that to back to a normal map from the data\r\n            match Map.tryFind \"comparer\" map, Map.tryFind \"tree\" map with\r\n            | Some (JObject comparer), Some (JArray tree) when Map.isEmpty comparer ->\r\n                match generateMap (JArray tree) with\r\n                | Some internalMap ->\r\n                    let pairs =\r\n                        flattenMap internalMap\r\n                        |> List.map (fun (key, value) ->\r\n                            let nextKey =\r\n                                if not (isQuoted key)\r\n                                then unbox (fromJsonAs (JString key) keyType)\r\n                                else unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                            let nextValue = unbox (fromJsonAs value valueType)\r\n                            unbox<obj> nextKey, nextValue)\r\n                    match keyType with\r\n                    | TypeInfo.Int32\r\n                    | TypeInfo.String\r\n                    | TypeInfo.Bool ->\r\n                        pairs\r\n                        |> unbox<(string * obj) list>\r\n                        |> Map.ofList\r\n                        |> unbox\r\n                    | _ ->\r\n                        pairs\r\n                        |> unbox<(IStructuralComparable * obj) list>\r\n                        |> Map.ofList\r\n                        |> unbox\r\n\r\n                | None ->\r\n                    let inputJson = SimpleJson.toString (JArray tree)\r\n                    failwithf \"Could not generate map from JSON\\n %s\" inputJson\r\n\r\n            // Specific for Fable 3\r\n            | Some (JObject comparer), Some (JObject tree) when Map.isEmpty comparer ->\r\n                let flattenedMap = Map.ofList (flatteFable3Map tree)\r\n                fromJsonAs (JObject flattenedMap) typeInfo\r\n            | _ ->\r\n                // if comparer and tree are not present,\r\n                // assume we are parsing Fable 1 object literal\r\n                // and converting that to map\r\n                let pairs =\r\n                    map\r\n                    |> Map.toList\r\n                    |> List.map (fun (key, value) ->\r\n                        let nextKey =\r\n                            if not (isQuoted key)\r\n                            then\r\n                                if Converter.isPrimitive keyType || Converter.enumUnion keyType\r\n                                then\r\n                                    // for primitive type, just read them as string and parse\r\n                                    unbox (fromJsonAs (JString key) keyType)\r\n                                else\r\n                                    // server-side JSON can still be complex (for complex types)\r\n                                    // but doesn't have to be quoted, parse again here\r\n                                    unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                            else\r\n                                unbox (fromJsonAs (SimpleJson.parseNative key) keyType)\r\n                        let nextValue = unbox (fromJsonAs value valueType)\r\n                        unbox<string> nextKey, nextValue)\r\n\r\n                match keyType with\r\n                | TypeInfo.Int32\r\n                | TypeInfo.String\r\n                | TypeInfo.Bool ->\r\n                    pairs\r\n                    |> unbox<(string * obj) list>\r\n                    |> Map.ofList\r\n                    |> unbox\r\n                | _ ->\r\n                    pairs\r\n                    |> unbox<(IStructuralComparable * obj) list>\r\n                    |> Map.ofList\r\n                    |> unbox\r\n        | _, TypeInfo.Any getType ->\r\n            let unknownType = getType()\r\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) unknownType.FullName\r\n        | _ ->\r\n            failwithf \"Cannot convert %s to %s\" (SimpleJson.toString input) (JS.JSON.stringify typeInfo)\r\n\r\n    let fromJson<'t> json typeInfo =\r\n        unbox<'t> (fromJsonAs json typeInfo)\r\n\r\n    let quoteText (inputText: string) : string = importDefault \"./quote.js\"\r\n\r\n    let rec serialize value (typeInfo: TypeInfo) =\r\n        match typeInfo with\r\n        | TypeInfo.String ->\r\n            let content = unbox<string> value\r\n            if isNull content\r\n            then \"null\"\r\n            else quoteText content\r\n        | TypeInfo.Unit -> \"null\"\r\n        | TypeInfo.Float\r\n        | TypeInfo.Float32 ->\r\n            if Double.IsNaN(unbox value)\r\n            then quoteText \"NaN\"\r\n            else string (unbox<double> value)\r\n        | TypeInfo.Char -> quoteText (string (unbox<char> value))\r\n        | TypeInfo.Byte\r\n        | TypeInfo.SByte\r\n        | TypeInfo.UInt16\r\n        | TypeInfo.UInt32\r\n        | TypeInfo.Short\r\n        | TypeInfo.Enum _\r\n        | TypeInfo.TimeSpan\r\n        | TypeInfo.Int32 -> string (unbox<int> value)\r\n        | TypeInfo.UInt64\r\n        | TypeInfo.Long -> betweenQuotes (string (unbox<int64> value))\r\n        | TypeInfo.BigInt -> betweenQuotes (string (unbox<bigint> value))\r\n        | TypeInfo.Decimal -> betweenQuotes (string (unbox<decimal> value))\r\n        | TypeInfo.Bool -> if unbox<bool> value then \"true\" else \"false\"\r\n        | TypeInfo.Guid -> betweenQuotes ((unbox<Guid> value).ToString())\r\n        | TypeInfo.Uri -> betweenQuotes ((unbox<Uri> value).ToString())\r\n        | TypeInfo.DateTime -> betweenQuotes ((unbox<DateTime> value).ToString(\"O\"))\r\n        | TypeInfo.DateTimeOffset -> betweenQuotes ((unbox<DateTimeOffset> value).ToString(\"O\"))\r\n#if NET6_0_OR_GREATER\r\n        | TypeInfo.DateOnly -> string (unbox<DateOnly> value).DayNumber\r\n        | TypeInfo.TimeOnly -> betweenQuotes (string (unbox<TimeOnly> value).Ticks)\r\n#endif\r\n        | TypeInfo.Record getFields ->\r\n            let (fieldTypes, recordType) = getFields()\r\n            let serializedFields =\r\n                fieldTypes\r\n                |> Array.map (fun field ->\r\n                    let fieldValue = FSharpValue.GetRecordField(value, field.PropertyInfo)\r\n                    sprintf \"\\\"%s\\\": %s\" field.FieldName (serialize fieldValue field.FieldType)\r\n                )\r\n\r\n            \"{\" + String.concat \", \" serializedFields + \"}\"\r\n\r\n        | TypeInfo.ResizeArray getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<ResizeArray<obj>>\r\n                |> Seq.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.HashSet getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<HashSet<obj>>\r\n                |> Seq.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.Set getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<Set<IComparable>>\r\n                |> Seq.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.Array getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<obj []>\r\n                |> Array.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.List getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<obj list>\r\n                |> List.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.Seq getElementType ->\r\n            let elementType = getElementType()\r\n            let values =\r\n                value\r\n                |> unbox<obj seq>\r\n                |> Seq.toArray\r\n                |> Array.map (fun element -> serialize element elementType)\r\n                |> String.concat \", \"\r\n\r\n            \"[\" + values + \"]\"\r\n\r\n        | TypeInfo.Option getElementType ->\r\n            match unbox<obj option> value with\r\n            | None -> \"null\"\r\n            | Some existingValue -> serialize existingValue (getElementType())\r\n\r\n        | TypeInfo.Union getCases ->\r\n            let (unionCases, unionType) = getCases()\r\n            let (usedCase, fields) = FSharpValue.GetUnionFields(value, unionType)\r\n            let caseTypes =\r\n                unionCases\r\n                |> Array.find (fun case -> case.CaseName = usedCase.Name)\r\n                |> fun case -> case.CaseTypes\r\n\r\n            if enumUnion typeInfo || Array.isEmpty caseTypes then\r\n                betweenQuotes usedCase.Name\r\n            elif caseTypes.Length = 1 then\r\n                \"{\" + betweenQuotes usedCase.Name + \": \" + serialize fields.[0] caseTypes.[0] + \"}\"\r\n            else\r\n                let serializedFields =\r\n                    caseTypes\r\n                    |> Array.mapi (fun index caseType -> serialize fields.[index] caseType)\r\n                    |> String.concat \", \"\r\n\r\n                \"{\" + betweenQuotes usedCase.Name + \": \" + \"[\" + serializedFields + \"] }\"\r\n\r\n        | TypeInfo.Map getPairTypes ->\r\n            let (keyType, valueType) = getPairTypes()\r\n\r\n            let serializedValues =\r\n                value\r\n                |> unbox<Map<IComparable, obj>>\r\n                |> Map.toArray\r\n                |> Array.map (fun (key, value) ->\r\n                    let serializedKey = serialize key keyType\r\n                    let serializedValue = serialize value valueType\r\n\r\n                    if isPrimitive keyType || enumUnion keyType then\r\n                        if not (isQuoted serializedKey)\r\n                        then (quoteText serializedKey) + \": \" + serializedValue\r\n                        else serializedKey + \": \" + serializedValue\r\n                    else\r\n                        \"[\" + serializedKey + \", \" + serializedValue + \"]\"\r\n                )\r\n                |> String.concat \", \"\r\n\r\n            if isPrimitive keyType || enumUnion keyType\r\n            then \"{\" + serializedValues + \"}\"\r\n            else \"[\" + serializedValues + \"]\"\r\n\r\n        | TypeInfo.Dictionary getPairTypes ->\r\n            let (keyType, valueType, originalType) = getPairTypes()\r\n            let serializedValues =\r\n                value\r\n                |> unbox<Dictionary<IComparable, obj>>\r\n                |> Seq.map (fun pair ->\r\n                    let (key, value) = pair.Key, pair.Value\r\n                    let serializedKey = serialize key keyType\r\n                    let serializedValue = serialize value valueType\r\n\r\n                    if isPrimitive keyType || enumUnion keyType then\r\n                        if not (isQuoted serializedKey)\r\n                        then (betweenQuotes serializedKey) + \": \" + serializedValue\r\n                        else serializedKey + \": \" + serializedValue\r\n                    else\r\n                        \"[\" + serializedKey + \", \" + serializedValue + \"]\"\r\n                )\r\n                |> String.concat \", \"\r\n\r\n            if isPrimitive keyType || enumUnion keyType\r\n            then \"{\" + serializedValues + \"}\"\r\n            else \"[\" + serializedValues + \"]\"\r\n\r\n        | TypeInfo.Tuple getTupleTypes ->\r\n            let tupleTypes = getTupleTypes()\r\n\r\n            if tupleTypes.Length = 1 then\r\n                \"[\" + serialize value tupleTypes.[0] + \"]\"\r\n            else\r\n                let serializedValues =\r\n                    value\r\n                    |> unbox<obj array>\r\n                    |> Array.mapi (fun index element -> serialize element tupleTypes.[index])\r\n                    |> String.concat \", \"\r\n\r\n                \"[\" + serializedValues + \"]\"\r\n\r\n        | TypeInfo.Object ->\r\n            SimpleJson.stringify value\r\n\r\n        | TypeInfo.Any getType ->\r\n            // fallback to low-level serialization\r\n            SimpleJson.stringify value\r\n\r\n        | _ ->\r\n            \"null\"\r\n\r\n[<AutoOpenAttribute>]\r\nmodule ConverterExtensions =\r\n    type Json with\r\n\r\n        /// <summary>\r\n        /// Serialized the input value object into JSON, uses built-in JSON.stringify and should be used with Fable 2.x or earlier\r\n        /// </summary>\r\n        static member stringify (value: obj) : string =\r\n            if Convert.isUsingFable3\r\n            then JS.console.warn(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\")\r\n            SimpleJson.stringify value\r\n\r\n        /// <summary>\r\n        /// Serialized the input value into JSON using Reflection. Compatible with Fable 2.x and Fable 3 (codename: nagareyama)\r\n        /// </summary>\r\n        static member inline serialize<'t> (value: 't) : string =\r\n            let typeInfo = TypeInfo.createFrom<'t>()\r\n            Convert.serialize value typeInfo\r\n\r\n        /// Parses the input string as JSON and tries to convert it as the given type argument\r\n        static member inline parseAs<'t> (input: string) : 't =\r\n            match SimpleJson.tryParse input with\r\n            | None -> failwith \"Couldn't parse the input JSON string because it seems to be invalid\"\r\n            | Some inputJson ->\r\n                let typeInfo = TypeInfo.createFrom<'t> ()\r\n                Convert.fromJson<'t> inputJson typeInfo\r\n\r\n        /// Parses the input string as JSON using native parsing and tries to convert it as the given type argument\r\n        static member inline parseNativeAs<'t> (input: string) : 't =\r\n            let inputJson = SimpleJson.parseNative input\r\n            let typeInfo = TypeInfo.createFrom<'t> ()\r\n            Convert.fromJson<'t> inputJson typeInfo\r\n\r\n        /// Tries to parse the input string as JSON and tries to convert it as the given type argument, returing a (hopefully) useful error message when it fails\r\n        static member inline tryParseAs<'t> (input: string) : Result<'t, string> =\r\n            try Ok (Json.parseAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n\r\n        /// Tries to parse the input string as JSON using native parsing and tries to convert it as the given type argument\r\n        static member inline tryParseNativeAs<'t> (input: string) : Result<'t, string> =\r\n            try Ok (Json.parseNativeAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n\r\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\r\n        static member inline convertFromJsonAs<'t> (input: Json) : 't =\r\n            let typeInfo = TypeInfo.createFrom<'t> ()\r\n            Convert.fromJson<'t> input typeInfo\r\n\r\n        /// Tries to convert parsed JSON object as the given type parameter argument, this method is used when you want to apply transformations to the JSON object before parsing\r\n        static member inline tryConvertFromJsonAs<'t> (input: Json) : Result<'t, string> =\r\n            try Ok (Json.convertFromJsonAs<'t> input)\r\n            with | ex -> Error ex.Message\r\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    x = (x === undefined) ? null : x;\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\nexport function map(f, arg) {\n    return arg == null ? null : some(f(value(arg)));\n}\nexport function mapMultiple(predicate, ...args) {\n    return args.every((x) => x != null) ? predicate.apply(null, args) : null;\n}\nexport function bind(f, arg) {\n    return arg == null ? null : f(value(arg));\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return null;\n    }\n}\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n//# sourceMappingURL=Option.js.map","export function tryParse(str) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            return [true, v];\n        }\n    }\n    return [false, 0];\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n//# sourceMappingURL=Double.js.map","import { List, declare, Record } from \"../Types.js\";\nimport { record, array, int32 } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(arg1, arg2) {\n  this.bound = arg1 | 0;\n  this.digits = arg2;\n}, Record);\nexport function BigNat$reflection() {\n  return record(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32], [\"digits\", array(int32)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32($x$$1, $n$$2) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    const x = $x$$1,\n          n = $n$$2;\n\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      $x$$1 = x * x;\n      $n$$2 = ~~(n / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power($b$$1$$4, $tp$$5, $i$$6) {\n    findBounding2Power: while (true) {\n      const b$$1 = $b$$1$$4,\n            tp = $tp$$5,\n            i = $i$$6;\n\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        $b$$1$$4 = b$$1;\n        $tp$$5 = tp * 2;\n        $i$$6 = i + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nconst BigNatModule$002EFFT$$$patternInput$004074 = [fromBits(2013265921, 0, false), 27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004074[4];\nexport const BigNatModule$002EFFT$$$p = BigNatModule$002EFFT$$$patternInput$004074[0];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004074[2];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004074[1];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004074[3];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow($x$$3$$9, $n$$1$$10) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    const x$$3 = $x$$3$$9,\n          n$$1 = $n$$1$$10;\n\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      $x$$3$$9 = toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$1$$10 = ~~(n$$1 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      const y$$2 = BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(y$$2, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL($x$$7$$11, $n$$2$$12) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    const x$$7 = $x$$7$$11,\n          n$$2 = $n$$2$$12;\n\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      $x$$7$$11 = toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$2$$12 = op_Division(n$$2, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      const y$$5 = BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false)));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(y$$5, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      let y$$8;\n      const x$$13 = wj;\n      y$$8 = toInt(op_Modulus(op_Multiply(fromInteger(x$$13, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offset + j] = (even + y$$8) % BigNatModule$002EFFT$002EFp$$$p;\n      let y$$10;\n      const x$$15 = wj;\n      y$$10 = toInt(op_Modulus(op_Multiply(fromInteger(x$$15, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - y$$10) % BigNatModule$002EFFT$002EFp$$$p;\n      const y$$11 = wj;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y$$11, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  BigNatModule$002EFFT$$$computeFFT(1, 0, n$$5, w$$1, u$$1, res$$1, 0);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, v);\n  const rT = initialize(bigK, function (i$$2) {\n    const x$$19 = uT$$1[i$$2];\n    const y$$14 = vT[i$$2];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$19, true, 6), fromInteger(y$$14, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(bigK, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, v$$2);\n  const rT$$1 = initialize(patternInput[0], function (i$$4) {\n    const x$$20 = uT$$2[i$$4];\n    const y$$15 = vT$$1[i$$4];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$20, true, 6), fromInteger(y$$15, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(patternInput[0], w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64($x$$23$$48, $n$$15$$49) {\n  BigNatModule$$$pow64: while (true) {\n    const x$$23 = $x$$23$$48,\n          n$$15 = $n$$15$$49;\n\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      $x$$23$$48 = op_Multiply(x$$23, x$$23);\n      $n$$15$$49 = ~~(n$$15 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32($x$$24$$50, $n$$16$$51) {\n  BigNatModule$$$pow32: while (true) {\n    const x$$24 = $x$$24$$50,\n          n$$16 = $n$$16$$51;\n\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      $x$$24$$50 = x$$24 * x$$24;\n      $n$$16$$51 = ~~(n$$16 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound($na$$62, $i$$9$$63) {\n    findLeastBound: while (true) {\n      const na = $na$$62,\n            i$$9 = $i$$9$$63;\n\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        $na$$62 = na;\n        $i$$9$$63 = i$$9 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP($i$$16$$75, $n$$25$$76, $c$$77, $p$$78, $q$$79, $r$$5$$80) {\n  BigNatModule$$$addP: while (true) {\n    const i$$16 = $i$$16$$75,\n          n$$25 = $n$$25$$76,\n          c = $c$$77,\n          p = $p$$78,\n          q = $q$$79,\n          r$$5 = $r$$5$$80;\n\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      $i$$16$$75 = i$$16 + 1;\n      $n$$25$$76 = n$$25;\n      $c$$77 = c$$1;\n      $p$$78 = p;\n      $q$$79 = q;\n      $r$$5$$80 = r$$5;\n      continue BigNatModule$$$addP;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  BigNatModule$$$addP(0, rbound, 0, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP($i$$19$$83, $n$$26$$84, $c$$2$$85, $p$$2$$86, $q$$2$$87, $r$$7$$88) {\n  BigNatModule$$$subP: while (true) {\n    const i$$19 = $i$$19$$83,\n          n$$26 = $n$$26$$84,\n          c$$2 = $c$$2$$85,\n          p$$2 = $p$$2$$86,\n          q$$2 = $q$$2$$87,\n          r$$7 = $r$$7$$88;\n\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$3;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$4;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, 0, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check($pa$$96, $qa$$97, $i$$22$$98) {\n      check: while (true) {\n        const pa = $pa$$96,\n              qa = $qa$$97,\n              i$$22 = $i$$22$$98;\n\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          $pa$$96 = pa;\n          $qa$$97 = qa;\n          $i$$22$$98 = i$$22 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1($pa$$1$$103, $qa$$1$$104, $i$$23$$105) {\n      check$$1: while (true) {\n        const pa$$1 = $pa$$1$$103,\n              qa$$1 = $qa$$1$$104,\n              i$$23 = $i$$23$$105;\n\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            $pa$$1$$103 = pa$$1;\n            $qa$$1$$104 = qa$$1;\n            $i$$23$$105 = i$$23 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2($pa$$2$$108, $qa$$2$$109, $i$$24$$110) {\n      check$$2: while (true) {\n        const pa$$2 = $pa$$2$$108,\n              qa$$2 = $qa$$2$$109,\n              i$$24 = $i$$24$$110;\n\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          $pa$$2$$108 = pa$$2;\n          $qa$$2$$109 = qa$$2;\n          $i$$24$$110 = i$$24 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr($a$$4$$123, $i$$25$$124, $c$$5$$125) {\n  BigNatModule$$$contributeArr: while (true) {\n    const a$$4 = $a$$4$$123,\n          i$$25 = $i$$25$$124,\n          c$$5 = $c$$5$$125;\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    let x$$38;\n    const value = op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64);\n    x$$38 = ~~toInt(value);\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      $a$$4$$123 = a$$4;\n      $i$$25$$124 = i$$25 + 1;\n      $c$$5$$125 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  var value$$1;\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, (value$$1 = op_BitwiseAnd(rak, BigNatModule$$$baseMaski64), (~~toInt(value$$1))));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry($r$$12$$130, $c$$8$$131, $k$$4$$132) {\n  var value$$2;\n\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    const r$$12 = $r$$12$$130,\n          c$$8 = $c$$8$$131,\n          k$$4 = $k$$4$$132;\n\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, (value$$2 = op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64), (~~toInt(value$$2))));\n      $r$$12$$130 = r$$12;\n      $c$$8$$131 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      $k$$4$$132 = k$$4 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  var value$$3;\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, (value$$3 = op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64), (~~toInt(value$$3))));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  var value$$4;\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(p$$17.digits[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(q$$14.digits[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(r$$14.digits[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      r$$14.digits[k$$5] = (value$$4 = op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64), (~~toInt(value$$4)));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n  this.bigL = arg1 | 0;\n  this.twoToBigL = arg2 | 0;\n  this.k = arg3 | 0;\n  this.bigK = arg4 | 0;\n  this.bigN = arg5 | 0;\n  this.split = arg6 | 0;\n  this.splits = arg7;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32], [\"twoToBigL\", int32], [\"k\", int32], [\"bigK\", int32], [\"bigN\", int32], [\"split\", int32], [\"splits\", array(int32)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom($i$$31$$145) {\n    selectFrom: while (true) {\n      const i$$31 = $i$$31$$145;\n\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        $i$$31$$145 = i$$31 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi($k$$8$$147) {\n    hi: while (true) {\n      const k$$8 = $k$$8$$147;\n\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        $k$$8$$147 = k$$8 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder($i$$38$$154, $bi$$1$$155) {\n    encoder: while (true) {\n      const i$$38 = $i$$38$$154,\n            bi$$1 = $bi$$1$$155;\n\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {} else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        $i$$38$$154 = i$$39;\n        $bi$$1$$155 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate($i$$41$$160, $j$$2$$161, $d$$3$$162) {\n    evaluate: while (true) {\n      const i$$41 = $i$$41$$160,\n            j$$2 = $j$$2$$161,\n            d$$3 = $d$$3$$162;\n\n      if (i$$41 === enc$$3.bigK) {} else {\n        if (j$$2 >= rbound$$5) {} else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        $i$$41$$160 = i$$43;\n        $j$$2$$161 = patternInput$$1[0];\n        $d$$3$$162 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const r$$18 = BigNatModule$$$add(q0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, q2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    const tupledArg = [z$$7, j$$4, n$$30];\n    let zLo;\n    let value$$6;\n    const x$$59 = z$$7;\n    const value$$5 = op_BitwiseAnd(x$$59, BigNatModule$$$baseMaski64);\n    value$$6 = ~~toInt(value$$5);\n    zLo = value$$6;\n    let zHi;\n    const x$$60 = z$$7;\n    zHi = op_Division(x$$60, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$57);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    const tupledArg$$1 = [z$$8, j$$5, n$$32];\n    let zLo$$1;\n    let value$$8;\n    const x$$64 = z$$8;\n    const value$$7 = op_BitwiseAnd(x$$64, BigNatModule$$$baseMaski64);\n    value$$8 = ~~toInt(value$$7);\n    zLo$$1 = value$$8;\n    let zHi$$1;\n    const x$$65 = z$$8;\n    zHi$$1 = op_Division(x$$65, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$62);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(x$$67.digits[n$$34] / a$$11.digits[0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), fromInteger(a$$11.digits[0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(x$$67.digits[patternInput$$6[1]] / (a$$11.digits[patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(a$$11.digits[patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg$$2) {};\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop($a$$19$$206, $b$$14$$207) {\n    hcfloop: while (true) {\n      const a$$19 = $a$$19$$206,\n            b$$14 = $b$$14$$207;\n\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        $a$$19$$206 = patternInput$$8[1];\n        $b$$14$$207 = a$$19;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power($acc$$2$$210, $x$$70$$211, $n$$37$$212) {\n    power: while (true) {\n      const acc$$2 = $acc$$2$$210,\n            x$$70 = $x$$70$$211,\n            n$$37 = $n$$37$$212;\n\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        $acc$$2$$210 = acc$$2;\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      } else {\n        $acc$$2$$210 = BigNatModule$$$mul(x$$70, acc$$2);\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1($acc$$3$$215, $x$$72$$216, $n$$39$$217) {\n    power$$1: while (true) {\n      const acc$$3 = $acc$$3$$215,\n            x$$72 = $x$$72$$216,\n            n$$39 = $n$$39$$217;\n\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          $acc$$3$$215 = acc$$3;\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          $acc$$3$$215 = BigNatModule$$$mul(x$$72, acc$$3);\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat($acc$$4$$219, $k$$10$$220, $i$$49$$221) {\n    evalFloat: while (true) {\n      const acc$$4 = $acc$$4$$219,\n            k$$10 = $k$$10$$220,\n            i$$49 = $i$$49$$221;\n\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        $acc$$4$$219 = acc$$4 + k$$10 * n$$40.digits[i$$49];\n        $k$$10$$220 = k$$10 * basef;\n        $i$$49$$221 = i$$49 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        const value$$9 = n$$43.digits[0] | 0;\n        return value$$9 >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        const value$$10 = n$$44.digits[0] | 0;\n        return fromInteger(value$$10, true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route($prior$$227, $k$$11$$228, $ten2k$$229) {\n    route: while (true) {\n      const prior = $prior$$227,\n            k$$11 = $k$$11$$228,\n            ten2k = $ten2k$$229;\n\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        $prior$$227 = new List([k$$11, ten2k], prior);\n        $k$$11$$228 = k$$11 + 1;\n        $ten2k$$229 = BigNatModule$$$mul(ten2k, ten2k);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$3) {\n    if (_arg1$$3.tail != null) {\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, _arg1$$3.head[1]);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], _arg1$$3.tail);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], _arg1$$3.tail);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], _arg1$$3.tail);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const digits$$4 = collect(true, new List(), n$$45, kten2ks);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    let arg00;\n    arg00 = ofList(digits$$4, Array);\n    return join(\"\", arg00);\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build($acc$$5$$235, $i$$50$$236) {\n    build: while (true) {\n      const acc$$5 = $acc$$5$$235,\n            i$$50 = $i$$50$$236;\n\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          $acc$$5$$235 = BigNatModule$$$add(BigNatModule$$$mul(ten, acc$$5), BigNatModule$$$embed(d$$7));\n          $i$$50$$236 = i$$50 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","import { declare, Record } from \"../Types.js\";\nimport { type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n}, Record);\nexport function BigInteger$reflection() {\n  return type(\"BigInt.BigInteger\");\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$12;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 3;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 5;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 0;\n    } else {\n      $target$$12 = 9;\n    }\n  } else {\n    $target$$12 = 9;\n  }\n\n  switch ($target$$12) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$17;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 3;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 5;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 0;\n    } else {\n      $target$$17 = 9;\n    }\n  } else {\n    $target$$17 = 9;\n  }\n\n  switch ($target$$17) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$20;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 3;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 5;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 9;\n    }\n  } else {\n    $target$$20 = 9;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n  return obj instanceof BigInteger ? BigInteger$$$op_Equality$$56F059C0(this$, obj) : false;\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(matchValue$$4), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$38;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 3;\n      } else {\n        $target$$38 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 0;\n      } else {\n        $target$$38 = 4;\n      }\n    } else {\n      $target$$38 = 4;\n    }\n\n    switch ($target$$38) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$41;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 3;\n      } else {\n        $target$$41 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 0;\n      } else {\n        $target$$41 = 4;\n      }\n    } else {\n      $target$$41 = 4;\n    }\n\n    switch ($target$$41) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$46;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 3;\n      } else {\n        $target$$46 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 0;\n      } else {\n        $target$$46 = 4;\n      }\n    } else {\n      $target$$46 = 4;\n    }\n\n    switch ($target$$46) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  const tuple = BigInteger$$$DivRem$$56F059C0(x$$16, y$$8);\n  return tuple[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  const tuple$$1 = BigInteger$$$DivRem$$56F059C0(x$$17, y$$9);\n  return tuple$$1[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$68;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 3;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 7;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 0;\n    } else {\n      $target$$68 = 9;\n    }\n  } else {\n    $target$$68 = 9;\n  }\n\n  switch ($target$$68) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$71;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 3;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 7;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 0;\n    } else {\n      $target$$71 = 9;\n    }\n  } else {\n    $target$$71 = 9;\n  }\n\n  switch ($target$$71) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    return BigInteger$$$compare$$56F059C0(this$$$1, obj$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { delay, unfold, rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  var value;\n\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1((value = i$$1, (fromInteger(value, false, 6))));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  if (lowBitFound) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (currByte === 0) {\n    return [0, false];\n  } else {\n    let firstBitIndex;\n    const list = ofSeq(rangeNumber(0, 1, 7));\n    firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, list);\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    let mask32;\n    let i$$3;\n    i$$3 = fromInteger(4294967295, false, 6);\n    mask32 = fromInt64(i$$3);\n\n    const loop = function loop($accumBytes$$74, $consumeValue$$75, $lowBitFound$$1$$76) {\n      var value$$9, value$$10, value$$11;\n\n      loop: while (true) {\n        const accumBytes = $accumBytes$$74,\n              consumeValue = $consumeValue$$75,\n              lowBitFound$$1 = $lowBitFound$$1$$76;\n\n        if (consumeValue.CompareTo(zero) <= 0) {\n          let accumBytes$$1;\n\n          if (isPositive) {\n            accumBytes$$1 = skipWhile(function predicate$$1(b) {\n              return b === 0;\n            }, accumBytes);\n          } else {\n            accumBytes$$1 = skipWhile(function predicate$$2(b$$1) {\n              return b$$1 === 255;\n            }, accumBytes);\n          }\n\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          let array;\n          array = ofList(accumBytes$$2, Uint8Array);\n          return reverse(array, Uint8Array);\n        } else {\n          let currValue;\n          const x$$19 = BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32);\n          currValue = toUInt32(x$$19);\n\n          if (isPositive) {\n            let b0;\n            b0 = currValue & 0xFF;\n            let b1;\n            const value$$5 = currValue >>> 8;\n            b1 = value$$5 & 0xFF;\n            let b2;\n            const value$$6 = currValue >>> 16;\n            b2 = value$$6 & 0xFF;\n            let b3;\n            const value$$7 = currValue >>> 24;\n            b3 = value$$7 & 0xFF;\n            $accumBytes$$74 = new List(b3, new List(b2, new List(b1, new List(b0, accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement((value$$9 = currValue >>> 8, (value$$9 & 0xFF)), patternInput[1]);\n            const patternInput$$2 = flipTwosComplement((value$$10 = currValue >>> 16, (value$$10 & 0xFF)), patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement((value$$11 = currValue >>> 24, (value$$11 & 0xFF)), patternInput$$2[1]);\n            $accumBytes$$74 = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1($accumUInt32$$80, $currIndex$$81, $bytesRemaining$$82, $lowBitFound$$6$$83) {\n      loop$$1: while (true) {\n        const accumUInt32 = $accumUInt32$$80,\n              currIndex = $currIndex$$81,\n              bytesRemaining = $bytesRemaining$$82,\n              lowBitFound$$6 = $lowBitFound$$6$$83;\n\n        if (bytesRemaining === 0) {\n          let value$$14;\n          value$$14 = fold(function folder(acc, value$$12) {\n            var i$$4;\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), (i$$4 = (fromInteger(value$$12, false, 6)), (fromInt64(i$$4))));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$15, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$16, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}\nexport function makeRangeStepFunction(step, last) {\n  const stepComparedWithZero = step.CompareTo(zero) | 0;\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  }\n\n  const stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x$$20) {\n    const comparedWithLast = x$$20.CompareTo(last) | 0;\n    return ((stepGreaterThanZero ? comparedWithLast <= 0 : false) ? true : !stepGreaterThanZero ? comparedWithLast >= 0 : false) ? [x$$20, BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(x$$20, step)] : null;\n  };\n}\nexport function range(first, step$$1, last$$1) {\n  const stepFn = makeRangeStepFunction(step$$1, last$$1);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}","// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            const descr = Object.getOwnPropertyDescriptor(source, key);\n            if (descr) {\n                Object.defineProperty(target, key, descr);\n            }\n        }\n    }\n    return target;\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return x != null && (Array.isArray(x) || ArrayBuffer.isView(x));\n}\nexport function isComparer(x) {\n    return x != null && typeof x.Compare === \"function\";\n}\nexport function isComparable(x) {\n    return x != null && typeof x.CompareTo === \"function\";\n}\nexport function isEquatable(x) {\n    return x != null && typeof x.Equals === \"function\";\n}\nexport function isHashable(x) {\n    return x != null && typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x) && isArrayLike(y)) {\n        return compareArrays(x, y);\n    }\n    else if (x instanceof Date && y instanceof Date) {\n        return compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n//# sourceMappingURL=Util.js.map","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, padWithZeros } from \"./Util\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0))).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), (_b = d.offset, (_b !== null && _b !== void 0 ? _b : 0)));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, (_a = d.offset, (_a !== null && _a !== void 0 ? _a : 0)))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n//# sourceMappingURL=DateOffset.js.map","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    let ar = bytes;\n    if (typeof offset !== \"undefined\" && typeof count !== \"undefined\") {\n        ar = bytes.subarray(offset, offset + count);\n    }\n    else if (typeof offset !== \"undefined\") {\n        ar = bytes.subarray(offset);\n    }\n    return Array.from(ar).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n//# sourceMappingURL=BitConverter.js.map","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + (_a = date.offset, (_a !== null && _a !== void 0 ? _a : 0)));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString((_b = date.offset, (_b !== null && _b !== void 0 ? _b : 0)));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, (_c = date.offset, (_c !== null && _c !== void 0 ? _c : 0)));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + (_a = date.offset, (_a !== null && _a !== void 0 ? _a : 0)), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v == null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\" ? add(d, -that) : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n//# sourceMappingURL=Date.js.map","module.exports = {\n    traits: {\"Type\":[\n        {\"value\":\"Titanium\",\"count\":101},\n        {\"value\":\"Silicon\",\"count\":79},\n        {\"value\":\"Aluminium\",\"count\":106},\n        {\"value\":\"Wireframe\",\"count\":7},\n        {\"value\":\"Oscilloscope\",\"count\":16},\n        {\"value\":\"Steampunk\",\"count\":64},\n        {\"value\":\"Alien\",\"count\":62},\n        {\"value\":\"Psychedelic\",\"count\":64},\n        {\"value\":\"Zombie\",\"count\":72},\n        {\"value\":\"Camouflage\",\"count\":98},\n        {\"value\":\"Gold\",\"count\":90},\n        {\"value\":\"Blue gradient\",\"count\":109},\n        {\"value\":\"Pink gradient\",\"count\":101},\n        {\"value\":\"Dark\",\"count\":203},\n        {\"value\":\"Pink\",\"count\":258},\n        {\"value\":\"Blue\",\"count\":248},\n        {\"value\":\"Grey\",\"count\":385}\n        ],\"Face\":[\n        {\"value\":\"Dark\",\"count\":209},\n        {\"value\":\"Pink\",\"count\":263},\n        {\"value\":\"Blue\",\"count\":222},\n        {\"value\":\"Grey\",\"count\":400},\n        {\"value\":\"Normal\",\"count\":969}\n        ],\"Side\":[\n        {\"value\":\"Circuit board\",\"count\":83},\n        {\"value\":\"Headphones\",\"count\":439},\n        {\"value\":\"Plain\",\"count\":1541}\n        ],\"Top\":[\n        {\"value\":\"Electronic\",\"count\":93},\n        {\"value\":\"Grey hoodie\",\"count\":146},\n        {\"value\":\"Blue hoodie\",\"count\":120},\n        {\"value\":\"Pink hoodie\",\"count\":116},\n        {\"value\":\"Mohawk\",\"count\":349},\n        {\"value\":\"Hair\",\"count\":390},\n        {\"value\":\"Plain\",\"count\":849}\n        ],\"Eyes\":[\n        {\"value\":\"Rainbow\",\"count\":79},\n        {\"value\":\"Visor\",\"count\":183},\n        {\"value\":\"3D glasses\",\"count\":151},\n        {\"value\":\"Sunglasses\",\"count\":270},\n        {\"value\":\"Cyclops\",\"count\":110},\n        {\"value\":\"Cyclops visor\",\"count\":112},\n        {\"value\":\"Red\",\"count\":423},\n        {\"value\":\"Plain\",\"count\":735}\n        ],\"Mouth\":[\n        {\"value\":\"Gas mask\",\"count\":62},\n        {\"value\":\"Mask\",\"count\":49},\n        {\"value\":\"Teeth with cigarette\",\"count\":54},\n        {\"value\":\"Teeth\",\"count\":333},\n        {\"value\":\"Straight with cigarette\",\"count\":84},\n        {\"value\":\"Straight\",\"count\":461},\n        {\"value\":\"Smile with cigarette\",\"count\":124},\n        {\"value\":\"Smile\",\"count\":896}\n        ]},        \n    blockheads: [{\"name\":\"Blockhead #1018\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1018\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5a641cdc3b7041c800000047059cf3247cd29e254039a4796bd64b5d0e6d15a0\"},\n    {\"name\":\"Blockhead #1879\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1879\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb874aa4ca1a7435f000000111fab9024fd21729c6c1aba69462a11304c52b1d1\"},\n    {\"name\":\"Blockhead #888\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/888\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa998258656eecb9800000064d0ed6d2434fc124172c705195792dae21e799bcc\"},\n    {\"name\":\"Blockhead #1087\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1087\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0df0134294a7f1e900000070372be524262f985a3a4503f157aa6e4b23caf077\"},\n    {\"name\":\"Blockhead #1890\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1890\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2edb97ec6d3e110b000000fd52b4152433b739a183b73c68d3162da088e79a55\"},\n    {\"name\":\"Blockhead #1250\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1250\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5231c3ef56c4ba5700000073ff419f24f797e863ee7ca04e8cabd28927165368\"},\n    {\"name\":\"Blockhead #121\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/121\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Wireframe\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8fa53ace49046b97000000c2f0b93824c9c7206e13a40256224b1b4b6810ce6b\"},\n    {\"name\":\"Blockhead #1469\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1469\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1cc47259ab740a3b0000005b994201258df3217ba16ad24354e7cdbf5130d094\"},\n    {\"name\":\"Blockhead #1111\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1111\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f14e0ef57ace29900000030f3308226e47e9a7bde8148fc43904a689baa6b2a\"},\n    {\"name\":\"Blockhead #1826\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1826\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10621d933a0acd3e00000098cea205296810a575a06ec6d2dd2051ea5354a9dd\"},\n    {\"name\":\"Blockhead #1555\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1555\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdff51dd5f0ebdea200000077bc05dc27785519f5780c7076ee99fe23ca1fa427\"},\n    {\"name\":\"Blockhead #146\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/146\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3208fe0b521b7a3c00000062d8d8de2871d25ea390be95d7f0ba59024ae1e4bf\"},\n    {\"name\":\"Blockhead #71\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/71\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1421d92379afe34c000000bad2431a25ed2ed9fb5185087464d2c7c6772eb310\"},\n    {\"name\":\"Blockhead #1812\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1812\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4bd6f0dcd34e57cc0000000e9c68bd282884cf415ec72303c2e480b7267f83c6\"},\n    {\"name\":\"Blockhead #1478\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1478\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6b199d66c8dc2b0700000075a3581d25561a286904814f79b56bdd05708447e4\"},\n    {\"name\":\"Blockhead #765\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/765\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc8c0e0967195a5d30000003e9549642a03743ce684b6a5d39d21e1b49721b9d3\"},\n    {\"name\":\"Blockhead #367\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/367\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x78df3b6dc343643d00000059bed50925e042510fb8d40ed8228d63d6a7631cfe\"},\n    {\"name\":\"Blockhead #271\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/271\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec97f85dc070ea4700000015e2703a268d21c158eb81f5a0128755fb2c2c835f\"},\n    {\"name\":\"Blockhead #338\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/338\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08880b83921d883c000000b0963176255e0415c61afa4fd1859186e635f307bc\"},\n    {\"name\":\"Blockhead #51\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/51\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb83be0e0321ded84000000c2dc770f277310ce7deb52877283a7598a57d51acb\"},\n    {\"name\":\"Blockhead #261\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/261\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9cb3c5055e2a4b5900000071fb6148293bae558ea8b2e9974d4350d642c73df0\"},\n    {\"name\":\"Blockhead #111\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/111\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c754eb1ce042cbb00000041bdd67525c02ca3aa8c3e86f34eac135bd74c2ffa\"},\n    {\"name\":\"Blockhead #60\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/60\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Oscilloscope\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x971d033f9e897b2b000000818f85d42553708017de89abda15e8f10b4bff0cee\"},\n    {\"name\":\"Blockhead #1529\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1529\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b4beca8c5f2f344000000010371032256d9217248a327299059fdfc707dda66\"},\n    {\"name\":\"Blockhead #711\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/711\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7f714496c828328200000009fa04904034205bd59c2cb7a97c3ce4788d3ec80d\"},\n    {\"name\":\"Blockhead #679\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/679\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf7f81c823832f36d00000004053a75794282f0a59d51a594e3a03dedee1da65d\"},\n    {\"name\":\"Blockhead #1468\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1468\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8546dd966bc7448b000000014c442232bfbfb02fd46a0518932c62656218aaad\"},\n    {\"name\":\"Blockhead #958\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/958\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b83122745dec84b000000078196051a9fa426322d1f35d69d8cdfbe4721c724\"},\n    {\"name\":\"Blockhead #333\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/333\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x20e27c38b1e3d16e0000000b4bc6a1376a5700b80ea6bf91dd4439bd421a0ca4\"},\n    {\"name\":\"Blockhead #1588\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1588\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x40ee2be6af74554a000000010903107d2244149c2ff067185f62e3b5bbae0c61\"},\n    {\"name\":\"Blockhead #1463\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1463\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5cb60557f76148920000000a7d0a57386c43ab45fc20b58a56b974a3926e9a3e\"},\n    {\"name\":\"Blockhead #1080\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1080\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66fe002fb7f5dfad0000000502a93823816dcdc6a39954a377338e3660bd3de2\"},\n    {\"name\":\"Blockhead #2044\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2044\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71947d293b7a6b36000000081cfd222dbcd8c5b1910aa177d904cb6c465cf224\"},\n    {\"name\":\"Blockhead #167\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/167\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3655e24558266dc3000000032001c278b1ddaa22015395c8e1c1ace4b7837e91\"},\n    {\"name\":\"Blockhead #998\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/998\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31b004f52934873a000000082b0277704ccd6347b13a757d71019f3bc1defa73\"},\n    {\"name\":\"Blockhead #618\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/618\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4faead11032bd43e00000007b52d203dfbb17a174c6fd30b94f59cac2b916a91\"},\n    {\"name\":\"Blockhead #1278\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1278\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a5ed6aca379514f000000064f4d3d08348b6dddc1b523043ff15be9d47c6e91\"},\n    {\"name\":\"Blockhead #2031\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2031\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe4109de81221c48400000007aaa9049db3321842b3e1f0bf7fc2d3268dba800b\"},\n    {\"name\":\"Blockhead #1119\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1119\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab735c334d5a54ea00000006b46523417ecde7608e6e660fb487b59d093724d2\"},\n    {\"name\":\"Blockhead #948\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/948\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b823469e811fa7200000004a7bc05a55006c4217ce225a21d7ecc84c4e89089\"},\n    {\"name\":\"Blockhead #1824\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1824\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac507301d4f14c9e000000094f2bc3510b141e8c850490fd0cfc02b91c01f5e3\"},\n    {\"name\":\"Blockhead #1716\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1716\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9a4ce692c7bcfd740000000211f405ebcae19e835481ecb391a93a033ea02147\"},\n    {\"name\":\"Blockhead #1680\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1680\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3cc990acd04f25c00000007f30426a980ea2787e7a5cf17bd443ca5e24837d2\"},\n    {\"name\":\"Blockhead #424\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/424\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66092d84ef0bb37300000000f6e1010aeaff2e9219510f8a5db0cc3e19270e81\"},\n    {\"name\":\"Blockhead #1905\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1905\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x071c52fc68fdf9460000000b47845f5c94dac8b573a83e1aa57c329204d19486\"},\n    {\"name\":\"Blockhead #943\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/943\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x82131bb5e2fd31aa000000055aa77632d5fb976054a53cda0309d9e467abd50d\"},\n    {\"name\":\"Blockhead #517\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/517\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9e8001a337705780000003fe6020345020a0705fbb307f187de77306aea82fb\"},\n    {\"name\":\"Blockhead #559\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/559\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x73c1997f1e25cc970000000575b10d46e6dea4d8bb65b244b0731d3c418ad2bc\"},\n    {\"name\":\"Blockhead #362\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/362\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x055068aed3585f05000000094ba816637405b52ec04820f30f67023d560a2a3d\"},\n    {\"name\":\"Blockhead #356\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/356\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7d50bcd373734de0000000b6647fa2ea3e3494b518143b908eacbaeae5d94e1\"},\n    {\"name\":\"Blockhead #1900\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1900\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf471caa856fe6e4c0000000b790190a6707bbe988f0e6d559b8184b4182037ae\"},\n    {\"name\":\"Blockhead #808\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/808\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa36954faef1d765200000002debd03bf920171f7652ddabf6727cf65dfa973ec\"},\n    {\"name\":\"Blockhead #993\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/993\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2a65745079b3578300000006f5b3ba3cbceeb264d4d51ffa6b0e391d3adaf039\"},\n    {\"name\":\"Blockhead #342\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/342\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7456e6221a7402b000000094c9dc47e67297645a6fee35e781c32aabde635d6\"},\n    {\"name\":\"Blockhead #1054\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1054\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd4c2b7219f04eaf600000007aaab24498d5f8c91bc9f4d1c70094645d30254a8\"},\n    {\"name\":\"Blockhead #1653\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1653\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x105b440843e56ad600000006a657d048ca323f9500059d8ad60e56c0c43f00e8\"},\n    {\"name\":\"Blockhead #787\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/787\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xca416abdb030ce1c00000003f4046306adeaa06b78d600fbd981d780ae4e1cf8\"},\n    {\"name\":\"Blockhead #1536\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1536\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa9b7c6cefd37e22a00000005880a5a2090cb6e393b5b03b08312d8d3cf94ab35\"},\n    {\"name\":\"Blockhead #1070\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1070\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ced01452bfc4767000000022b4c3e2e33fc0b1ba9a15d2a92e74774c14bde22\"},\n    {\"name\":\"Blockhead #1693\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1693\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xed4a1e5a5c29492a0000000a19b00b797e5c4634f416ac8ccb2320d7683d7655\"},\n    {\"name\":\"Blockhead #651\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/651\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x00de684367467534000000090af668158f86e782d3cc2b2d9ac79f86ab194aea\"},\n    {\"name\":\"Blockhead #1499\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1499\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0c272f346a943c6000000087fb3763cea30bad11a1ede2a7984a13c09710920\"},\n    {\"name\":\"Blockhead #1976\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1976\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc911164912e7ef7600000007f166d915b9ec381ca12c46b4e590d7f919344a2a\"},\n    {\"name\":\"Blockhead #639\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/639\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88ad31e777ee18b40000002c20df073bf84c42dd0c75391013414c23b5af26f0\"},\n    {\"name\":\"Blockhead #645\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/645\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x09a0adee66e3078c00000006897155456c33d19f655d0258f881235cb334cbcd\"},\n    {\"name\":\"Blockhead #1024\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1024\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1068a55b538ee15300000075514f001201d7dbf6eb60bd02e9998a652685553f\"},\n    {\"name\":\"Blockhead #1995\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1995\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x827c826efbf5df530000006345117c0c9d06294bb7713d33884f2fe3c87921e0\"},\n    {\"name\":\"Blockhead #1348\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1348\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc07e826ca8ac46830000002d3101bd4c65caaabce803b495cee08a9bdb9b7b96\"},\n    {\"name\":\"Blockhead #212\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/212\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8866f260e35da870000000d74b7f04490a6f06148bc15b9ec4c33b46e67bc889\"},\n    {\"name\":\"Blockhead #1367\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1367\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe5d99fc394c92859000000087139660e6525ed42690a62e62c27e17e6a8e57f0\"},\n    {\"name\":\"Blockhead #1687\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1687\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa7f46fe2db883469000000041a3097cbc9959048cb81f1fb42481dacc90750b8\"},\n    {\"name\":\"Blockhead #1239\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1239\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xce76d411bf12442d00000003276266453a729716d30eccca135f5c4e717f21a8\"},\n    {\"name\":\"Blockhead #1972\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1972\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e1f675b904c6e8a0000000598581c4c7448d73727575f6ac3f5f059ff5dd4c6\"},\n    {\"name\":\"Blockhead #1850\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1850\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6906bfe169bc5c2e000000088308f6201fbd2529bb23b0049216e21fbb3f09a3\"},\n    {\"name\":\"Blockhead #1609\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1609\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbb7cbc20e1c04abc0000005d4c28aa38d2881d66b24d44635735a79dd8913b97\"},\n    {\"name\":\"Blockhead #849\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/849\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef39f54bb1197ddc0000000ba31252a626ce0a3cdbc26ae904c04fac2c8c8fe1\"},\n    {\"name\":\"Blockhead #1968\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1968\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa80425149e3e6b65000000079f2438eccbc56b197a113739dce66989d209bae5\"},\n    {\"name\":\"Blockhead #620\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/620\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd74b0fee24da995e0000002c461583c94eccadee3dd744707b8c29a86c23b2d3\"},\n    {\"name\":\"Blockhead #1672\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1672\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5c510bc2452e0b2300000004fdc9225b2c502fe22bb0247fa68325ec50e13d49\"},\n    {\"name\":\"Blockhead #2001\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2001\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec7d3fd13d9f98450000002e01b36205d30e5710befae8b69f02a513f84a28b5\"},\n    {\"name\":\"Blockhead #1042\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1042\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0c82ddb5416594ce000000a10303ec5ecb416066d4d42f653cae6a0d68b5a8b7\"},\n    {\"name\":\"Blockhead #404\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/404\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x44da5bb3cf86f09e0000002f12016483f114be9914cd38234ad9487c401448ac\"},\n    {\"name\":\"Blockhead #1961\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1961\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd250faeb2710b0dc0000000195007a9d4411ed4a3d57244a139b6c920ea9b1f8\"},\n    {\"name\":\"Blockhead #87\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/87\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xda36601699791cb000000000c326601f9f8ef42de5cffecf24828af795c0c9b9\"},\n    {\"name\":\"Blockhead #521\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/521\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb641ba6ea651fd40000000075243c90a0fa1886f4c72b92a278753017d0007e5\"},\n    {\"name\":\"Blockhead #1807\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1807\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd3b18a21d17ff6120000003c455c034ed71a2ff61642f2eae35e3616657a6ab8\"},\n    {\"name\":\"Blockhead #725\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/725\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf915fc6c8c02ea7e0000000201dac5d64617dc0ac4b2737f59398e9818bf4d70\"},\n    {\"name\":\"Blockhead #1925\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1925\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2fec080cc13e826600000003046c6cad2ca3259bbc7b4e866d84964076f665b0\"},\n    {\"name\":\"Blockhead #1129\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1129\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf5647bd5bcc117e2000000035ac4c142fdb54298cc8860e109f6af45c57bc47b\"},\n    {\"name\":\"Blockhead #543\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/543\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x297dd6e8e9945215000000080ce622b7f9f7635649ef4df9f70bee8e76622fe3\"},\n    {\"name\":\"Blockhead #988\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/988\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe60017bfaa200755000000055633c42177907053c24017de97c16d5f2d719510\"},\n    {\"name\":\"Blockhead #349\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/349\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4100b0d62842aa00000000092b3c8c7d94076e37ca0f636da4cd7ccabd84de76\"},\n    {\"name\":\"Blockhead #1951\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1951\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe50ec8c991f4796b0000000b064e82b636ce44b49bee69b79f20a9a31d26689f\"},\n    {\"name\":\"Blockhead #1881\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1881\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24c61f913870e6c6000000026903c89bed366b842230801327e0cfd510e58f0f\"},\n    {\"name\":\"Blockhead #1787\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1787\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5025acc1ff667c220000000b3e12bddd748863b6e3a7df6512696dfa05cb3b8c\"},\n    {\"name\":\"Blockhead #594\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/594\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9c7c74a5fec919e000000880301f4751d1e9572f3cdbc4aaadd80694c03dc78\"},\n    {\"name\":\"Blockhead #1099\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1099\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc1dffc5774f29082000000082e4310bb57d2a9a6025d3b3ed1c7d26f50f4efab\"},\n    {\"name\":\"Blockhead #1908\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1908\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7ff14bc45ab3e4090000000848c2989a972379307aefb5a5c8c250611de9a959\"},\n    {\"name\":\"Blockhead #1959\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1959\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9d0067d5d4d67c000000000a840ee44a7ec0bb3f4222c5bdcbdaca73efb7c7e\"},\n    {\"name\":\"Blockhead #868\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/868\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee85766848a51f5700000001ae06f70798aaed26572670081ac6d0bd55a7adb6\"},\n    {\"name\":\"Blockhead #1776\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1776\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x60a395a710dedf5a00000005e164960af613349d4e776d899ce968e86b9317a1\"},\n    {\"name\":\"Blockhead #364\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/364\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd084224bb16ef9120000000851d2c694686d5b9af69ee7247105d6208a3abbf8\"},\n    {\"name\":\"Blockhead #747\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/747\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6caec3117a5980150000000248f2ddbdf65895793529e3a9f1b3518d7df359e7\"},\n    {\"name\":\"Blockhead #1444\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1444\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18f8b5672edee3a30000001901c9112fd53df82f02b5f9cab9efa6bd22b4d356\"},\n    {\"name\":\"Blockhead #2038\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2038\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa684cffe4daaf948000000534e0a3936ba239eb6171c5af2ceaaaca7c295b8ae\"},\n    {\"name\":\"Blockhead #1513\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1513\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99e0ba823181322c000000078b2e8c1c64ed6dd12bb2d84c60ea678cfae7b694\"},\n    {\"name\":\"Blockhead #80\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/80\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc39671740a7e482900000006f9ab915d84ebef78287d4a518f08273a7380442a\"},\n    {\"name\":\"Blockhead #1489\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1489\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6f7ee2c6eb75ee230000002de3062648f363d3d5e2bba9912ebfb5e25d3694b9\"},\n    {\"name\":\"Blockhead #1964\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1964\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9d27941e63d662e30000002f7210125da0f5bb04cf8a897640ce8bf8c80cf020\"},\n    {\"name\":\"Blockhead #949\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/949\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e76b68b44db0bc40000000b9424f4aeb122e15950dee2532dc746ba64347293\"},\n    {\"name\":\"Blockhead #938\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/938\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0445f5569e8bc0ae000000001ced687981cf2227a9f7f70f672cf356b2278ad1\"},\n    {\"name\":\"Blockhead #1045\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1045\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf50f9f79edfcf8bb00000004ad62551eb137330645793fe06d67e92de978634c\"},\n    {\"name\":\"Blockhead #793\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/793\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3998097df7de3dda000000016a4e2f16d636758e33909170d4ce891bda627902\"},\n    {\"name\":\"Blockhead #1170\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1170\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc63a8e6a8dde3c910000000ad0a63b15c71a910dfe5344e6b0fd7804712bf07c\"},\n    {\"name\":\"Blockhead #1963\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1963\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x89a0e1b28715dab70000004ebf6105339b14cfc465d37b20107cec562dc029d3\"},\n    {\"name\":\"Blockhead #1839\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1839\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x669b47fe548a0dff00000008e26149582cfe248843277d8a71263754095c29a9\"},\n    {\"name\":\"Blockhead #1019\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1019\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf58e8b68cd04a064000000dc033e03980013e78d13f2487c240f77da308fc762\"},\n    {\"name\":\"Blockhead #601\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/601\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5dc6c256c4c321e2000000312f223468ae9bf5a4d10cd35f872ad11242a44c19\"},\n    {\"name\":\"Blockhead #1542\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1542\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x250ec3abb7b0f021000000648316583c54877ef31c523fb743f46c7ceb2b54e2\"},\n    {\"name\":\"Blockhead #1823\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1823\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0b7b97f376a1d9040000004a01ef1f2c9409f958f7c12f142292a5664513055a\"},\n    {\"name\":\"Blockhead #1197\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1197\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x205f0ddfb01b14d5000000067638e4878be0cd1f52d46597259ad80f3355db11\"},\n    {\"name\":\"Blockhead #1311\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1311\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x156111e08c9293740000000aea0bbef50c1f0a9e3305ddea247f7cd8dfc358c4\"},\n    {\"name\":\"Blockhead #334\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/334\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbfe2274871e2146800000001fa2fb711c6d29fb1de70783d42ee8f477218fc69\"},\n    {\"name\":\"Blockhead #1950\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1950\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb33f1dcaeb860d40000000ba05f402a18966505d92898efc844f65e9eb689046\"},\n    {\"name\":\"Blockhead #804\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/804\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa19f073bcf69be570000009e1bf1000ebac6551c83c4eb14a3b3af80e1049737\"},\n    {\"name\":\"Blockhead #441\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/441\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xed3989e75cb6af480000000310adac0ad0980e2e61226091f109446166451a75\"},\n    {\"name\":\"Blockhead #1150\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1150\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7485ad8dc16aae990000000468d8fcbf5759b7f346796801ce92c94ce276ff49\"},\n    {\"name\":\"Blockhead #1228\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1228\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2df51efbf6654238000000161806f236959dd4b7a3fdb4b9c97814aa4aac13b2\"},\n    {\"name\":\"Blockhead #247\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/247\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0a54911431ec3d5b0000001105c0bd2b4b110527311e8c2e35a5f2715ee82d1f\"},\n    {\"name\":\"Blockhead #1365\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1365\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e64c400950297590000002c764fd02fb7a13eb58e3b09aad10bfa4ddd181e6c\"},\n    {\"name\":\"Blockhead #1459\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1459\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdd807c04e5cd81f00000002f58609642b86caaa1bac70cf198480f62f559fa1c\"},\n    {\"name\":\"Blockhead #463\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/463\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x73b4c4a14d366d040000002dfb00edb9502aba7129c6cf1360a0b69533fc4334\"},\n    {\"name\":\"Blockhead #1357\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1357\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdeffd1323626ed1400000007626e208b7a721bb2fd760cb40eccc5ad66a28121\"},\n    {\"name\":\"Blockhead #0\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/0\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x22869df80033e1b40000000792a55f237b042b4c6357dafcd24ac3afa34fb0be\"},\n    {\"name\":\"Blockhead #1834\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1834\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0abaf4d73fab97f70000002d2f2b48467a8b95da2272b19a83296a11cb29a193\"},\n    {\"name\":\"Blockhead #1866\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1866\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa34bfb348cd587b900000088432a0590504ff597ae8defa46380fbdb4f829cca\"},\n    {\"name\":\"Blockhead #1689\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1689\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3cfb87d197b57a9000000030a16d1936d6c40786b4f08c6f2537a53ba0c50fae\"},\n    {\"name\":\"Blockhead #2061\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2061\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3a1dff6119fa081200000008b8e36a5c831c39a8fe2f16cdbf51d53bfaf2b23c\"},\n    {\"name\":\"Blockhead #626\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/626\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3dabcd4bf73f2e500000007b78fb868dc04ea0adf55755ea041a00e9c6a4410\"},\n    {\"name\":\"Blockhead #923\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/923\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe8a4df176d02a6fe0000002a02534e457d6d6f6737222ca8e349d588748cc16b\"},\n    {\"name\":\"Blockhead #1657\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1657\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4a83fd98585d0e180000002e027cc4da874a426e6950603a81b6195735bda830\"},\n    {\"name\":\"Blockhead #1211\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1211\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e44714ec8bab822000000056e3665cd125b105d359a0e91d732fcc51e6dcf32\"},\n    {\"name\":\"Blockhead #1082\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1082\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe176b4832e6e7629000000621b807339c8389bd41cf9d70cec0e1c5e17f1a887\"},\n    {\"name\":\"Blockhead #1165\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1165\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ccccd6fbd3bd651000000657304206c2e11d8e4577490051db63ec145de0384\"},\n    {\"name\":\"Blockhead #524\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/524\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4854328c958563a60000000672525ba4020ba6c25de33a557cd408476b3e888a\"},\n    {\"name\":\"Blockhead #1986\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1986\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e88e82afc4b4e5f000000bf034ae33ba817ec8ab33374b351b84ec1671d9661\"},\n    {\"name\":\"Blockhead #322\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/322\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc5619cb6776fe8050000000a64cbb4036878b057fc7ad1b39e94e70f728b3a35\"},\n    {\"name\":\"Blockhead #1620\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1620\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x32ff70c99f66cf960000003051e0a17e8ecb34ea36129f7068d18d7444d2cfef\"},\n    {\"name\":\"Blockhead #1954\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1954\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb00904ea126b14b3000000e34e005e5b264316e50b5656cbc57fe1d07a7805c4\"},\n    {\"name\":\"Blockhead #1196\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1196\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab135fa0d4e25e28000000cb193d017ff47a7ee76f57584dec3ac3c102c172f3\"},\n    {\"name\":\"Blockhead #922\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/922\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x39dbdefeb658434200000009d858e2222669a0dec7c42deada2a445d41a66d91\"},\n    {\"name\":\"Blockhead #1467\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1467\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4228541117135321000000033b3e946d28ef6655424639fbdf0b293cd721914b\"},\n    {\"name\":\"Blockhead #56\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/56\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x78d2e51dae59597600000004c9585586f51633ae4c6eb26c127ed3b42544eb10\"},\n    {\"name\":\"Blockhead #1837\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1837\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe39931a4c75b3d540000000324bc087265e4c868c7f9e54b2d764d1f3d80d32b\"},\n    {\"name\":\"Blockhead #1726\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1726\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x26b5a00360a58c890000002e6a175f65d691526e1b50006ff4170e3037c206fd\"},\n    {\"name\":\"Blockhead #1424\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1424\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d55610f9a0280e20000002cc441bf41c5c06664a5141d559b114fb44a3a1fe0\"},\n    {\"name\":\"Blockhead #1553\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1553\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd2bd20d4a0ca2b600000071191561405032ab90bc554f04090b4f556b1cd645\"},\n    {\"name\":\"Blockhead #1389\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1389\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x591e2be5b2b97b9000000005cc8e27c136621d5ddc0c6713ac9ab17c0c31d0bc\"},\n    {\"name\":\"Blockhead #1628\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1628\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08acdbe76a65cfa400000003e61a14fe0f024f7ac340f4a4efc258133eb518ba\"},\n    {\"name\":\"Blockhead #1268\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1268\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdbdcfa8b80a5644d000000655e160e607ccd194ca64f362137e607e23b558de3\"},\n    {\"name\":\"Blockhead #719\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/719\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfec34c1512ac53d90000000974e95d1fde4c871f22972fe944515354fdf56e75\"},\n    {\"name\":\"Blockhead #1089\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1089\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8d44de11034415c50000002e10611f077c4867101b79d38d10c3c710ad4a26c2\"},\n    {\"name\":\"Blockhead #1153\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1153\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x09e7dccb0b9fe6f0000000047680da8335540029cf709679f9f5ae48adb77319\"},\n    {\"name\":\"Blockhead #1987\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1987\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee2142a5a10889af0000002d4da932229bbb3626624b9fe3841ba5009ad5a0c5\"},\n    {\"name\":\"Blockhead #1844\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1844\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6270a6b02936548100000009573baaa841d68996f7492cf183d566d86ecf564b\"},\n    {\"name\":\"Blockhead #1747\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1747\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfce7a406941ad89d000000304d9a20be97f8b8deb50961d3ba0673de084a11b7\"},\n    {\"name\":\"Blockhead #1079\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1079\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdbab928ce2fb353e0000002c0f471f22ebf251e87ea83eb1a51ff0e6b68bd2d2\"},\n    {\"name\":\"Blockhead #351\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/351\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe2b3b822ee7ac9fb000000089be8354cbf6718ae1630826e65958ce20b7f5173\"},\n    {\"name\":\"Blockhead #1050\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1050\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52d3d91a8b040a3e0000000369325680550610b57b06258329f0b27eb5f8ce40\"},\n    {\"name\":\"Blockhead #1926\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1926\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf751fbd541f6c27e000000d3421ae414073a71fcb41e785de302387b4075fa54\"},\n    {\"name\":\"Blockhead #1187\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1187\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf1849bfda3c8ad1c0000009a36003c2f43326176ff2137e217b74e7d79387dde\"},\n    {\"name\":\"Blockhead #1303\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1303\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfe4e5344c390e82e00000002891690d7aa2c35b5fceeabae321c9b9a9a6729c7\"},\n    {\"name\":\"Blockhead #1340\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1340\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xff3a793e3587cda30000000d0233aa12fc07364e3a4df8babe86d777f5df5c5a\"},\n    {\"name\":\"Blockhead #880\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/880\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd83ecbdb8236fa6a00000068b282036ebb555b7aae34145a360c1a6beb45e21f\"},\n    {\"name\":\"Blockhead #1931\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1931\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe4ff69ca2a457f9b000000530304ef99b157dd87815d5e9ac1c327131033686a\"},\n    {\"name\":\"Blockhead #1037\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1037\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x37c22613e2f9b5110000002f6caec82f8c58613f7355c09d4a697fed62c545b8\"},\n    {\"name\":\"Blockhead #2054\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2054\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5caa3f326dedd590000000011ee315966c21ddb960a3697cb2f3c7b385fd6463\"},\n    {\"name\":\"Blockhead #1484\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1484\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebb86b77122330a00000004d49285d5738c9cb28fd4a0bd8c0da1425c0180f87\"},\n    {\"name\":\"Blockhead #1851\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1851\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd16227849e0bba4e000000035c4fab083dc529a28a4ec90c69cdfeface99786e\"},\n    {\"name\":\"Blockhead #325\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/325\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x886bfbe119a2132300000008e4f74a07b9993004e59ee9005930d38a6d0bcb52\"},\n    {\"name\":\"Blockhead #1480\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1480\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33f874b1006985900000000baa6ff77a6bb534d5e5f4b8b5727dc9ff2e7cd6b3\"},\n    {\"name\":\"Blockhead #43\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/43\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1102a0ecf1be4a790000000c215d049fcad18692da329b6bddce4378894f8c82\"},\n    {\"name\":\"Blockhead #636\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/636\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b6bf720fcbf53f90000003c5301d83d62609e158299b5725569f8d1470c04b2\"},\n    {\"name\":\"Blockhead #1363\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1363\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe8eb54834db3f1850000001e51f8243393bcd18f8ff370206f3f0341c2f320e5\"},\n    {\"name\":\"Blockhead #708\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/708\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fa8ee0861e460300000004f4d225b5ebc7f419fbb5361e02332195158757680\"},\n    {\"name\":\"Blockhead #1026\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1026\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15d847047c78728100000029cacd004849fe231f78bc1d07ed8229b964ae9060\"},\n    {\"name\":\"Blockhead #1\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x61680356ff824253000000a44f0d6645d95961932dcff88f118eee90fb81e8bd\"},\n    {\"name\":\"Blockhead #394\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/394\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x83589816e6ab60130000000265b6131f2a0a108cbf6a042bb8fb5ad40c0e0359\"},\n    {\"name\":\"Blockhead #1257\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1257\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd86929c754686a130000001301f22646c1aca66a219bc2feda1925245c3bd29f\"},\n    {\"name\":\"Blockhead #1594\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1594\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc72a76d8ba7be338000000ac180e2c39f2184623221f5abe3c24976eec314b71\"},\n    {\"name\":\"Blockhead #1874\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1874\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15816c16facfc13500000066e0226d163951f4c5c696bee74609916a27b15341\"},\n    {\"name\":\"Blockhead #1130\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1130\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa3f293d97ffc7ef3000000765000a10578f9a8a99d4ad8134ace76b9c3e1473e\"},\n    {\"name\":\"Blockhead #749\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/749\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbfa4e036491e1bf80000002d336e6a45905d0ceca2e7862bb72586fb14d4b44f\"},\n    {\"name\":\"Blockhead #2008\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2008\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e23d9a1a344fd33000000f71822210ee742d99e1b869656b9b0caa97bdee324\"},\n    {\"name\":\"Blockhead #1769\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1769\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x22dd499d29e3f951000000d304b5793e47fa1bc05bac74536d369c58662c77aa\"},\n    {\"name\":\"Blockhead #1956\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1956\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2aa660a6ea2287480000008703dee9322114039d6e0e67ae54ac9bfd6e4859c4\"},\n    {\"name\":\"Blockhead #1309\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1309\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x286edffa41bf55ee00000007a573baa8d8939ac7d1ef0c6fd80eaffd0fadf52a\"},\n    {\"name\":\"Blockhead #406\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/406\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x29269eb5afd4ee25000000098997fb22bf0fb64ef4e8e7bb482102d3f318501d\"},\n    {\"name\":\"Blockhead #1581\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1581\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfd31d8f12e2314a40000004048de04a22d47a0956e3af0ff127f0ccbe85bdb5e\"},\n    {\"name\":\"Blockhead #654\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/654\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb4fe279a94587e40000000b8e5416d868c87944c1b5b0ae5a1184370c833832\"},\n    {\"name\":\"Blockhead #1546\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1546\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd983cea6b9fc8285000000638204d44ca7c76392dce49a38fb56127f38532280\"},\n    {\"name\":\"Blockhead #1033\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1033\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7f28704d288081ee00000030d508304bba835e87f732b419f1b08dad57143f55\"},\n    {\"name\":\"Blockhead #950\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/950\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0dc5b150766fc68c000000686b5b143d1cf12f31f57298fe24c6b03162a2b3d9\"},\n    {\"name\":\"Blockhead #1214\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1214\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa33a3e758d0031de0000000bffec716a7cf32409b17ca4ee2cddb73ae6debdf4\"},\n    {\"name\":\"Blockhead #1332\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1332\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb1fba4466b59d8b7000000c54d38133d2a3e98d5e029d82c8b69b2973c3eb6fd\"},\n    {\"name\":\"Blockhead #1681\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1681\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd29948eba481e1ec00000049045a235eb744979b90d26ba7eef02c4cec935b9e\"},\n    {\"name\":\"Blockhead #1540\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1540\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdad3ab76750c1299000000265067693d4f9ca5e95951fcbdc2fa3f92caea53ec\"},\n    {\"name\":\"Blockhead #1215\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1215\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2a93e7b7e9d3acc90000005e15820282060e3c8bc6fb35ba91cc89bcc1d6b8c5\"},\n    {\"name\":\"Blockhead #193\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/193\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7eeab83218745dae0000002cae8540328ba0e0dcfbb820ec36c81e3a6b2f95ba\"},\n    {\"name\":\"Blockhead #1508\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1508\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c5c75cac193b37c000000066e94e4e8fa7beb313fb13785169cce88e1fb401f\"},\n    {\"name\":\"Blockhead #1125\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1125\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x65a629c23ea6cad1000000673d158d0a848661911f77a7a43b884e15c4feece5\"},\n    {\"name\":\"Blockhead #100\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/100\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc6d5ff4b7a7df5ac0000003af1a10249f9ce9035d401767b18bcad3ab78e8bc6\"},\n    {\"name\":\"Blockhead #1264\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1264\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f6522ef6786f8a700000001f24e54732ce0439da74e734540baf631ba726fdc\"},\n    {\"name\":\"Blockhead #1519\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1519\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xddf2221f058f8773000000627108d913768b336fffa2235c04392ebd72898e23\"},\n    {\"name\":\"Blockhead #687\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/687\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf8a02fd10f7d5a7a0000002d16c1d05436872ed366f72eacff7432a2a8476106\"},\n    {\"name\":\"Blockhead #1582\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1582\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x23fc08a2f53ba68a0000004a02d7a5443d6b5743300313ce4b51c5264db81185\"},\n    {\"name\":\"Blockhead #1342\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1342\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5a95bc68825cc30e00000009c03c2494c8de7fdb09e074b50f726f6eacae4a00\"},\n    {\"name\":\"Blockhead #197\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/197\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8be095689d306e950000006f4b67062fceedc14a689f9e4759107651529374bc\"},\n    {\"name\":\"Blockhead #1590\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1590\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b04db4a0c25b60900000005e84f9995bb09c1be0f0762de04b489d1ae0698f3\"},\n    {\"name\":\"Blockhead #1055\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1055\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1de4df49f725256d000000344223950b85e7f67afa6613b6411ce14f326cf919\"},\n    {\"name\":\"Blockhead #1615\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1615\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8cbc7a2e2bceee8e00000002abb4ad622ba742a106df74a949d8698c5cfcff62\"},\n    {\"name\":\"Blockhead #1414\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1414\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb21f315e8428f0bf00000007f9e33e8927b40e3e971b121f9a37dfeda07f8ec7\"},\n    {\"name\":\"Blockhead #1379\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1379\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x37649946fb97bba00000002c7f891117b3d9bb5083287cad757ebb3953c8476b\"},\n    {\"name\":\"Blockhead #759\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/759\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81e5b4b3c0aede4c00000030b651cd47f236f2a235428059ba976d20f0db6d0e\"},\n    {\"name\":\"Blockhead #1920\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1920\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33bb20a04b738957000000085a89f8a843e254673391f9a8974f0206a2260bed\"},\n    {\"name\":\"Blockhead #658\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/658\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x330e0f69545c563300000007b84a48b1a470e6975785cd562c5b1163941b53f0\"},\n    {\"name\":\"Blockhead #1601\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1601\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x09bc5a34f648e2240000002e1536fe1cf97f7f6795ef206ef5b26cde9ec0c0cf\"},\n    {\"name\":\"Blockhead #598\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/598\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e98e5dc10a9b420000000fa1f04a55b2b31b8d9eac2888a7b0ea70b880016f7\"},\n    {\"name\":\"Blockhead #1361\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1361\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x96f416c6f190e23b000000ae3a22cb33ba722fdf4db325b65f1f3480b3b9e03d\"},\n    {\"name\":\"Blockhead #545\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/545\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2c412c59a6bee6dd00000065251c9c1d060ffe8d2e875d361f1fa6ddfcc654e2\"},\n    {\"name\":\"Blockhead #1973\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1973\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebaadc488761c973000000484613b602c4cf16171472b288c6c8f9f12b44ec49\"},\n    {\"name\":\"Blockhead #1545\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1545\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x995bdc0539556f190000000ae9b4078cdbcb821737120cb2bc49b4ffb638f04e\"},\n    {\"name\":\"Blockhead #782\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/782\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb51b9c5603d721f0000000bfba5dbb7dd613ee24c0e3889e162106f089f81d9\"},\n    {\"name\":\"Blockhead #665\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/665\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0db9c86a390b16a200000002530dfbde24b5d3e13c72713c2088fc6679e8e06c\"},\n    {\"name\":\"Blockhead #2052\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2052\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe0a61d870e9b6cc30000002cc01cf88f3476ef57dd7a836e7aefa1c5a41d60e7\"},\n    {\"name\":\"Blockhead #1802\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1802\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbb8b61771fb6a802000000d8054621580f7dcb9aa1211b14769f65e455b8ad28\"},\n    {\"name\":\"Blockhead #1535\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1535\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52129ccb4297a1d0000000c40eee0150b1d12b61128485c82064ac59c248bc7f\"},\n    {\"name\":\"Blockhead #1300\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1300\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfe8f12d6f420516f00000096fd00e13ad16d222d99d5debfae27e0e015fff066\"},\n    {\"name\":\"Blockhead #515\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/515\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x35a7a75ea372290f00000007d8f35bc64c60ca2c19289b7c2333c8a7b9909ade\"},\n    {\"name\":\"Blockhead #709\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/709\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac1569fb9d2bbe0d0000003062d4ba4a364dfcb7b736eecbf24c22f1e6617649\"},\n    {\"name\":\"Blockhead #1293\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1293\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ac3e937483337f70000000218c171d7532e460f98c6c838b4ae4ffe2070e176\"},\n    {\"name\":\"Blockhead #1753\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1753\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x60944b49c23f6f9400000006e2b9ddf3b410d559dbda969560717cd9b9a7db12\"},\n    {\"name\":\"Blockhead #1625\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1625\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x00a34dbd4aa80d450000002fe50cf06dc03d16aae62d114451cef65f911b59ef\"},\n    {\"name\":\"Blockhead #1928\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1928\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e0b5caf707562ad000000445162a7427806fbac033e2dc4b3dfdc25df7b4283\"},\n    {\"name\":\"Blockhead #478\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/478\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x921b39b93c520bd40000000117dbddb1924cba2037722dc25c2314027572f729\"},\n    {\"name\":\"Blockhead #256\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/256\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x700ae48ab10ad84200000020cf296e3723ef84ee25cb9b9499044652b5efed70\"},\n    {\"name\":\"Blockhead #1267\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1267\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xae24c7d7db86239a0000000b573a2fb03892943181e16f6a118cae0c5161e0d4\"},\n    {\"name\":\"Blockhead #1410\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1410\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x945bd9317bfa8857000000a511ee007d15346b214ea86a566fa515e3cf864683\"},\n    {\"name\":\"Blockhead #2030\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2030\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x194793e63c3cb902000000db4229fd56e0b3ebed9c776d0a65d8e1ea9599c9a6\"},\n    {\"name\":\"Blockhead #1578\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1578\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x67a5fbf70e604f2100000006a8afb0d1fab0fce009ba8283fdb80f55d96b44da\"},\n    {\"name\":\"Blockhead #1421\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1421\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7bb90aab02838b950000002bec002e44dcada9cba14f3d2828d13573be7151c7\"},\n    {\"name\":\"Blockhead #2003\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2003\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b88c605e04fe1cd000000d93e3503010ba0dea9d5d429c2a4aa6ad725dfec29\"},\n    {\"name\":\"Blockhead #768\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/768\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x65c2058c2845f2ce000000eaa2da0345aacbeec48f93e523cbb2356ffa70861f\"},\n    {\"name\":\"Blockhead #375\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/375\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3dc7a464c3ccd7a600000069c308d313b51fecb25db264e1378a4ec94c6c774d\"},\n    {\"name\":\"Blockhead #1691\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1691\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5c4e5a2400e9ac8e000000284493c52ff3d35d0dba6b6e42cb289490dd105286\"},\n    {\"name\":\"Blockhead #391\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/391\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8552ed1b463a859a00000067b405fdc2cba4ce1a3b3e24762bb60c8d3dfccecd\"},\n    {\"name\":\"Blockhead #246\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/246\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9233e4c888211f1700000009e676f590d801ce3c1ddf5d5f7c641e8246dd4c5b\"},\n    {\"name\":\"Blockhead #861\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/861\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa118c2d2f20318d7000000730374a24af407cfd32a2e82fb201158fe7e6f9246\"},\n    {\"name\":\"Blockhead #1897\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1897\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x419a9420abf7d29e000000b04c051bc4e844d43e678751dd3b61ac76c9b7d733\"},\n    {\"name\":\"Blockhead #1938\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1938\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd01e3475d946f4e9000000753414e141f2e3bf6a1f91a82488a2fc18d7bb66ca\"},\n    {\"name\":\"Blockhead #1927\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1927\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9d51240bd06b4c99000000244dc6632e0bf21228517f0bf4f00310b35c9a8fa8\"},\n    {\"name\":\"Blockhead #1996\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1996\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x773ad6c559050450000000f5201a511548c308d93b45487989d97b5333b6276e\"},\n    {\"name\":\"Blockhead #816\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/816\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb1ffafbc08f1f0300000046a055045a478f9786fb7122ba217abe4779be33c0\"},\n    {\"name\":\"Blockhead #255\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/255\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x01a85b856ff6574000000002fdb9de7b0009078fa8646ecf38d09f90cc83d2cf\"},\n    {\"name\":\"Blockhead #674\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/674\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x64c41a9eb764c126000000c84b20797b17c694f51cdcd8bde3fa26de50adfa56\"},\n    {\"name\":\"Blockhead #1713\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1713\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c2931199c5fb14a000000d45120b30637110bd929adb8e29161dd96022b634d\"},\n    {\"name\":\"Blockhead #690\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/690\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd1390ff9f418841e00000008b5f26083cdb92a80c8ca49eb0d2bdc193d1f3581\"},\n    {\"name\":\"Blockhead #1061\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1061\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x29213f5c92138e610000000f054621b71ca1185f0766e6ddedbe462b94b7b3cd\"},\n    {\"name\":\"Blockhead #892\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/892\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdd9af014bc9c7b720000006348fa4356e1eaa79e4c67bcbc03315e574ce04e62\"},\n    {\"name\":\"Blockhead #648\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/648\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7e9fc1a8003d1c2a00000060015dc15fbd34b8141e5d93310a27bc887e424ed6\"},\n    {\"name\":\"Blockhead #1138\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1138\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcda644ae090627da00000002b95277b827fb0ad1842abb06925e89df6f4c11b6\"},\n    {\"name\":\"Blockhead #341\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/341\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf01aaecae32ff2600000030088b380a228035300e530216b3e3e9d8c2d256f0\"},\n    {\"name\":\"Blockhead #64\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/64\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f9bac62deab8d8e0000009e4815b07b31981a7a649dbb90aa805b8737a9df86\"},\n    {\"name\":\"Blockhead #1122\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1122\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe67e806c9c233189000000e945136502fcf1c70b4d22a1dfff8b7c09ffb8c617\"},\n    {\"name\":\"Blockhead #653\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/653\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2d6b2f5edb90e390000007c4f0b157a1e88c3e56891e120353c8670f4b45076\"},\n    {\"name\":\"Blockhead #1256\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1256\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ee602bcbaee5f8f00000065d8458136413fc2445f5cd42f9083524161d46482\"},\n    {\"name\":\"Blockhead #481\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/481\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa279080f8210b36b00000005e560e4fe178c1612277b86b62a599b7f6217e1b0\"},\n    {\"name\":\"Blockhead #1404\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1404\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1e25b163fa6b83a0000005529295d456eb18e2b3d6882d7a693b6e0081c693e\"},\n    {\"name\":\"Blockhead #1729\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1729\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x78b33776c5d27893000000634a8b625057b55a8f0262f5c35bbb501cc30f4204\"},\n    {\"name\":\"Blockhead #1514\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1514\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x93ce4791b3ff551700000063ca6e13344d8307af2522b669c923b00c9ac570d7\"},\n    {\"name\":\"Blockhead #962\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/962\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2dd6cef2faefc0390000002db98db049aff5fda76dee8b0025ae050a17928562\"},\n    {\"name\":\"Blockhead #1063\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1063\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf6b10d4712ae1e20000002916687c39787b809e38dbe70b35dd37332a50d241\"},\n    {\"name\":\"Blockhead #508\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/508\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec5c13fc385396ce00000005fddd27ecef29c45f2ea6e308c8b36f56cbef890f\"},\n    {\"name\":\"Blockhead #1307\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1307\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7fa0c6b540787f09000000312c1fbbfff6731a400ed08b022a021841dd106983\"},\n    {\"name\":\"Blockhead #83\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/83\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9de2afe164cb84d900000006aad846b20cddbb55e95c669cbcd5baff39e1d509\"},\n    {\"name\":\"Blockhead #1811\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1811\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x969094928a10bc3d000000834a607a32d5b2af8096be10a60589ee45c4feb336\"},\n    {\"name\":\"Blockhead #834\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/834\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59f8ee9343e587d5000000f52a0350106ef6639818cc2d3ae54a623c9c5790a2\"},\n    {\"name\":\"Blockhead #1727\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1727\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08133a1623a464ed000000fb5527e13593eacab9ad7d4db861bc1bb673a120b8\"},\n    {\"name\":\"Blockhead #1738\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1738\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd9d5a88d6336716c000000000c688ff92d52a3bbb3391bad39805c1ba2c89203\"},\n    {\"name\":\"Blockhead #1977\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1977\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6b1cc66587aed02b00000003d92ec08ffe8ff4b9921de38855568e51b66aef7a\"},\n    {\"name\":\"Blockhead #1970\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1970\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x02f4a1563b4ae1fe00000008f63626af3f481b4fbf2fb39809958b122fb8251a\"},\n    {\"name\":\"Blockhead #1174\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1174\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18b2cbaf9d5a8a6b0000002c314e64814e128514dadb48209be1248949119a6a\"},\n    {\"name\":\"Blockhead #533\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/533\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3a5ae1437220920000000664f6b4e7a9a8ab807ab2af75e4324c6b7d8a2f9eb\"},\n    {\"name\":\"Blockhead #1339\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1339\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x417da0c7976f5f5c000000574971a4421ccf5bc8892804fdb5e3c69985584265\"},\n    {\"name\":\"Blockhead #1305\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1305\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x91a5e2a5313b94c000000058ed3101519ebf62c085881e849fe5d7a5b95cd3f8\"},\n    {\"name\":\"Blockhead #931\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/931\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1ba3023d70a8f2a30000000321e66ffe5b9c421f98f50637ee4d106a58fc4fd6\"},\n    {\"name\":\"Blockhead #1893\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1893\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81ae73914dbd5dd7000000fb441dc41fdabe10b19b1fc8ffc09ca15a3d0af0b0\"},\n    {\"name\":\"Blockhead #1011\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1011\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x973725ad04c76fd3000000305f16c7ed18ce4c7f26111c2f9f2fcc2f4e2c0d54\"},\n    {\"name\":\"Blockhead #460\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/460\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4181b25f4881d8f90000009048020ad5e84cae541dc9f5de36b88187f66985fb\"},\n    {\"name\":\"Blockhead #593\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/593\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f63f5787c7bccf3000000324b89c242e2d7ad76ae434111a2932fb3cd66b4b6\"},\n    {\"name\":\"Blockhead #812\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/812\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27549b9d2cdc45c0000000af0269207578d4f60e7007417e29272fe3b437b65a\"},\n    {\"name\":\"Blockhead #643\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/643\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x484f6a15938e3eba00000063e380222ef8813f7d1d6f0c7dc5f651f0b54c8d54\"},\n    {\"name\":\"Blockhead #1622\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1622\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9118c6358d11da6d00000002f5a43b6e2d759040c60abe7794640a9525e6bf9f\"},\n    {\"name\":\"Blockhead #1301\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1301\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88ac44dad6e19db5000000657d049aa5f433dbeff77cd543ceb2ff49b17994e1\"},\n    {\"name\":\"Blockhead #899\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/899\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31a7ab0bdfc2ce610000002a185a303ba92db98429e3e26bb9daf8eca48c4e30\"},\n    {\"name\":\"Blockhead #1067\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1067\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa6e009f61fa5eed80000000a683487e1fb784ba21aaadd38eadb9767115dc093\"},\n    {\"name\":\"Blockhead #879\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/879\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcc19bfdd3fe5665c0000000238c37f8c1f3de9f1d9f905e717d41f319bd36c1a\"},\n    {\"name\":\"Blockhead #1568\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1568\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24900ca63256ac3500000053b01efc41fba02eaaf4bd5d489f17e625be5df6e5\"},\n    {\"name\":\"Blockhead #385\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/385\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8ff2843bd9dcb08e000000749cb7020c83034b2270af1ef39b6133416a83bfb9\"},\n    {\"name\":\"Blockhead #1651\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1651\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf25db4268123741a00000008c9a288a1e7cddb76bdeb6a290b3cb075fd2a647e\"},\n    {\"name\":\"Blockhead #1002\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1002\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd68d8196a27e55c30000001428f503b89f12ce2c2ce04f578315ce33eda99f71\"},\n    {\"name\":\"Blockhead #26\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/26\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeed04e94d277343c0000002c294739684cdb85cbbcc6e9cfd27392de7074fed5\"},\n    {\"name\":\"Blockhead #1668\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1668\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18fc6f271fe696dd000000a47a540352c72dfbbf11f21c5e748eb0368201e043\"},\n    {\"name\":\"Blockhead #1495\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1495\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x84203c65643b4de100000030c60843832668fba3e005a4885f56419b182d39b9\"},\n    {\"name\":\"Blockhead #97\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/97\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x356909bbc266b83c0000000e482ae7149aff576b0a73fb935749a5e731698a38\"},\n    {\"name\":\"Blockhead #1359\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1359\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e0918142f36bf2b00000062f259dd2e5cd75b737e5a606116ea55b1e9cc1a8d\"},\n    {\"name\":\"Blockhead #449\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/449\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x23ae470247d82fea000000b005dcee13b23c9d72f77b02620cc07e88331c9701\"},\n    {\"name\":\"Blockhead #1262\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1262\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb8b9a033cc87aeb0000002d3354bb1e859f4cc42b8d604058aa909d7f5e5690\"},\n    {\"name\":\"Blockhead #1429\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1429\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb22f397723990110000001943c71e14ebb7d03ddfad9f848cbb2e3c09534209\"},\n    {\"name\":\"Blockhead #454\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/454\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe58a2b80e4d698c9000000cc5016866a1f786129be986ab34e0e1fda4b2f6bfe\"},\n    {\"name\":\"Blockhead #901\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/901\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfd68dd68a883c0b70000001f1c7802b390baa824239050d7d1c4bbabcc1ba690\"},\n    {\"name\":\"Blockhead #1296\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1296\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd6c4a885280d6b960000003147f2cab4d559d5944b80bd9807718a7d0c363b7e\"},\n    {\"name\":\"Blockhead #423\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/423\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeae10a1b7b603bb500000085ea03250c35fd7da0e16c07565c7b622406bba809\"},\n    {\"name\":\"Blockhead #1009\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1009\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2f30aea3557165d000000494e273c8f9ab61a6ed3b3dbf6cef193152a42a575\"},\n    {\"name\":\"Blockhead #1833\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1833\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b084fac2fa34a4b0000000a27f75bf984174bae48872de3ec070405a4523cf5\"},\n    {\"name\":\"Blockhead #1842\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1842\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x42f8493d532d0aeb00000001759b3a8d05defabc9f2b4998f0a23384effffedb\"},\n    {\"name\":\"Blockhead #1423\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1423\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5affa687f7f8667b00000084651c2841b6d75e1e2ab82e040b8ca98ebbf2843d\"},\n    {\"name\":\"Blockhead #166\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/166\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x56a78b5dae2f7a7a000000659706405c98700a8db9a91199d283ceaf8292f343\"},\n    {\"name\":\"Blockhead #317\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/317\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf215fd1192b685960000004b5009db202cebcb98e5e38b3d0c4eda23fbb61549\"},\n    {\"name\":\"Blockhead #1440\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1440\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x91550215d55ee2050000000157e0b8bccb0bfafde8ff569c8a2dbf546577eed1\"},\n    {\"name\":\"Blockhead #1454\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1454\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5a9c1f2da2fec8ef000000c050f5b736d7ca00b82d0f3ac4bdd1f9bf759e3a4b\"},\n    {\"name\":\"Blockhead #1362\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1362\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7272b700713fe2f0000000009b8eeec17f29f6978296fda2e75506162b1ecea9\"},\n    {\"name\":\"Blockhead #1899\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1899\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x70679edd001d596f0000002a455b620f730565e7c195f29f218c70ceb6346989\"},\n    {\"name\":\"Blockhead #911\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/911\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08323602a564a9d700000001579f5ba6e875feb3c56671ea16de6efd7020a878\"},\n    {\"name\":\"Blockhead #819\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/819\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa29d0e34f6a095e1000000de4708a64fae600d64a1dcc39666a26732a79d3336\"},\n    {\"name\":\"Blockhead #249\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/249\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe9603d1d1a2235e8000000741609dd0d29435e5b1ca61df875355113d9975eb8\"},\n    {\"name\":\"Blockhead #70\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/70\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa5aac2c14ced2aac000000bb9729b735fb20d2d474f4d90777ac327112ec9c4e\"},\n    {\"name\":\"Blockhead #23\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/23\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa3a5ce7087aa65d7000000541a96182fe3b270c6b6972eb2d98a4d6f556115c3\"},\n    {\"name\":\"Blockhead #1880\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1880\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf860320a031b8a8a00000063d5153e1cdfb657e348ea5e6f4d31fcdf19d5f57f\"},\n    {\"name\":\"Blockhead #399\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/399\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa8155dbd44c912a5000000895004d9cb08ce1c97e79044b2253202e6bb236291\"},\n    {\"name\":\"Blockhead #727\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/727\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c7d4b4f4168ee990000007b380d1944cb0125943080415f27fa5c7266112d81\"},\n    {\"name\":\"Blockhead #1723\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1723\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18c549118786bf8a000000237101061f73491729f85237495002ff36b24996e6\"},\n    {\"name\":\"Blockhead #113\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/113\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x47162b7cef8c5a9b00000068560ae77314dd8cd7d3807d86901202eec3386d5a\"},\n    {\"name\":\"Blockhead #1059\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1059\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc03fe60b5d4703b1000000a26d3f012289ff3608586180829b6796c034464848\"},\n    {\"name\":\"Blockhead #864\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/864\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9a349b3b3bcaa75e000000d3cb0467492ed64f5a19055a4da2b458767e7fca7f\"},\n    {\"name\":\"Blockhead #928\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/928\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf1cc5e3a6c4e7a0d0000002f8bb7830de385fee3dc39c999be0acb873c430355\"},\n    {\"name\":\"Blockhead #2000\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2000\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec762f67bcb70d700000009035133a439165a07060d2aa8323ec8e282811cbd3\"},\n    {\"name\":\"Blockhead #1376\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1376\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2760ce2f66b09cff0000002e5942e77c57de3b162a4b67f51a6732ae8cdcc4f9\"},\n    {\"name\":\"Blockhead #1756\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1756\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb20f4db0f9762d94000000069bc1a7e3732309099c0f4760d9d390583f5741ac\"},\n    {\"name\":\"Blockhead #455\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/455\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xda7bd0f2bef4738e000000a849fca32c780dc1ec4e38e3dc927904e8e0b623f5\"},\n    {\"name\":\"Blockhead #846\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/846\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xde99bf6398b3d644000000e24375f93fb214b5ec81f065909d2edae744cb2bf7\"},\n    {\"name\":\"Blockhead #1005\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1005\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb13a829e573d18a60000000c4c8aef44c8b6e1b2f5afed8f6190b75ec5f3f18b\"},\n    {\"name\":\"Blockhead #1071\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1071\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4230e5e8a224ef31000000313af5de56c9418b8eed05972d6b23b0f007b4c198\"},\n    {\"name\":\"Blockhead #1413\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1413\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1bb9dbc7c61a1c22000000315ccd0d80a0f05f97f9618fc0679391cde1d97a72\"},\n    {\"name\":\"Blockhead #1104\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1104\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec3b4d4b7bd80cd900000046c22f00637df0027e94ba7231edc25b8fc30cc9c2\"},\n    {\"name\":\"Blockhead #1561\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1561\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb47074cbc2334045000000d1470f6303a3b6266bee3bc7ba8280f51d0ffb1c9f\"},\n    {\"name\":\"Blockhead #1290\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1290\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b27bc2efebcf4860000006029181f59f63c141dd36d426e4bf64da028cb1175\"},\n    {\"name\":\"Blockhead #259\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/259\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f86bb600776a0e500000033bc003b0d628a8fe3f127e616511ac1f0c2c3b6c2\"},\n    {\"name\":\"Blockhead #1064\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1064\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd0c84cebd0037d590000002fec2f0e692ac7a7c9ca8e84aae41d896f45383299\"},\n    {\"name\":\"Blockhead #926\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/926\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebc78d747bedb2420000000c1ba7a03a73e614f43ee8f355fc9c25b029399e00\"},\n    {\"name\":\"Blockhead #345\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/345\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2bc03bb8d0033651000000d56041026f89f6b1e851d37d0118bc96838b1a5816\"},\n    {\"name\":\"Blockhead #1827\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1827\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15791685345471480000007b44c61e48f1acb60b42a7648f5981946aabcdf03f\"},\n    {\"name\":\"Blockhead #794\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/794\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa86c7c3dfb64ca34000000016e2bf096a93b92ff15eeea60260e0311ae298b9a\"},\n    {\"name\":\"Blockhead #1895\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1895\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0eb5336ecceb48770000001332231c0b09e666a829629f02e310e6d02f8f098f\"},\n    {\"name\":\"Blockhead #1847\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1847\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7e0c93c961a34024000000ae45ef03fb85b0c557e17fb2b0bb892e5c7d84f6c7\"},\n    {\"name\":\"Blockhead #383\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/383\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc88017becf0349dd0000000208dc41fea99a9d539893f74c80abc910a7bd8f4e\"},\n    {\"name\":\"Blockhead #811\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/811\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa890b86e8be7a5030000002b471d7bc49d1f8e23438a9ceac88998e130cd17be\"},\n    {\"name\":\"Blockhead #1344\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1344\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x227901004b3fde3f0000000bed47fddfbbdce4edefb5389322df964650457240\"},\n    {\"name\":\"Blockhead #1592\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1592\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b423c9c263d5b28000000007a9f23963d7690302db3679fc5076e24653fdae9\"},\n    {\"name\":\"Blockhead #1918\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1918\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11f01cea2678f61e0000003c16f001ed6652f98542073dbd45216519fa053e25\"},\n    {\"name\":\"Blockhead #2002\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2002\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x84d296a7a82efa63000000fb212fad38d7e5c28dcc760f483f183776b9036be9\"},\n    {\"name\":\"Blockhead #586\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/586\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7fbc617bbb1c6679000000e88628963c3b0c6989bf0ca17d297ac105fa8c0176\"},\n    {\"name\":\"Blockhead #1433\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1433\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe896183954c8dbcd00000001c561aaa13528097a61746ac8a9c163295578aa48\"},\n    {\"name\":\"Blockhead #1287\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1287\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe2309749117895320000003035c44978f846a3aa38c69ec74b44ffaa573fb6bd\"},\n    {\"name\":\"Blockhead #939\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/939\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf8376280074b347000000291f0c8f4fce48a481cfe9a2e8ef9b60e22eab1ba5\"},\n    {\"name\":\"Blockhead #1030\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1030\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb99ec93e93fc91f30000003016a615ac860afff04f98758f829fa48e7f64e324\"},\n    {\"name\":\"Blockhead #1076\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1076\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf93127585d5511af0000000f0a4e863e87d599523b9a08b83111dbeed03483fd\"},\n    {\"name\":\"Blockhead #830\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/830\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0db2b10279e6f5d5000000c1e16900559da6d79e1a0b802ea425a6f17a6918ed\"},\n    {\"name\":\"Blockhead #1322\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1322\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d16c1677837886d0000002b40004167cba0ba5019a00e5a1aa878a511d5b8b6\"},\n    {\"name\":\"Blockhead #1297\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1297\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ca9904f63039ad9000000512d1182486414d16eacdf953c5d4d9d413b7a73ca\"},\n    {\"name\":\"Blockhead #1254\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1254\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x68e6fd7030a8941300000068428319a4c4b8db62ff1f118fc16f12c4708f8457\"},\n    {\"name\":\"Blockhead #1728\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1728\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x830498ad1bc7607f0000002e0a2b7bf42e685970d1a41882039806fb75b6e064\"},\n    {\"name\":\"Blockhead #1562\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1562\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x241ef591c86e0ad10000005a11830f3746a5e9d42c346b120a82782af15a818c\"},\n    {\"name\":\"Blockhead #1805\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1805\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e7d7b6e22a9a5bc0000002e7f417420207980b1050b1f4c0e3eea846d75c1fb\"},\n    {\"name\":\"Blockhead #2016\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2016\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9efa468a85f0c21c0000003550bc0614828a7dc48bb40c40a653a0b0f8c94de8\"},\n    {\"name\":\"Blockhead #1766\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1766\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x863319983b77c2750000008b022d4a041c33ac9f1c6b8820ffe8c82ad2a27508\"},\n    {\"name\":\"Blockhead #1793\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1793\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa6f9bf00579d00bc0000006127007b7c27945521892b8f967c7b59340ce91cec\"},\n    {\"name\":\"Blockhead #1253\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1253\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x155dc734e5c439a6000000b01502ae6e092b054dfa29eaa4bda450000519fe82\"},\n    {\"name\":\"Blockhead #566\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/566\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x57f700dec7b6c0de000000c94b5bdc45b20c5c7bf89cda143a52447f8db81a3f\"},\n    {\"name\":\"Blockhead #963\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/963\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x346b9f0f19437eb60000008c56102b397e7b2fb9665425a185b38577733f0447\"},\n    {\"name\":\"Blockhead #1647\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1647\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52d7ec1b498b10d50000009c941ccb3c0fce2e94ad078b47854458248bfb2389\"},\n    {\"name\":\"Blockhead #744\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/744\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27e9ef12514d4b750000000f1dd7e62fff72c12f129a21e1c2d4308b1072c709\"},\n    {\"name\":\"Blockhead #459\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/459\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xabbcf9c83bccab5c00000001615234ef53a1b58c7659628f8f1a0ea11be7effe\"},\n    {\"name\":\"Blockhead #397\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/397\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0da533c54ef1368b0000000bafbcb2eee66d3be709943dc6b34a06a6257052c0\"},\n    {\"name\":\"Blockhead #1888\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1888\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e195795352fe42600000002f44cdddb1bc958e1d62954317035208d552e6474\"},\n    {\"name\":\"Blockhead #624\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/624\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0eb8442743884689000000e30c4f113fd1a41128d6d63291f784eed3dd115710\"},\n    {\"name\":\"Blockhead #986\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/986\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd5204096c5d49528000000a28a6005760b1e3547ddac52f2fe68626866ab53bb\"},\n    {\"name\":\"Blockhead #1655\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1655\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f0647d2408d7491000000fdb11c1e46530ac3d09bf9c621a02e869fbff4d40a\"},\n    {\"name\":\"Blockhead #24\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/24\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x374c81fbc985f60f0000005a1558ae38f71ce1b9cb1f8e0b31e16267da01fd11\"},\n    {\"name\":\"Blockhead #103\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/103\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc802bb59548341a50000002018820e43540a2b75f95005a7cdb1b12aaf526b72\"},\n    {\"name\":\"Blockhead #720\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/720\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e12ef1d023fda4e0000003cff70034fbeb0df6fd213affef64580e6cdd346c6\"},\n    {\"name\":\"Blockhead #1741\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1741\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1465864e59af49ed00000048201bba6a51b4a881d358ace2355a516b559b2be0\"},\n    {\"name\":\"Blockhead #358\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/358\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5071854d52ddbf1500000067085f444fbd704d775f1cfb3f09368e7c9cc5e1ae\"},\n    {\"name\":\"Blockhead #599\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/599\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c2c4c3ed829526600000003f8c774aac136abf90187651a74f6434457cd0862\"},\n    {\"name\":\"Blockhead #144\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/144\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8d63fb6a87bba936000000670f2f3b7b7b72790ab28e45331aa4dc29591d6690\"},\n    {\"name\":\"Blockhead #1405\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1405\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8d64ed939707ee9a0000001401bb8219e9ccf2c37b7fd9bda988ecfb9816bec9\"},\n    {\"name\":\"Blockhead #200\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/200\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6b5b303330dbc3b40000002e43cd50f689d6cd83d986c8aa702d3d041ad9bcd7\"},\n    {\"name\":\"Blockhead #584\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/584\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7d7024af05db831000000d1470e6069a5683f9655dc603ac3cc2c7c49f47127\"},\n    {\"name\":\"Blockhead #579\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/579\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c9741c4c554ac4700000068cea9bc2e28442e752d548795fe8606ebc94c5079\"},\n    {\"name\":\"Blockhead #1607\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1607\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa7bd3ab5fb793c230000005503f35d4f843a609f7dffebeaa0c74321c76ce728\"},\n    {\"name\":\"Blockhead #1877\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1877\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xce5f54c5195bed32000000642218bad14b5a2207f48a87c6b66dbb311011e3a8\"},\n    {\"name\":\"Blockhead #10\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/10\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x191bba2e9ddec9270000009a18bb192f9c81f4708e72cef4a55afad2ea8fe8b1\"},\n    {\"name\":\"Blockhead #1452\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1452\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe12658d4c38563a5000000e116af0e3d4c3219f439b74ba0fba0d581cab25749\"},\n    {\"name\":\"Blockhead #1146\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1146\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74309b2f4bde4bda000000e5efbe015e92d14dcabe8bf9646cc9d9f67264b484\"},\n    {\"name\":\"Blockhead #1933\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1933\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbcb1b89a31c5f4fa00000057fd1a161798cae9452568b7a863f18889f732c57a\"},\n    {\"name\":\"Blockhead #742\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/742\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8d525f1a1b178af10000000b54d784e45672f036cd254aa90a48ae4376975510\"},\n    {\"name\":\"Blockhead #339\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/339\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x29dacb09bc42b4410000004b0a395240b7822ab1943f44dd946811952f53c8c0\"},\n    {\"name\":\"Blockhead #852\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/852\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8468f7f94fba812b000000511793f7374f8e0f59603cb82b3dc1a16830d374f6\"},\n    {\"name\":\"Blockhead #1788\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1788\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd1893cbdd167b425000000585a030e6d55f42942de973b92d4daa84a00113466\"},\n    {\"name\":\"Blockhead #293\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/293\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x84787aa2a1adcc3000000034088e0f2eca7dc59c2cb4bdd940672f6c0f849736\"},\n    {\"name\":\"Blockhead #1409\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1409\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xabc9279cb66d1622000000f805ea5660344151cea6fe727e9d3385de3333379f\"},\n    {\"name\":\"Blockhead #1530\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1530\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfe12af00b78a26f80000000370d389db779f77860c893b09a4720d6ccbf4c344\"},\n    {\"name\":\"Blockhead #1775\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1775\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd04dcb466aeb586d00000022027a2385aa206656f4cd1d9e1bd1d6d12ac5ec2f\"},\n    {\"name\":\"Blockhead #871\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/871\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x196dce11d68a532100000063029e90ffc2f3bdc4b7029683dfac1f95cc8729ac\"},\n    {\"name\":\"Blockhead #1957\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1957\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab1b81e92b5ed77b000000bb728d037f2d5739b6d9daac3e41c6c578495c3894\"},\n    {\"name\":\"Blockhead #1858\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1858\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x00a2a3112d598aa8000000906d0ace3cf6548046bb83f2546792fae1c1df3c0f\"},\n    {\"name\":\"Blockhead #1714\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1714\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x960cf604039d760c000000d01d4ecb2dfcee976e26c720ed37654561f5a187fc\"},\n    {\"name\":\"Blockhead #156\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/156\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e61fc8ac59297430000003304f2357c03d099906f14ed4ef02ecec088359d89\"},\n    {\"name\":\"Blockhead #2040\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2040\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac07f8e7a89d73390000004f63211a589b20e117c21d0f293b449b8a61a2b822\"},\n    {\"name\":\"Blockhead #1872\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1872\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd7e797d71d13bb290000006ea4049610a310e33dddb87a9ee171cb5df926b701\"},\n    {\"name\":\"Blockhead #844\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/844\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x55782327272307b50000004a511d41c4206544c9c9de02655232d3424d337ed3\"},\n    {\"name\":\"Blockhead #1945\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1945\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc118fafb6639d8fd000000613f04c971e117a890988e8ad8fc535e4a5d65ef40\"},\n    {\"name\":\"Blockhead #1330\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1330\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc034718093bf6aa0000000d732029551263f3371e4a0405b6f689b113799aae8\"},\n    {\"name\":\"Blockhead #1706\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1706\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6843b9b7b11391fb0000002613866d35803e929d33b0c60ab65739b2b6e0d57e\"},\n    {\"name\":\"Blockhead #438\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/438\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb01f31aae0cfa3ba000000b1025abc196de748212f40e080b8ebc1ef8820f338\"},\n    {\"name\":\"Blockhead #6\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/6\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc1594bffd9c3e53f000000f37a000600f6022d169131a9c1df398ee72dd63eaf\"},\n    {\"name\":\"Blockhead #1281\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1281\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8fbca97917244ff90000005aa419f1470a08444a35c062f57f425680728862dd\"},\n    {\"name\":\"Blockhead #407\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/407\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71fe66eb87c041cd000000d0473a51178f1d972f578f1baa674cb1bfda92a7cc\"},\n    {\"name\":\"Blockhead #1608\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1608\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2fa2daa78fa4ee57000000e0601d454892db5fcce32d5ac38e94757cba587fb0\"},\n    {\"name\":\"Blockhead #2\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0ca402a8fa2cada00000084499c1210fa0a263ac3001c0a663cc6183f945888\"},\n    {\"name\":\"Blockhead #1673\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1673\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71f7136d4a19ccdd00000086180d071a61c5104febdcbc4f8a399d7e628167cd\"},\n    {\"name\":\"Blockhead #2035\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2035\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x38fd7eaaf82b88330000003078a62b55163305d31fdb41fa605e288d1bb73e0d\"},\n    {\"name\":\"Blockhead #2037\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2037\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa9f4d11c6f2be4ec000000ac4b1e1dabe4a1b404cd5f706cf0d109bd09362ff8\"},\n    {\"name\":\"Blockhead #1990\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1990\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x47d033e02ea422300000001e8da301c21cc7954ef262dedd223d6aac2628239b\"},\n    {\"name\":\"Blockhead #1398\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1398\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x72531a6f2375bea300000083035c1da98ef97e0bb46864bf04bf3542482647da\"},\n    {\"name\":\"Blockhead #753\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/753\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef3f607bd77e3de3000000371e88e12f10d5c3de40528ecd470d0fdcaf2d27a7\"},\n    {\"name\":\"Blockhead #440\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/440\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3e44b47670785df400000060a82e0190f8fe84a3372aa4f69f0562c5166570a7\"},\n    {\"name\":\"Blockhead #474\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/474\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7111e0f1b72967c000000f5063fb634c1c644d67501cf337ea93ba2877856f2\"},\n    {\"name\":\"Blockhead #1659\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1659\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x67fce4ece00666a000000031c93882206d04e747f211af82b47184bd35622f87\"},\n    {\"name\":\"Blockhead #597\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/597\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36f70cd57c7019c900000030b5f72c5e382f2d689b570f494a19451303e4dc27\"},\n    {\"name\":\"Blockhead #1437\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1437\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08bc4ba683786c0e000000029956ba9be375a171847c7bfc8b5aabd298946e2f\"},\n    {\"name\":\"Blockhead #1509\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1509\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0c734d1a4be14870000005ae88e042318de93173d37356167195bd93a748c5e\"},\n    {\"name\":\"Blockhead #494\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/494\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d16551ee8b8ca3d000000c408d21833196319642fa48441b46806fa8bc6b528\"},\n    {\"name\":\"Blockhead #1642\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1642\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a4436eb3f924ab2000000665ea2944917ac219d8f7ee97a080105ef504ed218\"},\n    {\"name\":\"Blockhead #1385\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1385\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5958bf33b8d064eb000000c334048600c06b479fb951117a436760c1720f1712\"},\n    {\"name\":\"Blockhead #2043\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2043\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x600bd33f293e92b50000002dcd0c38af3b8840258a7080efe109aa8bcbfa1cd3\"},\n    {\"name\":\"Blockhead #553\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/553\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0d63b2af39636bcb000000f4ed10953af8a6d0a9b993dd39c87fda5f3d7637c6\"},\n    {\"name\":\"Blockhead #1917\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1917\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x93499d2683120cf4000000688f0e7e6ac434310a6f6aa66c86d8152d9ded7113\"},\n    {\"name\":\"Blockhead #110\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/110\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x367ce3868276ac2e00000058058ba8228dff6c6e902bea4278e38539638a6d0a\"},\n    {\"name\":\"Blockhead #1684\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1684\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb27955b7ae7cd6b5000000e1445fbe12ade4bada87ba7f01a33b0835dfbf82c5\"},\n    {\"name\":\"Blockhead #1120\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1120\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x977b38abee43a49e0000005aa100e15ccfb5c3af52981020e205f3434b0307e3\"},\n    {\"name\":\"Blockhead #1942\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1942\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcfadc271fca1578f00000025d317dc0ceaad3ca55f807b6ae6c6dda5c6c5e95b\"},\n    {\"name\":\"Blockhead #999\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/999\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0c840e83646d54410000002e65c3447f4d64b2f2f5999cb20816db95cbf9fc34\"},\n    {\"name\":\"Blockhead #1270\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1270\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbde3612249eb4fac000000c96b04bc5793d13bd57f14707b484b58d4e5dcd662\"},\n    {\"name\":\"Blockhead #649\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/649\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x629e0194e888099a000000018afff4a2600d05bfe4f180fe3e6d558dbc55e5b0\"},\n    {\"name\":\"Blockhead #2019\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2019\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x54b91b69b339a5e5000000671cdeba19455e26cd96cf2bcb9b459c533f47b68d\"},\n    {\"name\":\"Blockhead #786\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/786\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe89df6a1920e35360000003ad278036db416b4152a4aa84274be53eb48932789\"},\n    {\"name\":\"Blockhead #1682\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1682\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x260d4bf84e53a86c000000b043b64f45393589a4ccac57138ab665ce70a64a0d\"},\n    {\"name\":\"Blockhead #1707\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1707\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ab5acb0eba19dc1000000fa095e6239537ffb4c5d013fa644434f8b6db7e166\"},\n    {\"name\":\"Blockhead #2013\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2013\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2062bcefddf9e9ee0000000e117446421abc8d2e968bfd4792413f87d188dfec\"},\n    {\"name\":\"Blockhead #1759\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1759\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x882caf7603e6e10c0000002f87e00a6eca4cd7119ea69571186ff61a29c340c6\"},\n    {\"name\":\"Blockhead #945\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/945\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0da8f20dfb2b00b000000311784e097b331cbe57a5d5c60c3d2137ffac770e1\"},\n    {\"name\":\"Blockhead #946\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/946\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2e4b8d79d117d17000000470276f369337dd5c9f53e30bcf7e75d1c4d6874fe\"},\n    {\"name\":\"Blockhead #1334\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1334\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf35535fd102febe2000000de3f5f04c80a39067530334e546edc39f79e5870bd\"},\n    {\"name\":\"Blockhead #1910\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1910\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x501e36ab0d8666c1000000e300868e4e0f1a51448aa82d6b11b9a9fe923fae10\"},\n    {\"name\":\"Blockhead #1279\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1279\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7abab1909b9f566f000000696f17e7c513361f64fcdb7918cade6b382918bb0e\"},\n    {\"name\":\"Blockhead #1271\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1271\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x129454a799fcc80f0000000bae7128feac7a9c9b79447e3b9cd6e0b23366c270\"},\n    {\"name\":\"Blockhead #1393\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1393\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9dde1485c83c870e000000a91340383ca016ed8f9d2305d7b1f89485f1b54957\"},\n    {\"name\":\"Blockhead #1577\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1577\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb288d00ead8b5ecb000000694f5aea9594055d7f1801dbb748e6d7b83ba0ac7e\"},\n    {\"name\":\"Blockhead #1517\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1517\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x011feb40355b9d8e000000981ca13733cbf190496305b0edaef040017159fab2\"},\n    {\"name\":\"Blockhead #966\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/966\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe867648bf514f530000006f0549bdb7a6778227d6b7c3c34885be360a717b9b\"},\n    {\"name\":\"Blockhead #1321\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1321\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb13c2d91fc712c0a000000484b391e1b1298a85c03f92ac816edb505ab94caac\"},\n    {\"name\":\"Blockhead #475\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/475\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x900c8335c1e46b92000000e1430445e3869f76bed9ad43c8f6fcd3c30261d03f\"},\n    {\"name\":\"Blockhead #1745\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1745\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2426976d124c391e00000000ed93a9dc1eea2de4a6a28c9f3319a1622fe2ead6\"},\n    {\"name\":\"Blockhead #210\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/210\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x639fa070cd682d4f00000086054d76c2f48fa9c4c329217def1e824baf089fb0\"},\n    {\"name\":\"Blockhead #1353\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1353\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x14d4b06bc215f316000000be09ba1832068e599203b88ad473adaf69bf521231\"},\n    {\"name\":\"Blockhead #13\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/13\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1a4903452d878c910000002fa556a765720184abd5099533e04eec811215a216\"},\n    {\"name\":\"Blockhead #1958\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1958\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8576b79949e3a334000000909d1f6444b3f32b60a76a6222d1c70572b3745d2d\"},\n    {\"name\":\"Blockhead #976\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/976\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc6a4a819c2a95c49000000bf2e211c7f4fd7bbff52c30a286d89c1ce4cb53363\"},\n    {\"name\":\"Blockhead #1512\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1512\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36b4210965644f3a000000aed0fe037845b3ff083fa9560c6ea3b4b5579252a4\"},\n    {\"name\":\"Blockhead #1948\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1948\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x452543dcd44e42f9000000bbb18a05036289071d4b26f1d973c4e9c39a7ea036\"},\n    {\"name\":\"Blockhead #565\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/565\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3bf099f01b108bcc0000007fdd0ced3f816f02f5aabdf9aec04ab84d25919df8\"},\n    {\"name\":\"Blockhead #1426\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1426\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2805ef2844e98414000000ab37420a3cfaf65b3ca21e56234b8107b581cc20bb\"},\n    {\"name\":\"Blockhead #908\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/908\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x46a383fe2f0463410000002d284268c5e3a847071fc111cc5750df1ba01608f7\"},\n    {\"name\":\"Blockhead #1643\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1643\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdbdc4c5b684af50f0000003e3632bf34a9e4ef727ba3e5a5684ed17e33992ca6\"},\n    {\"name\":\"Blockhead #1176\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1176\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8afb4c12f6d06fc300000025475e7c505941071177ae0c403bf2fabd39243de8\"},\n    {\"name\":\"Blockhead #606\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/606\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x43ad7f54d288f81c00000024472f427ed9c1f7f76fe7a7ea8a389412fad97b1b\"},\n    {\"name\":\"Blockhead #286\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/286\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa50337ebb666650f000000b505ad9507c3514533c4452e9555198074300cae3d\"},\n    {\"name\":\"Blockhead #1291\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1291\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x158102478087c56100000065c3239889c3fb0e71373a3e522cfd8a30cf0bd47e\"},\n    {\"name\":\"Blockhead #644\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/644\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x475a5b25cea490eb00000083f2060a49a64d12f56d79d32c606eb481b9fd411b\"},\n    {\"name\":\"Blockhead #408\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/408\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb2684add0fc4fd20000002a70261668ebf3f376321fcea562e90150314c2d27\"},\n    {\"name\":\"Blockhead #20\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/20\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11ef53d70eaed8da00000092135b6d409df01e6adc8e280633541f76681a86cd\"},\n    {\"name\":\"Blockhead #608\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/608\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c3efcb5682b99140000009e0a51803051e6348f87e6726556ee64184b8c8fd7\"},\n    {\"name\":\"Blockhead #1821\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1821\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8abf3e52982c9b3b000000c93902a46da3097a23606ec85ffca98f1dd87e3c05\"},\n    {\"name\":\"Blockhead #2032\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2032\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9cd0d0673bdc92f4000000934b2b24569725000a7c080a8a06fe761843efcd7d\"},\n    {\"name\":\"Blockhead #1137\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1137\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4544d7eecd75a39d00000003e488e4e744888f4db969af06b8f5bc4919c584d1\"},\n    {\"name\":\"Blockhead #1349\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1349\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe16177f34245f3e1000000fe4a23b3d1f84914c3831933123f86e605697f49e7\"},\n    {\"name\":\"Blockhead #301\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/301\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99e4c447a2b0f5d2000000688a1d0daba5b5165fa97f0130e5d7943bcb8c15b3\"},\n    {\"name\":\"Blockhead #1591\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1591\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaacb46e996b2574d0000001f4b5839543e4c97ba9d9b7cfa6e7e0148270a4a9f\"},\n    {\"name\":\"Blockhead #1185\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1185\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xae68a2a31fa21e9700000094bf152845287619fd6c336d07f8dc2b3e755a5e32\"},\n    {\"name\":\"Blockhead #2046\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2046\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3d216f0eae2a74b000000d21202399cc73f53522bebaafe495a775c623abd84\"},\n    {\"name\":\"Blockhead #3\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/3\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7c5759de7216f660000005a92060c0d93d8f38f9b8755553ac6c6670240b530\"},\n    {\"name\":\"Blockhead #554\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/554\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74c7a3144511155c0000002df57b694ed426be8da967599340b8350ecfe9b197\"},\n    {\"name\":\"Blockhead #965\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/965\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x982da90e4b21a008000000611b1d5a86f726949bfac03287f910bb9ffee491a0\"},\n    {\"name\":\"Blockhead #641\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/641\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc9fbd5e4e3be2def0000005f474d126c09287efaea2301e7fc1527818b20e892\"},\n    {\"name\":\"Blockhead #890\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/890\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c00b9c8a3b2afaf0000002e55aa9e6392c1b785f7db8203661cb7ff4c1d507c\"},\n    {\"name\":\"Blockhead #972\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/972\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac0a275692016b18000000457ec8028650b002eccae8462fa81586f162295d21\"},\n    {\"name\":\"Blockhead #131\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/131\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x58276acb509c8b8b000000680e912e029fdfd00c8004c7ddd7bb30bdef046b68\"},\n    {\"name\":\"Blockhead #2012\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2012\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24493fcc20f4bb8f00000015cb009e1f27a7ff7aa8b10e85679e014097923d80\"},\n    {\"name\":\"Blockhead #1774\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1774\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x071d56b5e3e7540a000000697a235b93397fb433a9da53bac8dafb883fc4c6ec\"},\n    {\"name\":\"Blockhead #227\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/227\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b49a0828efde23d000000fe1e6a4c302b4ddb9ee93e6ddc1fd832af2e18d737\"},\n    {\"name\":\"Blockhead #1356\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1356\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe4142b801c2b561d00000060e515b70cf062716d985cd5cdf786b79f12be8384\"},\n    {\"name\":\"Blockhead #50\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/50\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4ae9d578befe549b00000063b7fb29437f4c3472a65e6277cb3c2415eee40991\"},\n    {\"name\":\"Blockhead #127\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/127\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe537ec7b704398ea000000c1ddf70023a4555e78c21cc2b72ace5815332d8f27\"},\n    {\"name\":\"Blockhead #1602\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1602\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x462e0c84097ef52c0000002c298a1acf5adafcf07cf8894f2a64e61fa36b3a35\"},\n    {\"name\":\"Blockhead #858\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/858\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7f001f4a32de4555000000a66319b115bfa8fd6a9a15b0e22bac407b55c5848a\"},\n    {\"name\":\"Blockhead #1447\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1447\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x58258a856c42b223000000464b69126a9cef451099988151fcecf5c1a39f8799\"},\n    {\"name\":\"Blockhead #323\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/323\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1ce1f167855d4dc70000004e77b5039cc578f4cfd58094b90a03a78aa8fe2fec\"},\n    {\"name\":\"Blockhead #1193\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1193\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62cbe2b6a155e0d9000000dbb63302bb7cb230f991b37bd33c227a13c02e502c\"},\n    {\"name\":\"Blockhead #924\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/924\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8ce2262a8c28064c00000076700555518b01d3a137d17170c817682d5aa95a19\"},\n    {\"name\":\"Blockhead #134\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/134\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb81938a2c86db5850000005910ab5730581f5d093f7a29238a90d792706a395f\"},\n    {\"name\":\"Blockhead #715\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/715\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x94683796eb05571e0000005109717a3dad642f337c2d6f869f0b4df8dcca4ff0\"},\n    {\"name\":\"Blockhead #2062\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2062\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe28ed9496c20eac000000008d487add8803d621db39c139063f6bae4f53843a\"},\n    {\"name\":\"Blockhead #1548\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1548\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf01b7a61e166292500000067114609c8bd3b0c04bdda6294d754ecbb5191e58d\"},\n    {\"name\":\"Blockhead #363\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/363\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8ca645bb15192a5000000f822101161b309defc02be507b7465f3296de62830\"},\n    {\"name\":\"Blockhead #1177\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1177\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f7adfbd01d2b5fc0000006771404b5ae9ae3f3bd3deabdeec400d480577236a\"},\n    {\"name\":\"Blockhead #226\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/226\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c38cc7899b0439c00000019462f8c183cd41054e6385f7d1b02cd26c69584d2\"},\n    {\"name\":\"Blockhead #1485\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1485\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fbe3ca16b4a3adf000000e16f4004a4aa9e52448c610c9150b152109619e1ad\"},\n    {\"name\":\"Blockhead #168\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/168\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6d75b651bdf760640000009802fb411b4ecfbde6da53a3d3f588aac368f187f6\"},\n    {\"name\":\"Blockhead #797\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/797\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10392085861ed5470000008c1b7502e4793f1c73d9e601ad217b9fabfd52ecba\"},\n    {\"name\":\"Blockhead #1231\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1231\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc5c58a9c2ac7aaca000000493842ac31df21d72c2b58c3cbad13419e12ac2b15\"},\n    {\"name\":\"Blockhead #1364\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1364\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x02b0963820c557be000000105e34be3a00729dda373ab2dbbf0c887db07a0ff5\"},\n    {\"name\":\"Blockhead #951\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/951\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a94fa21cd366c7b0000001326091666fae54952b55b18f9d3365bcbd25eb215\"},\n    {\"name\":\"Blockhead #1800\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1800\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x89ce83346afc5428000000466f5a0a31afb03c7b2f8b51131ef8bb65ba4c5292\"},\n    {\"name\":\"Blockhead #1445\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1445\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe888c3c57f2fa42a00000071f9018c5f11b6602374a1de2faa933e418aa51716\"},\n    {\"name\":\"Blockhead #766\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/766\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5adfedc8b99d11f1000000492ccb0a2b6eb5de29ed171dc6dbc499d3b33d91e8\"},\n    {\"name\":\"Blockhead #1675\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1675\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8527101eddb443e70000002659fd1737a5b0e30a0283ed3b3f60a532076e86c7\"},\n    {\"name\":\"Blockhead #346\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/346\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdbd34cd0db74cf0a0000004344800f560cc70d907c3c56eb73ca5e8e374cba49\"},\n    {\"name\":\"Blockhead #522\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/522\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x98234e94ad5d7a3900000055d70c51461af4e889a9a2d630c9716f93e572e239\"},\n    {\"name\":\"Blockhead #115\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/115\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4191d1ebcc9e7d4e000000a035128e5fbff5e682a0d97e61277c38170661f67b\"},\n    {\"name\":\"Blockhead #718\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/718\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x513107f247873d54000000622452b27f7ca6486cd17a430f7702c7ce9749348c\"},\n    {\"name\":\"Blockhead #1345\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1345\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8f92e990cb1ab4e1000000b344216af0533281b3264b6dc1be6e85c55ee701a4\"},\n    {\"name\":\"Blockhead #1952\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1952\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c23f3de29ae8a71000000166722c64b4045ad99677d7e9f6f7f912eada0ec9a\"},\n    {\"name\":\"Blockhead #1108\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1108\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe571dc8a6bb263780000005fdf047b053216db8c7a629b0cda9a76b7e866dc75\"},\n    {\"name\":\"Blockhead #582\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/582\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba3d42630bf63625000000554311a8e737cad4f888fffe53e7250c6416ce7024\"},\n    {\"name\":\"Blockhead #201\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/201\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0a14bec14066c3e900000001aff9bc9446ac97ff7d8af6e7c759466bf59f8c46\"},\n    {\"name\":\"Blockhead #1116\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1116\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2b23c0aa110255df00000082345401d783a463c14d4127c0da609a689581db5d\"},\n    {\"name\":\"Blockhead #1885\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1885\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc1405b90551f0b0a000000f903366486bb8c837235453e09df6c0dab0b82aa96\"},\n    {\"name\":\"Blockhead #471\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/471\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf5c360cfe7c1e674000000e800cfd17260ce579d4ebc71e45616680de4b1c1d4\"},\n    {\"name\":\"Blockhead #1813\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1813\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe7047fb33b370aee00000065bf2245d12b8871f309b6fdd53481163558c35505\"},\n    {\"name\":\"Blockhead #1671\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1671\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x98f1e4f5d8e7ee02000000686051ad61e1449451ccd9840f7de2abf31646af1c\"},\n    {\"name\":\"Blockhead #1317\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1317\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x50f4b0957362c995000000637736206be09533007380413121eb3727a29c1a53\"},\n    {\"name\":\"Blockhead #774\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/774\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10a77826e040686e000000391264ba47d0308b9b641558a6ca50bdae3fe6981b\"},\n    {\"name\":\"Blockhead #1337\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1337\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ca3fceef4cf97fc000000bf02fd0d87c7da67388ddd377d734b62ed7c8b032e\"},\n    {\"name\":\"Blockhead #1149\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1149\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b19b36d29a4ac780000003d344b27328af4ca89996b7915b75d3c1d13469ea2\"},\n    {\"name\":\"Blockhead #1226\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1226\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x130aefaa48d1a9b30000002a7b4ddb3a9da9c07d09cca83ef2aa495b9d870beb\"},\n    {\"name\":\"Blockhead #2017\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2017\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b9665c51265983a000000652476a65be50a64abf31d15cf3a119979b7e02854\"},\n    {\"name\":\"Blockhead #1830\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1830\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc505d23f6ad62617000000681769a68a3e8f1cfd77ea3fae42c29c574cc132bf\"},\n    {\"name\":\"Blockhead #1744\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1744\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b215cd8f73ae6660000001ce0281a1989bd0f38b6de32e030cb7ab9947e18b2\"},\n    {\"name\":\"Blockhead #307\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/307\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a9a8cc2108fb3030000007a45bec30d3b2b2c6ea5c44767be17d77b1f4e8011\"},\n    {\"name\":\"Blockhead #1676\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1676\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6985ede903d8cdf80000003744494b79a082b5cee7c90d1020b41e8e268302a2\"},\n    {\"name\":\"Blockhead #1748\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1748\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x723af31066859b350000001339a6f038dcaec18eb0e8052bc72057b383be5209\"},\n    {\"name\":\"Blockhead #691\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/691\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x41049602ad265ed4000000aa4c255cb40114a4a15f3c23b1b9c2ceb17593ccae\"},\n    {\"name\":\"Blockhead #234\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/234\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36a357142fef96c1000000b21727c1a66852a1e5c7a95010f40f70ba33da9600\"},\n    {\"name\":\"Blockhead #1869\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1869\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x560fadbeace694c10000004c42fe150b71de7f0b9228ef1fc92eea062f630556\"},\n    {\"name\":\"Blockhead #1092\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1092\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x64043ff5c98d7fd500000058249403955636f4faf71b5f4cec2816dafc3fb937\"},\n    {\"name\":\"Blockhead #1292\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1292\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x86902dbff09eb34c0000004f43263af62e9f9568f41ac27679b34be5407ee0d4\"},\n    {\"name\":\"Blockhead #1336\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1336\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa12a2ce9986567340000002f5b2cd28b19c494aef02356c877fbab412e739259\"},\n    {\"name\":\"Blockhead #1639\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1639\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f1a6c45a4ee262a000000353820fb1b19fb2039f8cf3f0347e93276a1f16aef\"},\n    {\"name\":\"Blockhead #1003\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1003\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe75edc5c54897773000000114bb40f6f1ac166695eaa45e87383583a43b949fb\"},\n    {\"name\":\"Blockhead #563\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/563\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9c40420239933060000000e913e3e23897d96d86ae8d03cf11d40f489ca76430\"},\n    {\"name\":\"Blockhead #817\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/817\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd82f2bedf3a902270000005b9a5305c766f4c4d62c276400216d24e0a54a8997\"},\n    {\"name\":\"Blockhead #839\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/839\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd9e984c19c9e9fd70000002d949fa61d629f53e0571a6aac44e0abc1ff3acf13\"},\n    {\"name\":\"Blockhead #859\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/859\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e0a4560465061ef000000269c086b15bffc6a5d18a55e53b09d686a01abc70a\"},\n    {\"name\":\"Blockhead #1736\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1736\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf8786d870d415ce100000034c13902e7b53c416d11f82c85cd12a935574da30a\"},\n    {\"name\":\"Blockhead #1873\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1873\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x68ef666a488c46f6000000901f2396872593a9ae65486008a391ecf7c8610a80\"},\n    {\"name\":\"Blockhead #195\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/195\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab89f87a78c9e78e00000072df272458b764d1663e43b6f1626240dad1fb489e\"},\n    {\"name\":\"Blockhead #1152\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1152\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb00406b0429b692f0000004f2a0b2760084535f4c1ea27918825c55c53027997\"},\n    {\"name\":\"Blockhead #1585\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1585\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9dff102bdae3d0400000068f840140556edcb347cf0cada09c775da2ba70365\"},\n    {\"name\":\"Blockhead #669\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/669\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcb680417aff200aa0000003c396f03eff809bd6f4a2c672bdb83df1fe023a037\"},\n    {\"name\":\"Blockhead #1113\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1113\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4a2ffac465c0ee3e0000008e3a364336e34fd42b05331e6166e098c54dac18cb\"},\n    {\"name\":\"Blockhead #980\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/980\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x968e6b9b5be7c8100000000eac129a5e5f950718e486c7df548d6b580721c653\"},\n    {\"name\":\"Blockhead #74\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/74\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb508690bd2e5969200000038c6ce00bd06c32c72641d02924ff26f1ee82c9d08\"},\n    {\"name\":\"Blockhead #902\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/902\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0c33a718f69082b0000009c535e00dabc0acc55b22e20eca2929d08051b3db8\"},\n    {\"name\":\"Blockhead #661\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/661\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74c8f438a6967a6e000000c41f1728bb7eb44b2c7828e086856370f789bddbb3\"},\n    {\"name\":\"Blockhead #574\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/574\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f96235d0a2ae0ca000000c9c0214d159bafeb612efd54c82beb5ec21151ad43\"},\n    {\"name\":\"Blockhead #1780\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1780\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2c4d0a52550ce45f0000005b1500abd7a2c9d7c52a9d12803ee08b1e37e27622\"},\n    {\"name\":\"Blockhead #1983\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1983\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeb87f3ffe21b214c0000001a6504a3aaea9b825e8f9a518085c4de264b80bcb3\"},\n    {\"name\":\"Blockhead #1524\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1524\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xecf745bddd12ab6c000000d60f3c14165f1b09a6b15afd87c593f9001230314f\"},\n    {\"name\":\"Blockhead #1627\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1627\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5708e809e3717f960000004f4851df02dd4f03d4eec99f9a6cc8351cdd5d64be\"},\n    {\"name\":\"Blockhead #1194\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1194\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5c661ba546b355d20000007f4c553562b471a4ce930db20b169a448bac13d701\"},\n    {\"name\":\"Blockhead #528\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/528\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59c36eb7b6fb761400000060ad03bc221f039654d54e3cc2ebed1fa6708eba9d\"},\n    {\"name\":\"Blockhead #603\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/603\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x583454a22eecbd9c000000a04a36066a2de4de34c8b554d1bed6afad8a9ff06b\"},\n    {\"name\":\"Blockhead #1537\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1537\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x610cbade57a34c3a000000791f279ca0cbf9f266fa41ce1a7d948c287a9b4d5b\"},\n    {\"name\":\"Blockhead #807\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/807\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5028efe90944f474000000110863580f51ef0a8e7c39e0377162e1e69d5c67d7\"},\n    {\"name\":\"Blockhead #1516\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1516\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5731b1862e8925ff000000f2035699a04280f24ad166d9bf46dcb9422f230f6e\"},\n    {\"name\":\"Blockhead #1532\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1532\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1cb0ae7ecabe6759000000512c21eb6a05aee47325f306a85c7c6c44b3091386\"},\n    {\"name\":\"Blockhead #403\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/403\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x83a8ade45eb802f1000000715e02861e733dde23e43144211e4f61359f33be3b\"},\n    {\"name\":\"Blockhead #314\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/314\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3d693697cdd326680000007d02cd58bf99ef9da50cab0aa178dacc0b563cda3b\"},\n    {\"name\":\"Blockhead #1248\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1248\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf75f54e187de952b00000098890a171350a900fa67fd821381eff176626bc37d\"},\n    {\"name\":\"Blockhead #897\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/897\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33bffed4be02eb7b000000544a4e9202e907346d864d25332bb04a71ddb29e0b\"},\n    {\"name\":\"Blockhead #1597\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1597\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5691962a9eedd53e000000395168c07403668e6a0ba3e7c7ff568c4492ecdcf1\"},\n    {\"name\":\"Blockhead #1906\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1906\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b0c80e06caf4267000000177e5baa401f979a7b6af3bf1ea4d2141cf99461b6\"},\n    {\"name\":\"Blockhead #979\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/979\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe3adbb94475a2b450000002e5d37f0c735d7268615242f968e60a962e4eed894\"},\n    {\"name\":\"Blockhead #1188\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1188\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8e866a35e251b66f0000004c60496a35e4a10bd4bdb894a3d7d5461f68f318f7\"},\n    {\"name\":\"Blockhead #1966\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1966\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xed0633bbedf004b000000030cd5ff0bdd331c155f663061fb28c7685d01d330a\"},\n    {\"name\":\"Blockhead #324\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/324\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc3c8d676ef883e7f00000064f14a0682fcf59d209b61d3a75db83154b5f76358\"},\n    {\"name\":\"Blockhead #1053\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1053\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcd61ae2b733493cc00000076264df838bbca94bf9ecdf07eaa3f3a64d739f9de\"},\n    {\"name\":\"Blockhead #468\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/468\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa4177356b2a11da90000001a33eef92e7fd2dafa85e146f94da3207341d50022\"},\n    {\"name\":\"Blockhead #1295\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1295\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x49103f1e16f040a20000002423d9833f83a5a2b3f38597ec748dfc84ea091d8a\"},\n    {\"name\":\"Blockhead #1923\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1923\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7d82a7582aaba003000000405ecb01c6a6c943b2d792544929e49fc5ee2c5c63\"},\n    {\"name\":\"Blockhead #646\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/646\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd0fe1b52eac5101a0000003542d7141def951d4309ada68355d10d74e53f6846\"},\n    {\"name\":\"Blockhead #2018\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2018\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2a666a44a09757490000001fb119136d019b46a4db463a57b64a5c927160a4ef\"},\n    {\"name\":\"Blockhead #1431\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1431\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x57bbb87cf0632985000000a5d816b70efe12d0c19effd69536aeaf79b3bd0e46\"},\n    {\"name\":\"Blockhead #1261\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1261\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8985915726d488aa0000001720ddb50f7af00a250821fcf4dcf75712c6e6fc60\"},\n    {\"name\":\"Blockhead #1755\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1755\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcbf5c15caeaf2360000000ea044592889f9c8a7cb20ca2a596b3a55fbd85541e\"},\n    {\"name\":\"Blockhead #873\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/873\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbdb531a9b81c1f99000000d09602a150539f2fe6bf4a019f70445d106b4cb81c\"},\n    {\"name\":\"Blockhead #311\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/311\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x256a1aa7ec0fd73f0000004f1a098e91a25e222681b28bc010c90a20400a5db2\"},\n    {\"name\":\"Blockhead #1841\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1841\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcbae5717c70096f5000000cb5d01f372b22801ffc8d169e4a1941b2589d3fa00\"},\n    {\"name\":\"Blockhead #1773\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1773\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeed553a0b01096050000004aea161c75fef69b5958ac656b2afca9f5bc421fb3\"},\n    {\"name\":\"Blockhead #610\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/610\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x84a36b45fb16be9e0000003603470be2c02cbf962641729c3e041dba9fe57fb2\"},\n    {\"name\":\"Blockhead #47\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/47\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08ab77a79ca8ef24000000e50f72fd2e9ec6f6a9e839075d58b708daf23c63a7\"},\n    {\"name\":\"Blockhead #738\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/738\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4477e768e6689493000000b10facd940a5c64340e17b01930c01fd1ff9a50630\"},\n    {\"name\":\"Blockhead #415\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/415\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xadf4c187f4b05d1100000014d54289375503b78057830096d8f5514eb100b1dd\"},\n    {\"name\":\"Blockhead #400\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/400\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x45d50f56ce0d63f70000007134159f51488c445fe7dd14f7f18f7b1a1fe7237f\"},\n    {\"name\":\"Blockhead #779\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/779\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f9dbfb415b78f6a0000006f048b42b70c8a71f10a3ae751712b11698bf2ca61\"},\n    {\"name\":\"Blockhead #1121\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1121\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9188d540dc9a7f740000003fd1661a2d164417bd3bd766b1b2fe9313e4d91e78\"},\n    {\"name\":\"Blockhead #1265\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1265\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11f9dfe23815fc8500000060d24a1140bcb752181ea0fd9941bf5e972b5d9022\"},\n    {\"name\":\"Blockhead #1750\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1750\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3fcc884ff74ade02000000ba20441659587442eb7cf765117c13ee64e7ec2db7\"},\n    {\"name\":\"Blockhead #1806\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1806\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3a749d9466b4ce03000000b52529ec733254247316591c86e3c8ea4bd7d6f356\"},\n    {\"name\":\"Blockhead #96\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/96\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe62395330297d7d3000000b72c2a36314f11a21138197487d938167cd4192b75\"},\n    {\"name\":\"Blockhead #1284\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1284\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x28447abe24631895000000c039353f3d543960d5b63fc3bfa72976b2a3212560\"},\n    {\"name\":\"Blockhead #1420\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1420\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71a2bdc03c104398000000231850d5597eb0caed8e789e43dd4149f61d3f2d4d\"},\n    {\"name\":\"Blockhead #520\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/520\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec50db4da739348400000025c7d81c38f215cc02b2648ceaf2afafc14d6fe4ac\"},\n    {\"name\":\"Blockhead #1124\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1124\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d5a939a9778a5820000002716340b6a3eebad0b975d566ed54fba2da69cb530\"},\n    {\"name\":\"Blockhead #1448\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1448\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c9150b180f99f6b000000a84c083bc8d2006bfb2d8292d77170da540f332b4c\"},\n    {\"name\":\"Blockhead #1208\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1208\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb972c6abb51f7905000000ce2130d215d8e9e73ea9328c6746ea4acda0b439c1\"},\n    {\"name\":\"Blockhead #1245\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1245\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeb830c5ff502db10000000678c1c3b9497db8da17505cb5bec4f90b5288169ec\"},\n    {\"name\":\"Blockhead #840\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/840\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x036a213294f4c7b8000000cb33ec1240f3890163655631fde44c3d09b6827c38\"},\n    {\"name\":\"Blockhead #957\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/957\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb81c8b05ca9e6ad10000009f317a1d2cc37e8c01e640b653a490648992069352\"},\n    {\"name\":\"Blockhead #2047\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2047\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb6d3355e3ff0691e000000974f0abdf17e668aeef946bbbd711ecb7690c89881\"},\n    {\"name\":\"Blockhead #124\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/124\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0c6a65bd4acb6f5d0000002d59e4e091b4d4bc93b589e992d869490489f5b6ef\"},\n    {\"name\":\"Blockhead #876\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/876\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba709d11749a2d8e00000058804a3337b00aec3f10fcd7af42adf6430ee86fdb\"},\n    {\"name\":\"Blockhead #1163\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1163\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fbd262d5c89877c0000008a11f504e61d5af898e373b4dc7bf278ca5cecef21\"},\n    {\"name\":\"Blockhead #272\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/272\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8eaa9d8a89c90de4000000e2da0f374a02e5e41981be8daf13f52c0a82e1797c\"},\n    {\"name\":\"Blockhead #832\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/832\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd978805a59e44465000000695a614251b7549c51cd69568df2a03ce7b8aac2f4\"},\n    {\"name\":\"Blockhead #815\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/815\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe749123de53964e400000024037d48f12168209d8e3937816351c1b0101a01be\"},\n    {\"name\":\"Blockhead #1422\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1422\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd3eee2faa8518c0a00000025e51e8c544040b508f77903698377eee5653de9e1\"},\n    {\"name\":\"Blockhead #841\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/841\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xded4c5670c69207600000058213d177763bc9fe12976a27589fd8a64f427c278\"},\n    {\"name\":\"Blockhead #1506\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1506\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a65b00ea1a9ea540000003f3ef9d33838fa2149c65a9dca4cc245279ee50850\"},\n    {\"name\":\"Blockhead #1677\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1677\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x83f4307700a72e9e000000134785dd771249dc2b34f523b209c86737bcde8d14\"},\n    {\"name\":\"Blockhead #518\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/518\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x418508d7aa46ee6200000068236f685531da9b75839bbeb4d42941b11811453d\"},\n    {\"name\":\"Blockhead #1041\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1041\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x457e5374db5b7f38000000cd333701e21735e561de2a15f4f10e160394358d00\"},\n    {\"name\":\"Blockhead #730\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/730\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfc749ec7b6f52542000000ddc63605c516b7793fb094827518e2d3a5a4ae3892\"},\n    {\"name\":\"Blockhead #1333\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1333\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2124834043196e5a000000d68d00627be095aa225daed65319afd6b3435673a2\"},\n    {\"name\":\"Blockhead #1556\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1556\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ab8b503a918c0ed00000069602664e2b25794ced72b0da729c3366269cd6fe8\"},\n    {\"name\":\"Blockhead #706\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/706\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3010ddf9289e423000000bf513c4e4ff9422244490ebcd1e5b16654b74964fa\"},\n    {\"name\":\"Blockhead #1867\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1867\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf5eebda4373a06e900000063c959cd62d5d124344a4753db9e93ceea58a3f16a\"},\n    {\"name\":\"Blockhead #1598\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1598\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x406e300bd8a423ca000000c5a846213677da9c1d1319aa9ff40569e7e42db335\"},\n    {\"name\":\"Blockhead #1132\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1132\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf9a138d5a45132830000008f5c0e0e62bc509988b348e9a6f68dbff23c07eebe\"},\n    {\"name\":\"Blockhead #585\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/585\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3d7d99db44b03e8e00000017ad699a346afa24982ac0e4ed44571f8f0f2da85f\"},\n    {\"name\":\"Blockhead #1230\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1230\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7494ee452fbd14590000006b4fbf215427a94a6d636e8191acf0c611f639f8e2\"},\n    {\"name\":\"Blockhead #48\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/48\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62dfe67fe92263ab000000a540143c7347eb13274f19c9073f342657b101cdf7\"},\n    {\"name\":\"Blockhead #733\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/733\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9bdc2b48520d3c65000000bc24179900bfbac86105ca0311e776eb0692ab5762\"},\n    {\"name\":\"Blockhead #1371\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1371\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x37414641e209c88f00000038024097ac7a14ba35271fa236a2a80b4b1b93f891\"},\n    {\"name\":\"Blockhead #1715\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1715\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x462445145c21c205000000254cbef408a3fa2ed078a330f20580252d109a7ac1\"},\n    {\"name\":\"Blockhead #91\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/91\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf56d259bbf90cbf9000000763e58962e1fec0c65f71a78e26ddb9f98cd5bfddd\"},\n    {\"name\":\"Blockhead #1527\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1527\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x785265fd80960b200000005b445bd571cdd02ec0e2816ec4fcbbf23807676271\"},\n    {\"name\":\"Blockhead #215\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/215\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7e257458985756a000000790238aef438be70b7e343b565766eb6ea1d5f5f73\"},\n    {\"name\":\"Blockhead #1169\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1169\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeb0338b13afa9879000000445603e2bafb3708a84cc636a65089508ede9fa8dd\"},\n    {\"name\":\"Blockhead #978\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/978\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x201dd960163a2cd7000000e9454f6f4e8012692ef6f1fd239177bc0ec4987bd9\"},\n    {\"name\":\"Blockhead #2005\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2005\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x382f2f4e2863f92b000000be462db9024428bcd3cf2743750e67604ff6371a1f\"},\n    {\"name\":\"Blockhead #473\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/473\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x75f43b473b7151ac0000003365c11e2e3ca312ab73d81680480e36e0559f4702\"},\n    {\"name\":\"Blockhead #1781\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1781\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x853aaa1106120ce2000000751c61f21288a9e54c1ec8cd813e220ef1d6cc25d6\"},\n    {\"name\":\"Blockhead #1751\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1751\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0840c2e126a2a558000000dc057008d904f18c7d54f02412c513011f81d4e42a\"},\n    {\"name\":\"Blockhead #822\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/822\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1774e6f6c6173cb0000000dd73194258c1ee1d7b4c3e29ff577e9f07af2eb8b7\"},\n    {\"name\":\"Blockhead #712\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/712\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd825a79e297e445e000000d743be167f4a7b5c459aee16b44434e8de3c18ec9e\"},\n    {\"name\":\"Blockhead #1804\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1804\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4172286f8c1501a70000003d1a253999b9aecf553e5a5bfcf483a340c7f9f94e\"},\n    {\"name\":\"Blockhead #1799\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1799\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa91a242921904379000000157914956d1eaf40298e4fb170959e0a908ca379a2\"},\n    {\"name\":\"Blockhead #1164\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1164\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0b180910647b2651000000971e1cd78c26f211f898b6f56baff5d092fe5acefb\"},\n    {\"name\":\"Blockhead #666\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/666\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc3b55be98d4fc2b90000004f6d3900ff7d2e1c111f637559e7c8c56395022f52\"},\n    {\"name\":\"Blockhead #700\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/700\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25cdf89cc35ad03300000015a13b6d30f22f3683b5dcc36f36f3dd6265d174bb\"},\n    {\"name\":\"Blockhead #983\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/983\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x75a447f14d5e8d9d00000029b0489940c2f5cbe252d3660ae1b1290aae7150a3\"},\n    {\"name\":\"Blockhead #1845\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1845\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ebe3fca00b5e687000000183d29b4868055129f9c4171631a024a9b9bf3fd8f\"},\n    {\"name\":\"Blockhead #1735\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1735\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa9efbf14883a67ac000000f94f50d4566372bb271c778b80b0224c3743499b01\"},\n    {\"name\":\"Blockhead #850\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/850\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0229a9f1205afbcb0000008d20bc2f494a66d8a6a2664ac82d426854d1e524e6\"},\n    {\"name\":\"Blockhead #1161\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1161\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11b7601acb56770e0000006ab9600c33d716824c5381e5293fb97f77212027b9\"},\n    {\"name\":\"Blockhead #600\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/600\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f8f3ddc27e56b0a00000022f7ca103092204136b522332b8677503fd809ad09\"},\n    {\"name\":\"Blockhead #1838\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1838\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa4dd4f89dddd63ce00000014ceca233bf4db2bbc215062c3dddc39aaf194e545\"},\n    {\"name\":\"Blockhead #155\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/155\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1d56f7be707663f400000062dd62196603b5ea69d26d74e6a583a8598e450f8e\"},\n    {\"name\":\"Blockhead #1319\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1319\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3626443296135094000000bebd5d00d8dab4f2d9347222748dc00778c826cdc3\"},\n    {\"name\":\"Blockhead #921\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/921\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e7efb0c3cf81534000000824fcf15806b5940c3c5d017f99b2c83b6fd150852\"},\n    {\"name\":\"Blockhead #1670\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1670\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe7b1588f1a752dfb000000d0fbbc03bc29814ec8edf8391867c42f7a1a3f3f1a\"},\n    {\"name\":\"Blockhead #1606\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1606\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa510e6606a42a8d10000009303946190311c17962a8ad7f2f35f442508b9bae6\"},\n    {\"name\":\"Blockhead #112\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/112\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Gas mask\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc6ca5744ee876dbb00000001ac8e5de3c30b55e40bd59ae66390d990f916d7d4\"},\n    {\"name\":\"Blockhead #265\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/265\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3a110728e01b69f2000000932d0b2421c9fd3265d2c8ac334693c42a320cd3ad\"},\n    {\"name\":\"Blockhead #1848\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1848\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf17adec628e9bfd00000016330b9d63f7f608d606a90976beaedc01192fdc17\"},\n    {\"name\":\"Blockhead #1575\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1575\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc803bc569a5dc98b0000006853fbb857cfae378e8e999366ea76603dd44d4fe2\"},\n    {\"name\":\"Blockhead #1789\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1789\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6445d7a11303fac9000000410bcc92462824ede7512bee5a5ea2582229ac4147\"},\n    {\"name\":\"Blockhead #1294\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1294\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x506df33a88bc932e0000001b212af755ed006265f53d078ef644ca39be2a35e1\"},\n    {\"name\":\"Blockhead #652\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/652\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7ce0af5498a81dcf000000c000652df47715a83d406b834c59b2ef78d9742099\"},\n    {\"name\":\"Blockhead #302\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/302\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x096878fb9116717a0000004c2cb82a2dbbc85f923100a25db6cc7fba025d305b\"},\n    {\"name\":\"Blockhead #1286\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1286\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08c58214cab67e6a000000402ac5923cab716f6fa7bf92e46c2dc7bbda7123d0\"},\n    {\"name\":\"Blockhead #914\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/914\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd8cb878cc754f0a60000000e7ad22a37398d5969c7b90e4f07c2534b62bbf23f\"},\n    {\"name\":\"Blockhead #622\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/622\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0172ad305c7c4318000000cb465d31732e6b59bb325a5a998b7ff02e75bf09f0\"},\n    {\"name\":\"Blockhead #1686\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1686\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd001313982c318c200000067b60849c92ed3e006a0a7f300387349506d08aa7b\"},\n    {\"name\":\"Blockhead #381\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/381\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xda374523e3bbf08b000000b7bd02531b704fa3c95551e0d1362b63ed2627cd16\"},\n    {\"name\":\"Blockhead #2021\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2021\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x57a1765fe7a99b67000000a8038819ea106cd1c24c909e9ac203b4280cf239b7\"},\n    {\"name\":\"Blockhead #33\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/33\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ea0f195ba6d352e000000e605ce71ba0c79435f56840d6e62e123faf343cac6\"},\n    {\"name\":\"Blockhead #1969\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1969\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1116de34890a0baf0000001e19b1165067d8436a7f15d0ad38a41d1346f32f6c\"},\n    {\"name\":\"Blockhead #1865\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1865\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf4393c0a06358dfa00000067b30941f20dc32f0c040a5517af4b9cc888ba4bae\"},\n    {\"name\":\"Blockhead #1252\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1252\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd1b70adea756536d000000278e1de706500d031db1ba611735faeaca4928d3b4\"},\n    {\"name\":\"Blockhead #464\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/464\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3bea5073017918060000006ef6422130ed8c973227fb3bbfa8bbcc554d9b1f6f\"},\n    {\"name\":\"Blockhead #627\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/627\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x606c3ccc52f549ad000000d69630173c83839e15cc724b96bb133ae5b3b3dce3\"},\n    {\"name\":\"Blockhead #1696\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1696\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd1b07ed6c73dbffb0000001344329ca981961177272d4601ab4ac4ac4be5ea57\"},\n    {\"name\":\"Blockhead #461\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/461\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8ca81aa078291a0c000000b93618f41c92cee8fc0c7f3ce821fb61e0b5141760\"},\n    {\"name\":\"Blockhead #405\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/405\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x65af7c084048a52c000000e1de96018741dbf55aecf5695fdba14d414b63f5bf\"},\n    {\"name\":\"Blockhead #443\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/443\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa344e6fe0d43c9ad000000119e5b2e42acd35f14c4187569f142e2cadbf5372c\"},\n    {\"name\":\"Blockhead #1982\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1982\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc2b29e972241734f0000001cee5dea32d74225739c2f8cbeb34bad36ecf816c3\"},\n    {\"name\":\"Blockhead #611\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/611\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xadd1d428fe37233400000031273994e42793f5e7ca2769637ce46a8a683e6ac8\"},\n    {\"name\":\"Blockhead #160\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/160\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x58ce2cefc09ece660000002ebf47d9cd8e716588dc26877552ed6f21be56b217\"},\n    {\"name\":\"Blockhead #1131\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1131\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08e7858271a178d30000004ecc3e2e347c8de09de8e3a8135d0f029029295ddf\"},\n    {\"name\":\"Blockhead #278\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/278\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1147dcff8105fea0000006518dc63a1f7c79883a009af436fecf4f391dd4d32\"},\n    {\"name\":\"Blockhead #1861\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1861\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd117aa1458a6a32b000000df660515a47c2ec3cdf2c7ce3a47dd442472c49853\"},\n    {\"name\":\"Blockhead #73\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/73\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf30b1145313c5902000000c648ebc162be1bc87a771ba076ce7b3dcc0fd236d6\"},\n    {\"name\":\"Blockhead #1758\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1758\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x77de3cc167f4502700000098c4021da6424fc9b1ed39cfbb835960ed92b979c9\"},\n    {\"name\":\"Blockhead #678\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/678\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x076c14d73c55efef0000007b763cf033eeda6ed85e7a9263b31423d57d0616a6\"},\n    {\"name\":\"Blockhead #1237\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1237\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7486de2ffedd19c2000000bc22091468e3b156f83c5ad1b89ceb0843d1675220\"},\n    {\"name\":\"Blockhead #1543\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1543\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa6193b55ce3d2fb2000000147a00a6d99fd5073ef2b99e4899322c77a2a3e710\"},\n    {\"name\":\"Blockhead #1202\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1202\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf9930dead393967f0000003c1918ccad9c7b2855ea4c82de0bfd094c5ff3e446\"},\n    {\"name\":\"Blockhead #1159\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1159\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b84ad562cdac82200000054dee00d378105f7ff1a0fa781e1d0e6d8823ac17b\"},\n    {\"name\":\"Blockhead #243\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/243\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x51885cbdb6b624f0000000640961d9d8e40fbb7dcaa90e68e5e28c2748da5aa9\"},\n    {\"name\":\"Blockhead #1219\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1219\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb7824a0d9c3026a9000000695c698f21b093595c8bb1b67a6fb6b1fe02a74eda\"},\n    {\"name\":\"Blockhead #2011\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2011\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf86e5bbcd1f86c9900000029e022d52091ad5cd034879b6e33c444c6b9a6c46e\"},\n    {\"name\":\"Blockhead #1417\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1417\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15287b6aa91747dc0000006360fe1866caa04b071a94fc25175d84f0e0be700a\"},\n    {\"name\":\"Blockhead #1095\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1095\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf940908e7dd542600000007f57df05f2c240912aba16e0aa72f87dd958287313\"},\n    {\"name\":\"Blockhead #857\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/857\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08a5bc50af5fee7f00000052ea1efa4bc86dd7e7129096b24fcf8ae79cdc8c16\"},\n    {\"name\":\"Blockhead #2010\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2010\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd41c1cf98bfd41220000007a921c2074a6a5d08b110bbcb6fef633eb94c54cd0\"},\n    {\"name\":\"Blockhead #116\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/116\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11e1de1370d39e330000004d446a2f0694f4152f3dfa6e5062f56c8e6f075cae\"},\n    {\"name\":\"Blockhead #1618\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1618\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6828c61e91ad0ff700000061478e607c676893d2f9163b502b9bb324995ba2ab\"},\n    {\"name\":\"Blockhead #273\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/273\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0639006df2339166000000f64ecd355aaaa86d7b5efe7cea5c24d13295c2531a\"},\n    {\"name\":\"Blockhead #1786\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1786\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x058b6ccbe1267135000000e7271292677928bf2926bddcdd0ab0b36140dd7585\"},\n    {\"name\":\"Blockhead #534\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/534\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa2a85e6c70bb40d80000002bfb0bdc5f2f0091a75a9a6d191b9a6312b4e1c770\"},\n    {\"name\":\"Blockhead #1515\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1515\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x635ace0e35a4a34b0000002a89d803ee45f6661acd6fe5c25a3596361c590c80\"},\n    {\"name\":\"Blockhead #1852\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1852\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1299fec4c0f57b2a000000b4761fec4b4cbdf358f3a31856b65870de8dd63ab9\"},\n    {\"name\":\"Blockhead #21\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/21\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ac6382bd114d545000000a000ef309e0a98580ecc3ca9dd42bcb9a099844430\"},\n    {\"name\":\"Blockhead #917\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/917\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f6294f387592030000000c1b94d0d3bdd6d0bc6f12f276d274c0371811403eb\"},\n    {\"name\":\"Blockhead #1172\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1172\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe69b1a43a12babc000000768c5b1d2c721bf0a58b73363737d98329de732c4d\"},\n    {\"name\":\"Blockhead #1864\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1864\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5457870491e6f4f60000002d2fbcc593935934fc9163aae04b6a571a4a6d413a\"},\n    {\"name\":\"Blockhead #1382\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1382\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e998e45fd8559f5000000682d821dba241480cb901d104388f7a87e62ddebb0\"},\n    {\"name\":\"Blockhead #1056\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1056\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc9123cf9d3e0a68600000060ed0421f5605b93efe81769eddf7b845fc547685d\"},\n    {\"name\":\"Blockhead #1106\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1106\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x898399b7a3c514bb00000047d656893704e9fe1feee7fddd0965344c980402c0\"},\n    {\"name\":\"Blockhead #228\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/228\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x149bae6c9f4b8ea000000072ce20495ce83ab61e9b680eb8b18e1cb7cac44252\"},\n    {\"name\":\"Blockhead #1720\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1720\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe6d7bdda0d5ed2de0000002e933c91ebb9647559d4d15d4af5593558c1f98661\"},\n    {\"name\":\"Blockhead #329\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/329\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x21fa649e2a3c64b900000067e03e3b01af2abd8d6b8aff6434702fd8325fcdee\"},\n    {\"name\":\"Blockhead #970\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/970\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3cb50c6cbf2bf1b4000000ee0f400e58f11749692ff7bff69daf22c7c2247808\"},\n    {\"name\":\"Blockhead #1217\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1217\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7ffc222472e367fe0000002d695b75b212d2ed526c59de182cb7e8d379b425b2\"},\n    {\"name\":\"Blockhead #1110\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1110\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd649d5df779a2a1c000000604be8b3753df096945c2447b13d6d5559641b33f3\"},\n    {\"name\":\"Blockhead #1797\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1797\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe023e9df59940c3a0000004d4ca4ab0a45e56602532dd2ce99b85014500c742f\"},\n    {\"name\":\"Blockhead #105\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/105\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x656144ee0cfecc74000000ab73504d35d255fbf3b6cc2e4797546b06c4d61662\"},\n    {\"name\":\"Blockhead #681\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/681\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa3a7bdfdcc916d8a0000000f69deac2d1a438cd974f5aac2b8402f9a6f85c347\"},\n    {\"name\":\"Blockhead #739\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/739\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9171e0a8f1ac4e350000002b5eefd43fd83551640cf1bca61a0596bc2a93564c\"},\n    {\"name\":\"Blockhead #1520\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1520\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf77a0b4e04ae52570000005a3c094918c0133248c9aa1251af080a011eaec3a2\"},\n    {\"name\":\"Blockhead #1975\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1975\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x85f0be08940e5dd6000000be0334f793aa0624431175ecd681bd8c389b58dbe3\"},\n    {\"name\":\"Blockhead #549\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/549\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x644f9f00e3975b1500000031d5e4a2bd4a37f7f5e9630b72d61356881277d89c\"},\n    {\"name\":\"Blockhead #1765\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1765\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x00452fbadeff6d18000000ee1f4a14532d831d2b63dc788e423f3e90000f3ae1\"},\n    {\"name\":\"Blockhead #1244\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1244\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e30824158cac918000000e72d894c34cd90cc9fbc6fb36649cecd18bde06da6\"},\n    {\"name\":\"Blockhead #1595\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1595\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc193f6f8fb05a4790000000c60119104f25d9b76e613af09bf33cd1edac96726\"},\n    {\"name\":\"Blockhead #1505\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1505\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbef83ff96f31f7d5000000d3cb4201ee629d101fc945c77aab3bab06513a09b8\"},\n    {\"name\":\"Blockhead #1698\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1698\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31983d16493b45d20000008f1434ed14ac5696a33339976ed5e669616a99cd70\"},\n    {\"name\":\"Blockhead #1062\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1062\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf296028f2d29d30000000990489149727b74293e755175cd6aa3c3375179b4b\"},\n    {\"name\":\"Blockhead #803\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/803\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x87fbd21863adcc9800000074d60d0f626e65bcd1fc2ff9ce59e6fdc9dd9b000a\"},\n    {\"name\":\"Blockhead #1380\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1380\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd3ba45eb3614d3d20000003db0233c00fd2109673da768b5f34ed45c71186deb\"},\n    {\"name\":\"Blockhead #1416\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1416\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4639756babb6ad3e0000009d09fd0c15784cd295239a527a05e10d77a6d45e86\"},\n    {\"name\":\"Blockhead #1212\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1212\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcbf2dbcb76a22d01000000397e18537282e9a9854b50a65a2eb09c4b0c41cb4c\"},\n    {\"name\":\"Blockhead #1539\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1539\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf994cdf7ec0dd10f0000007d494d19aa83fdbd25d1cb8942d0b0f8ff9e82c04b\"},\n    {\"name\":\"Blockhead #1258\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1258\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb4346867285016b20000004ee638b83ce9f7f128b192f9c0c3265c09be055c41\"},\n    {\"name\":\"Blockhead #1522\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1522\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8f5692f42f6d576a00000048fe34582c76f905bb7d4695ecdaf54dc139271323\"},\n    {\"name\":\"Blockhead #1835\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1835\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ef0f65927bb48e7000000bd53126a4c2149df4741a15a687376f463325188a5\"},\n    {\"name\":\"Blockhead #1902\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1902\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x081521838246791e000000c3052eacecc95fb82b8143fe949923c8b3f82e4fc1\"},\n    {\"name\":\"Blockhead #1043\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1043\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2720c32c281b14120000009781298006479aef5fe8b28308014134fdbe0819df\"},\n    {\"name\":\"Blockhead #123\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/123\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb56e605eb6d65f7f00000095dc113214118bbf872621f73b16a1492f48bd381a\"},\n    {\"name\":\"Blockhead #1510\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1510\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9d0d654f7b538b0d000000687f41aac29983908dbea34c8cb39b0dbfff78e1fd\"},\n    {\"name\":\"Blockhead #1674\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1674\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3ccbd7f45036660d00000077382a1c1723d34620ae49e913022d3422cbf7c7a9\"},\n    {\"name\":\"Blockhead #69\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/69\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x67a4062db8af368500000084702c7f42400b30cdceeaf3ed2bacbf5ca64210e3\"},\n    {\"name\":\"Blockhead #1036\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1036\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x454c20d758aa0d0a000000a55f3037315a0f058e79b11a71971a181d562f97a3\"},\n    {\"name\":\"Blockhead #1630\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1630\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99b3b396b5370a4c0000003aa5d70d31c0f594d6e2312bff86f7549f53adbc76\"},\n    {\"name\":\"Blockhead #445\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/445\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd7d0922197df4170000000661f7965d06ee1ae681eb20ed7b1e5b0d708a49cea\"},\n    {\"name\":\"Blockhead #734\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/734\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x55fb4d48f4e4e4ed000000ab01c407b3c1692bd6af43e0ccc4018099c1527daa\"},\n    {\"name\":\"Blockhead #1273\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1273\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x48bf7e3d6c402753000000fba91296594229dc2069e39de6e61c5167b2311de4\"},\n    {\"name\":\"Blockhead #138\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/138\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5463a11d4ca1f91b000000ed72901a40b6c83450278a3ad35133343787fa9f47\"},\n    {\"name\":\"Blockhead #866\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/866\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x93f75b633cfe7b24000000f26bd8172e9424dded4ad30cf8e32511981fb238bb\"},\n    {\"name\":\"Blockhead #1708\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1708\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66ec4cee5eedda8800000059cd0e150148c20ccef5b8d31345675083dede8aad\"},\n    {\"name\":\"Blockhead #344\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/344\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7e2edefd39aa4b17000000e014621157d22cb98791d31dcef56aa3bd6a0e15cc\"},\n    {\"name\":\"Blockhead #1502\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1502\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x70892cd9da2485e9000000bd280ea34cca3b63457f04546b654fba1bed4d9ecc\"},\n    {\"name\":\"Blockhead #670\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/670\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x762e517a47e948e6000000ffec140621bbbd585f178a867c44e9478fe6819e43\"},\n    {\"name\":\"Blockhead #326\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/326\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8febbed682f11200000000e975110c03d7c4eaef38a610a62b185472d1a9c89a\"},\n    {\"name\":\"Blockhead #913\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/913\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd398f52fd5fc0b88000000503827ac9e8eac2c3df3053308d1ed3f9eb0101ee8\"},\n    {\"name\":\"Blockhead #772\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/772\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0bbcd5123873219300000037586cb436da2c1ae1859755a16f14e6bb8ccf976a\"},\n    {\"name\":\"Blockhead #418\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/418\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc29eb6194db6ae20000000f9015b3e93f51712c41bcab403c62312e6aa72733b\"},\n    {\"name\":\"Blockhead #640\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/640\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b68282d5525c78900000065e516f1dd1684ec4c71409fe2f9aa59230ffe996f\"},\n    {\"name\":\"Blockhead #578\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/578\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x90a3241d7ab273d80000002b7854e1461f67af20f46b88ccd6dcaf95adb2df49\"},\n    {\"name\":\"Blockhead #729\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/729\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a8d65ca99071f2c000000825160c165d7a3bf756d3a91cfd497cc125ae8a5d6\"},\n    {\"name\":\"Blockhead #851\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/851\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ba9188b07e6cb6400000021379a7649ad53a4e43c1a723c83fd9e6a3dc0cc08\"},\n    {\"name\":\"Blockhead #416\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/416\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x57e0a5f24325697900000027792893905bbb573c9ee6a387c4499be7963a0ad3\"},\n    {\"name\":\"Blockhead #959\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/959\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f1db95e620c979c000000ff0282cc8cf2186fbbef516c511a6f5bc2a8470717\"},\n    {\"name\":\"Blockhead #1662\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1662\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd73b23ce2d9b390b0000005643383aa74f9c828b523502aefbe7a5eda4b36495\"},\n    {\"name\":\"Blockhead #389\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/389\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0118c31c6734bbfc0000003ffb512c315daa8c22f39b49fd59dbe24e157ccf56\"},\n    {\"name\":\"Blockhead #54\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/54\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfe774686ce66d962000000745a146074e051774f7521467a65cf13efec78dab4\"},\n    {\"name\":\"Blockhead #1415\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1415\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7a36e843604ef21000000cf6a128d038a0ed6913e5b98c7f8054095d061ac15\"},\n    {\"name\":\"Blockhead #176\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/176\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf04123f19bbb2c1900000067d98b8f5fd19c904d3bfb05367d700c16e674d029\"},\n    {\"name\":\"Blockhead #1782\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1782\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ead8db5fd717e600000004b1709b8e8ba16dfc55d77509dfb83b5c810683be7\"},\n    {\"name\":\"Blockhead #1645\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1645\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1a4f325338fa16030000004e4c83ea228804341df3002f9ca37decb12dac5305\"},\n    {\"name\":\"Blockhead #154\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/154\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x997ec3654f2bd55b000000930051d7d330dbef6b94188888249b854562afe106\"},\n    {\"name\":\"Blockhead #1497\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1497\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab7775fe06694dd4000000f43e4b07125705a4e2be9ee4688ce6831cf37d51c5\"},\n    {\"name\":\"Blockhead #332\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/332\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeda89ef35aac75a000000013cd75b837f39954f90443cc9f5777263c264060a1\"},\n    {\"name\":\"Blockhead #722\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/722\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3a78dba19adf8f66000000c15669db4141df23bfba9920bb1bf3b87d5c35d86a\"},\n    {\"name\":\"Blockhead #1613\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1613\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x551f526e3dd0f8840000009a71633732ecd343b0f6513ebac8ae43c8a4c36ef1\"},\n    {\"name\":\"Blockhead #2059\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2059\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9528c5becc55287000000acb301228c0abe1df7a9ee445781c8fa08fef198a5\"},\n    {\"name\":\"Blockhead #1328\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1328\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8818efb9b8e4bd6000000be3004b2eb0beeded17f9f32579802315128f43fee\"},\n    {\"name\":\"Blockhead #79\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/79\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x672a11bc3e370343000000bd22766c2dbf228a64f2f028eee6de6e2cea6235fb\"},\n    {\"name\":\"Blockhead #1031\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1031\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x213d9b729774e39b0000009b27a8f2403a6b58b66bf17326d3f89932ad52e62f\"},\n    {\"name\":\"Blockhead #1854\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1854\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xed51c0a077c46d5b00000086d11b256b0fab0cf3471954c0ea568357d6d4eea2\"},\n    {\"name\":\"Blockhead #737\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/737\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaa71d6fabf4adc7c0000005b427cfb68faff70f3c51989b8eb1804ecc3d5945b\"},\n    {\"name\":\"Blockhead #1988\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1988\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3a665fd9d76f19670000004bb15920468567dee7f5900b07342fc923afde76e0\"},\n    {\"name\":\"Blockhead #1725\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1725\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf635b4d9ca432b4000000499f8b0594cd16bb9a4a847f1c4a221994e97fdb2e\"},\n    {\"name\":\"Blockhead #721\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/721\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2f8c353efa36b297000000195140938b6372d85b9c2c01d423fa90793a8ea51e\"},\n    {\"name\":\"Blockhead #1081\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1081\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xde584ed7605f798a0000008005a197a4d188bcb8576b194194801698d7b14186\"},\n    {\"name\":\"Blockhead #1115\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1115\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb5c06ac20dd3c6bc0000009243a4554cd7f945da29a08f42f367d2ae0f98ca60\"},\n    {\"name\":\"Blockhead #1586\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1586\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x381bd8886f0f99dd000000416f0e3053e8fe53f3f435d3837a4303243e1f6a96\"},\n    {\"name\":\"Blockhead #1189\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1189\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3e82e906b0effa8b000000f34f65239fd4059269d1a9f0ff56a8706f415960b7\"},\n    {\"name\":\"Blockhead #361\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/361\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e01e6e657190dea0000007816f099167a5a64df50094344db79fbee28dbefb3\"},\n    {\"name\":\"Blockhead #555\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/555\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd69895d5ac2b6efc000000a22643f9443652783746af0e351ae01ed6f4a9c5ad\"},\n    {\"name\":\"Blockhead #1224\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1224\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb60dbea2776055a600000082380b8208326e9d09b6c7d7769175bf182943d135\"},\n    {\"name\":\"Blockhead #1876\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1876\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a33ca399c2baf9c000000401c4c2f4bcf86b1b71079c8b0cac8e4d0a5e60bd9\"},\n    {\"name\":\"Blockhead #1584\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1584\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x202465ca627c5f170000004b2b1b419f1312a850c254f61d190596f54028f65f\"},\n    {\"name\":\"Blockhead #1462\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1462\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x751517f08206c51a000000776f29791d7c88d87ad8785d344878a872ed92a423\"},\n    {\"name\":\"Blockhead #1360\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1360\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x454bb251eb233ecb0000000f2a0288fda383b5deaef87aa5ea53466f0a3e729a\"},\n    {\"name\":\"Blockhead #1771\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1771\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x28a92dab20d4a0680000002198361511ba65b05d4f12df6e8483bd9de91104ee\"},\n    {\"name\":\"Blockhead #1114\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1114\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36260cc12d53acbe000000f13ea20e4aeb3f6a32af3e97daa3d1b367e9164db1\"},\n    {\"name\":\"Blockhead #203\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/203\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x01aca7e2da2b657d000000697a836c0bd26fa27470224da4f3203fd4652d155e\"},\n    {\"name\":\"Blockhead #413\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/413\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcaf689cd65010c990000005d05939a99d296a1fb0e95914a852b72a49e2df48d\"},\n    {\"name\":\"Blockhead #1355\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1355\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe9359751927f74e200000026096e195018cfd6f901304dc056bd849bce16d655\"},\n    {\"name\":\"Blockhead #163\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/163\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x85ab948f2f4cd52e00000070d53bba39c18023e0fbaff33a81b71a6d88fa4f51\"},\n    {\"name\":\"Blockhead #1650\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1650\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd985e13a3705a0be00000053496045a6c2cf727caec8abc143302dec2b6534ee\"},\n    {\"name\":\"Blockhead #1859\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1859\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d02bd3b23b3ff300000005951a7506f936c27164f5a8e4317c69268cc051648\"},\n    {\"name\":\"Blockhead #1521\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1521\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd190af64563696df000000c9b9cc02c9e2e07f05b6f4ef62442610270be008ed\"},\n    {\"name\":\"Blockhead #1006\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1006\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbdf4d4ce35f28b38000000fe791090613d3196a2faec81275d0199a4e6f2c4a1\"},\n    {\"name\":\"Blockhead #447\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/447\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa65ab89bd2c24717000000c34fecfb4ee2c5769b57dde385aa51396b846b4899\"},\n    {\"name\":\"Blockhead #2006\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2006\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3d3f16a93985362400000067c1361785d7caf67e784de4d85ef2a1bf706f3f63\"},\n    {\"name\":\"Blockhead #1324\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1324\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x40acb515c0989833000000108e09c355e529faf8cc490b21dae938e63574018f\"},\n    {\"name\":\"Blockhead #2023\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2023\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8439bb9fc675a11a000000fa1b614f5749e4648427a3795fd46bbea87c708921\"},\n    {\"name\":\"Blockhead #9\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/9\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7016a6e7ab5b6935000000dd94a51034590ad14cc001a9accb584c3626ebf930\"},\n    {\"name\":\"Blockhead #1372\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1372\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x00296d877d81665900000095e12408c2a41136eb9f95472338b4fc76ea6e7a19\"},\n    {\"name\":\"Blockhead #67\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/67\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b26292d1ba4a558000000d1b8f103dc2b23148e0ea928e2e0963c801f512a68\"},\n    {\"name\":\"Blockhead #1017\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1017\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa0147342a7a774f5000000ef1304dbfd945a198d1580c49f0bcf1163c9472495\"},\n    {\"name\":\"Blockhead #1326\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1326\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e55ceff253e9b250000009f7d0e20195ef0331ad2626161ae3700c61040dfc2\"},\n    {\"name\":\"Blockhead #1960\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1960\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7f0dc6ec7870a05c0000001d4bae0ea4597139b16847e7acacacac99309ddf76\"},\n    {\"name\":\"Blockhead #1213\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1213\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ec219ec652204ec0000008f02e756c7b056f8778d269280636b751f2f888d95\"},\n    {\"name\":\"Blockhead #934\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/934\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd52624759bb58040000000546d90d030d57ebbcff06471557b503595f6f29a63\"},\n    {\"name\":\"Blockhead #1020\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1020\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x990eafc8288637660000006079f3e23d5d73bbfaa92de124721fd3f166cc94df\"},\n    {\"name\":\"Blockhead #530\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/530\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0ae721c9a8ed65a1000000344459d586cf51c4871ff9d8f76cc9e538ff16fe00\"},\n    {\"name\":\"Blockhead #883\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/883\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa445e29dfdd8db68000000bf02fb5bf259017b72e9c881b7407f2b1c8c5bd0b4\"},\n    {\"name\":\"Blockhead #175\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/175\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52f65fa627db26ca000000b88c22b452bd8510720a8459b47395dfab17689839\"},\n    {\"name\":\"Blockhead #1491\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1491\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e3c461a97cda5a3000000a043816f7c3eae46d1854e9ad4070911a49c1f2fbf\"},\n    {\"name\":\"Blockhead #1649\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1649\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb6b2e1446fb65e7000000b742b53e049e1fd3df00458159f832f78152d5c33c\"},\n    {\"name\":\"Blockhead #1269\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1269\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24f175cd332a6e3e000000527f0ec5037f3db97ee48daa70b3400126db26518e\"},\n    {\"name\":\"Blockhead #1222\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1222\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x530e802086e4a4a30000009c7825f86a694938f54a968aa57ef6838dcf58fe2b\"},\n    {\"name\":\"Blockhead #1352\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1352\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4045a4d9d0ed784f000000f53367ff45b8b1eec2716703795fcf9f63edb9bb47\"},\n    {\"name\":\"Blockhead #792\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/792\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2cd8a44e6a02e03e000000de79272387758ab5ff6eaf6d017538b229beee97c8\"},\n    {\"name\":\"Blockhead #688\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/688\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e36c088bb08b58b0000006619a0adf0f710f022a1397880d9e0fa6023662825\"},\n    {\"name\":\"Blockhead #933\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/933\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2f749cb3699046170000003d5395254a06209ce796f559d189c8e2aea1610a1d\"},\n    {\"name\":\"Blockhead #1721\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1721\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x332936daf387c6540000002cb85a5fd6bdf567e0e5cdc0dba5d210cbdecd37b1\"},\n    {\"name\":\"Blockhead #320\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/320\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1a4a483f2c66b7ba00000010086d13731562e217976d1011c9006ca5b8695fbb\"},\n    {\"name\":\"Blockhead #1979\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1979\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x79188d0384a7897b000000210fc80809b4c8145507ba25fa9fb36a7ebe8c7f84\"},\n    {\"name\":\"Blockhead #285\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/285\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9af3e42329c765780000009c885f813382c171cfa6e6828c495e721a36d42d61\"},\n    {\"name\":\"Blockhead #104\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/104\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33f819797d3a787000000018a7f1e742a4fc66ee6d1d890588dd696b9f875bef\"},\n    {\"name\":\"Blockhead #298\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/298\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d2490cb3a5470ab0000000decfb9b2e2c8f3e8b16b9f44f9475a3a4ec39e4da\"},\n    {\"name\":\"Blockhead #92\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/92\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa11712ea59c0c57a00000067f25a9d6602fddf72bffc4742587d118c27d0ca6e\"},\n    {\"name\":\"Blockhead #952\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/952\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0906d08f66e623d10000006efd0623561502ea51c9a95dbfc35441ea20b595ba\"},\n    {\"name\":\"Blockhead #2041\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2041\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdcdc96a00c28b4ec0000009a6e0e1766e8c65a42a0e0e2e813d4c4a6095a6368\"},\n    {\"name\":\"Blockhead #906\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/906\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0bafa5059f3721a3000000a44e99a90b15739cc17eb022195450accc86132f1f\"},\n    {\"name\":\"Blockhead #984\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/984\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b66aa7369e6bc8b000000e151852679c2db588e1651ed143f55e1b51e844c67\"},\n    {\"name\":\"Blockhead #208\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/208\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x127bf84abdb5c678000000298a405e49ad3c89a83c50070f6a99da473a091d3f\"},\n    {\"name\":\"Blockhead #2024\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2024\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe8bcbf83fd029162000000f51c641c6d32cecb4c11e146f6616d5f31bc8f98f3\"},\n    {\"name\":\"Blockhead #941\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/941\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62c28b5f8176fff6000000a5220a961cb5866e71155763442182d4508d70afff\"},\n    {\"name\":\"Blockhead #1083\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1083\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x19f2560564f1aafc00000027ec1465b8ecb1ef85b4dd822575c575d62bd33b95\"},\n    {\"name\":\"Blockhead #1810\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1810\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5641c4cefc40d10600000033285a2914446af913124eab1502ae797ab2f88b88\"},\n    {\"name\":\"Blockhead #773\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/773\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc4af5e3b4db9885a0000005a1f45bd23ff4de86d8d2af99065c0560d10c78c58\"},\n    {\"name\":\"Blockhead #1887\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1887\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36f198f408edc694000000591a97845fe87b45261c151f44dcade90c91fcd68b\"},\n    {\"name\":\"Blockhead #1665\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1665\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfbee8580595a609300000017ed8010479f9f1a835036d4ef0212787a663768ca\"},\n    {\"name\":\"Blockhead #1612\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1612\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x82f4339a81269ec4000000656d88e923681dd90b23759f88247dc4bc41ff8f94\"},\n    {\"name\":\"Blockhead #1451\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1451\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x332865cf1359e68f00000050961a32716323e8c5cda29aff5eedf3fb85ebcf5e\"},\n    {\"name\":\"Blockhead #1320\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1320\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1481791d80c4a413000000dd95057e90e1e00a73e2dff4668eaea3909c32d0a4\"},\n    {\"name\":\"Blockhead #546\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/546\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfca7238283fb37150000009eaf1b9250aeb55f39e12879ba27bc84899d5c73b8\"},\n    {\"name\":\"Blockhead #1171\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1171\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x53adff22965dc5350000001a18bbe5551fbdd7bdc2f6e36056c2d54ba0773f76\"},\n    {\"name\":\"Blockhead #49\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/49\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x47777e25c5ea3a1e000000e38b1ef0021f9335e75b085c24782b36f7edc937ee\"},\n    {\"name\":\"Blockhead #705\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/705\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3f74435c07cdfbb000000eaf424297fdb9f2e1e71f576cba4cb2cd52da1b7f3\"},\n    {\"name\":\"Blockhead #1206\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1206\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4cace90398531f42000000c65c14b86b9b02d418b98d00da3a8b10881c272705\"},\n    {\"name\":\"Blockhead #507\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/507\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x38c9a04af24abe780000003b75624744275c9668ec14de87a5223f02696c373e\"},\n    {\"name\":\"Blockhead #1894\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1894\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9fd9bd0609296c3a000000a61f0f51cd8c5292cff0111394e65ee62aad7ebef2\"},\n    {\"name\":\"Blockhead #1518\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1518\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xedf33c3fd29ed44c000000e6122a1a734ee956bc49bf7b76a733c6ae5d4f6ae7\"},\n    {\"name\":\"Blockhead #1980\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1980\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x784a4cce92e7e82700000067f63232c3584e584dbbe9875ff80f88b8bf1cffcc\"},\n    {\"name\":\"Blockhead #592\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/592\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5bab5f118ffbd166000000dfe838f33dc713a42bd30146f26c137288f1f27986\"},\n    {\"name\":\"Blockhead #1617\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1617\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e26e3df69c56c1f000000c1a82c752ec5075f150047296ca5014cc5f68efecf\"},\n    {\"name\":\"Blockhead #1569\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1569\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x13714ba4c383b093000000ae2c1f2d85f1b21c39535e9ddb42169c6cdaa4ac9a\"},\n    {\"name\":\"Blockhead #746\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/746\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe692540141779cfb0000004c326c5043e574495f676c87e1bcaf1c56f943b033\"},\n    {\"name\":\"Blockhead #821\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/821\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeaff0b5ab9296c91000000784a360ac88d0d22736f89f59ce342d8c67f2b7aa0\"},\n    {\"name\":\"Blockhead #953\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/953\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1a007e76a3d3303a000000bfab0207e758075e8cfb378b871f6fc5b6447e8dd8\"},\n    {\"name\":\"Blockhead #2022\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2022\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x610c4f9e96d6e9530000009fb204cdba74103b5d2ea862b5fb1fd1eb4c098904\"},\n    {\"name\":\"Blockhead #86\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/86\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4af527571e2a55e5000000a5b28a1541f77794192c289d9fbcce6802da83b0b2\"},\n    {\"name\":\"Blockhead #496\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/496\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebfecfd6d1f2e70200000074e770062dfdfbc5df5b9ed572da6c7ddd232f88a8\"},\n    {\"name\":\"Blockhead #1384\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1384\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb06246482f7bb0b00000002c7264b9fb63c76a280f06586bf037cad264d77554\"},\n    {\"name\":\"Blockhead #1397\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1397\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc280f7268404e43a000000393b25edcb4efa17fbe535a100dcd0a7437cb3bd90\"},\n    {\"name\":\"Blockhead #1690\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1690\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe639d3d2777d376e00000037428a198c570123091edc323d7a88d40ccabc687e\"},\n    {\"name\":\"Blockhead #420\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/420\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a66e7f2ef5326f4000000968b04faa87c0b6b1b3ddb0594baadc5d1598783a5\"},\n    {\"name\":\"Blockhead #1407\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1407\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6f39cae842bd8015000000a9be0a0a0515e71d49c08c3fdb9083ff7251e3ec20\"},\n    {\"name\":\"Blockhead #1204\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1204\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba76345bf668e4c10000002e38ed81f68e37dbf42b40280cfbb443916db6e022\"},\n    {\"name\":\"Blockhead #1157\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1157\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x978c5fc1de54e4050000005d7f2683bd3c36efe3cba9452c3f0f4f34d41bc477\"},\n    {\"name\":\"Blockhead #41\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/41\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb1fc6d89bf1415aa0000004bddb89836e2ca012762f7f78bf87f1e14ac4fa75d\"},\n    {\"name\":\"Blockhead #552\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/552\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66ec7bb399e180f90000002a568d0c0eda6534a597e11c02370d8cb557201e7f\"},\n    {\"name\":\"Blockhead #878\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/878\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c88bc0fce3e0b6b0000008942d85d2392532c05915a373df4b6daa94d5b82ad\"},\n    {\"name\":\"Blockhead #1456\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1456\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x452c15e58c5ba97600000040550baa21c2bb63d18688594077798abce4dd7f69\"},\n    {\"name\":\"Blockhead #1198\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1198\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11114f41b8ca91b000000012b664eb4a97674208d7e9ef53e6cb8051caf11f76\"},\n    {\"name\":\"Blockhead #1088\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1088\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xde4cdb944a9c2787000000fa192c5a53d422f026998a81ff82bc3849a6e22387\"},\n    {\"name\":\"Blockhead #869\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/869\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6da6d46017534c50000000f63d0a0f84ccbc58dd1133154d9eb53695a662e5ce\"},\n    {\"name\":\"Blockhead #1794\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1794\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9f24be45b4dca2280000005577071091e2d21d7fb380a5b0224d6ab27e3400e4\"},\n    {\"name\":\"Blockhead #1679\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1679\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e42ea3f760e829c0000002ecff755f26049004c04bad1913b2ce54232240355\"},\n    {\"name\":\"Blockhead #531\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/531\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x48db99bd95d61c4c0000007f81d65b38475a59228f8a7b48740e5b2739fbed9b\"},\n    {\"name\":\"Blockhead #2051\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2051\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe594905966fdc4370000006853f3d06ccbb6a8ae51b6ae8b573acd8414bafd59\"},\n    {\"name\":\"Blockhead #854\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/854\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0cb3b7ca182363c000000424238cfa1ffd1e7f4800de09c89ed928dfbb8dba5\"},\n    {\"name\":\"Blockhead #132\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/132\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59168ffc4e886c38000000fcd6044887f2107946782bd6ff48e79dc24b463b88\"},\n    {\"name\":\"Blockhead #1818\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1818\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a281d47f453587a000000224267baebfb3ceda38c1f16ac6bfd1ae210ad8379\"},\n    {\"name\":\"Blockhead #664\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/664\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf6bcb27bf46929880000004e47d61fa556e58c6dfda3444e5156c8ca8143da99\"},\n    {\"name\":\"Blockhead #17\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/17\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc3da90cd923b02bf000000c7e318b90998f5bc150d91608239672a0aaad08a36\"},\n    {\"name\":\"Blockhead #411\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/411\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe755c32d88697de8000000ca9b1d3277fa4a95da4005bcc7fed1994ca2beb2c2\"},\n    {\"name\":\"Blockhead #575\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/575\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc0b8e793d05cf431000000242078ef82e4cd9dee23437540ddc4afd5d63c7815\"},\n    {\"name\":\"Blockhead #486\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/486\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1496a5a530d69eb9000000bc433893a67d837af7fb6fcb0aa8ff9c25d98fe23b\"},\n    {\"name\":\"Blockhead #1989\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1989\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x256e4987593d75730000000f3834955b4f15d2c8ed42761f60e3f7c46b99037b\"},\n    {\"name\":\"Blockhead #1703\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1703\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe0ab26f60902e8c500000032b6480e0d6a2a6d22adbfe786d0a6c5e0be66030f\"},\n    {\"name\":\"Blockhead #1234\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1234\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d4984dc62c71116000000229a2163bc2bf1de796c313499dcc5aad47eb85f1e\"},\n    {\"name\":\"Blockhead #1394\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1394\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x45db92837af3cae80000004b50a5fdb7bc9f84e7e825a7b479a8918aaa1bbf43\"},\n    {\"name\":\"Blockhead #1943\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1943\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa78e88b347d5d67300000065a85994c19c19ab6159d8f262c86aee2ed73a5a3d\"},\n    {\"name\":\"Blockhead #875\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/875\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8bc87e7524f40a32000000d8f850352c9777dc82264b57519ead26f5ad775dc4\"},\n    {\"name\":\"Blockhead #1066\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1066\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c5fc96eb7eec122000000a3864ce342c5cfdd5d59b9c9df72fdd3c9b3a436c4\"},\n    {\"name\":\"Blockhead #1498\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1498\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe6b83c3de96f0fc40000003a7925ef861bd4eb480323ac4b4c941b421ef3b538\"},\n    {\"name\":\"Blockhead #266\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/266\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0201421f493dfc39000000a04edff31abd00e3ea5644e03c6d59c80bb34534e7\"},\n    {\"name\":\"Blockhead #776\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/776\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10b64c2229b3a9750000001f692830a3068c9cb57eabfd353df4119e86546ebc\"},\n    {\"name\":\"Blockhead #1678\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1678\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7523a8b83cfb17520000003c4765298a4ac4314731220dcc262a75cb7e8add1f\"},\n    {\"name\":\"Blockhead #1504\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1504\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x19d013eb9daaab65000000665e5df8aa0c5cb2ebe06c5b9f95fd3061d2292899\"},\n    {\"name\":\"Blockhead #1610\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1610\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36744d88c1b33f0300000019b626d5a865c74741c36e0420583089210f9ee055\"},\n    {\"name\":\"Blockhead #1901\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1901\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebe3c05fdec1d541000000dd4d3b08eb951976fa40e71c55fe1f58123280b923\"},\n    {\"name\":\"Blockhead #164\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/164\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7ff808913eba152a000000d74c3e90bd1794792e4f3893f642b3058e097d01ef\"},\n    {\"name\":\"Blockhead #1730\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1730\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb24f3bcb47d2ace100000097590336db4dbb4698ce4134b5149987bce2a08c85\"},\n    {\"name\":\"Blockhead #1430\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1430\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcf5c17febcb0dfe9000000d8d500f29c53f5800e74d210cebc29847794d97c2c\"},\n    {\"name\":\"Blockhead #1832\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1832\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf93778f0a44d3dc10000006f44309483d4d4bc6b7a2fef5caf70492873018c4c\"},\n    {\"name\":\"Blockhead #390\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/390\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa363bdf2fa8d51c1000000fc46ffb269a9678bea130dc5c8c09d5bfd13b07c6f\"},\n    {\"name\":\"Blockhead #1014\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1014\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b23bd7f6ea4e8a4000000d51436b65b67586923eaa7f544f734307e55f0b35c\"},\n    {\"name\":\"Blockhead #2036\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2036\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4306a293bd52c60c0000005a6511326c2e5793f741b74b7767cd5eca5bac246b\"},\n    {\"name\":\"Blockhead #1390\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1390\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee719f159cb3de58000000eec99c0494d08f5023a2c8430d57db66f6c6997421\"},\n    {\"name\":\"Blockhead #1820\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1820\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1463e91e80d79abe0000002527e7b015f0971ecb56a0d911f5894cec120bc085\"},\n    {\"name\":\"Blockhead #487\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/487\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa37acf24ed4e6d200000007f4e3dcba654ae47e439e8977d471b8e50ce282214\"},\n    {\"name\":\"Blockhead #2028\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2028\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa22fc173e2dc57d90000007b7109264efe60e9aa32ad25c97258a83fd3687fb5\"},\n    {\"name\":\"Blockhead #436\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/436\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x089e11251a517af1000000c8fc24551bd297d8445e1e832e6a20ae8085a7847c\"},\n    {\"name\":\"Blockhead #1015\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1015\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c9f37a110da1b3c000000d216509451541b0b40d53f7a2bc2069744b0265401\"},\n    {\"name\":\"Blockhead #630\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/630\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb31ad672b4d741a8000000961f3a9a010f9800b5ad2cc86be84201dfb6c3864f\"},\n    {\"name\":\"Blockhead #177\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/177\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaa1bb857aaec273100000066db8bbd03773bb818d09f6be10ef8ca50ea869ed6\"},\n    {\"name\":\"Blockhead #1656\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1656\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88879d2f26f9b92c0000006691c5867b255f489c420a914b8c0c0655be7d46da\"},\n    {\"name\":\"Blockhead #813\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/813\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x72a7b4870da26c14000000cb7b2273b559a5940c4c918d9011659d38c2e3ddda\"},\n    {\"name\":\"Blockhead #1711\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1711\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xca4b609a44e60e1c00000091485b20e83f5ac05474ed11b486d5e64f22c48fd2\"},\n    {\"name\":\"Blockhead #264\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/264\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4be018e20f27bda3000000219100cbb4c017fbadde336694956932299b71ac68\"},\n    {\"name\":\"Blockhead #837\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/837\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7d8a5b642445d739000000fe1c790e06d8b241270e01fb3daf30d94e271eab97\"},\n    {\"name\":\"Blockhead #1084\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1084\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd9ab6def996b75a1000000ba209f0d798d6690142d6346f97ce199637f6dd422\"},\n    {\"name\":\"Blockhead #1052\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1052\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8f787f4deb3872c0000000f5970c6e582160869b13ada881ba09c850ba28fe5f\"},\n    {\"name\":\"Blockhead #1143\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1143\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc791e3c936ed2175000000ffff8f00d71154bb3fbb7e1906ce96ead641001320\"},\n    {\"name\":\"Blockhead #562\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/562\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee1af84289dcf59f000000ca06e726115d4ca8fd7ea19c83e69d99ab75993c9d\"},\n    {\"name\":\"Blockhead #942\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/942\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x11a9335613b164a3000000fe3d1f25b278933ebbe65078c1ee38db929faff75d\"},\n    {\"name\":\"Blockhead #1101\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1101\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xce1ba42f6950801b0000008a036234dd86581300804fffd5415034fe436e1fe9\"},\n    {\"name\":\"Blockhead #1932\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1932\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5fa476c0ac7e7f910000003d112bb40ae83e5d41d71dcb738681c7bc2ca7647d\"},\n    {\"name\":\"Blockhead #1583\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1583\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x011411a7b2b35a8f0000001fae0f996fb56a89188da2e79eec890a0f52bc43c5\"},\n    {\"name\":\"Blockhead #1455\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1455\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8c8b566b1df6c3e0000008947f21e9c776e39d141ba59cb99fd13bbbe416a9e\"},\n    {\"name\":\"Blockhead #1724\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1724\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe32d4760f7221cf0000005fb302e8ebd94a2a8100e8f1fa71be47c621407043\"},\n    {\"name\":\"Blockhead #1481\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1481\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81ae010ab58b5e01000000d940368a0deaa11bcdf26fd4f22746c2e6a6113381\"},\n    {\"name\":\"Blockhead #1604\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1604\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7aba9e1d7813dd750000005e1d4553c20d3a5911646950bf5cbc3b7a8fe3c688\"},\n    {\"name\":\"Blockhead #453\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/453\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf55dcab54406d50700000037f6c19e313c739e617a8a4f4e0323be619a8be628\"},\n    {\"name\":\"Blockhead #989\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/989\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fae9b542a444da70000005eafe9ae400b1b5f53299373efc81795219378fd9c\"},\n    {\"name\":\"Blockhead #778\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/778\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x22eab72dbebe7c89000000ed555b19171c54f92c39f0102bb958e89550506434\"},\n    {\"name\":\"Blockhead #1325\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1325\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b65570df3e7be5d000000f905dcb6ec3b7a7f4b9039ec049eec621c5043dd86\"},\n    {\"name\":\"Blockhead #368\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/368\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f184f82eb93c2e8000000ae017f78b2748d5f1b0040f1feb707806f934b39c6\"},\n    {\"name\":\"Blockhead #1768\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1768\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8884a59dcd92731b00000021064b13aa4cc3a535a34962c0c48a01f61d3348b1\"},\n    {\"name\":\"Blockhead #629\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/629\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdc7fcadffd4e18070000003fb642ab44b56eec99f896b2d2fa42080f164e29a8\"},\n    {\"name\":\"Blockhead #128\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/128\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5362710db41648bd0000006c72a8e92b16bb26b38a1bca6aa37c41420aaff5d8\"},\n    {\"name\":\"Blockhead #430\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/430\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0792e40d3ce52e1c000000765b82863f05250ce33b61c883b96450a58bc1d52b\"},\n    {\"name\":\"Blockhead #477\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/477\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x14bf9de38454d7810000004fa20da200bebb6709371fc8b42abbf1841ecad887\"},\n    {\"name\":\"Blockhead #1199\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1199\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a4b6b3c8628d6c7000000449c10dd75014e4beccf7200d6bf6c5e37861cbf72\"},\n    {\"name\":\"Blockhead #409\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/409\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2da4ede63937d00b000000443c1ad3d28c07f7db068d12ab17847bbc8761c922\"},\n    {\"name\":\"Blockhead #382\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/382\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3e7f0d39eba5d75e000000c1e124446f00c5efac1444e91a5e3195fbdb58b383\"},\n    {\"name\":\"Blockhead #628\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/628\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x20ede59a6e15d22a0000001f46740ed313c63f6328d81ef81169f1af2b0e51d8\"},\n    {\"name\":\"Blockhead #319\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/319\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x191e538132d8ed5300000072094c4358642934e3068c7e8ffa19d2a21a126358\"},\n    {\"name\":\"Blockhead #506\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/506\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0a6ed326f83b8e70000001d478f21ae2ec277fc4f00c88140534cebee2850dd\"},\n    {\"name\":\"Blockhead #1712\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1712\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x044d5d3cdecab36d0000009f961af11efb0239b25f88658e57a5958bbfd20a2e\"},\n    {\"name\":\"Blockhead #1098\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1098\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x139c65d9df91ce8f0000009a2d213f89f673ff2a085fb3021f52df0e62e39754\"},\n    {\"name\":\"Blockhead #1631\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1631\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x692c7d265ab12550000000191d8ce820b00a6f39424463ff4480e28b6029517a\"},\n    {\"name\":\"Blockhead #809\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/809\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d4ea1ba847b7fe70000008c740fa57a4b10570da37933f40762be2cc6e41eb8\"},\n    {\"name\":\"Blockhead #1075\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1075\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa877a958d65e2c820000006b600ce507f49b71fa02b6e125e0659d06479d625d\"},\n    {\"name\":\"Blockhead #1551\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1551\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdefeebb728f9db1e00000059e1df0f46450fa90d8c34b5056527fd21437d15dd\"},\n    {\"name\":\"Blockhead #1182\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1182\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9678f21b9f82cc6400000045156706b528ff6fcd2b8b497073e2c29443e5798f\"},\n    {\"name\":\"Blockhead #1984\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1984\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf5ba50015f36473000000210950aa657a45fe45c0b503a4d8f78541c15d6926\"},\n    {\"name\":\"Blockhead #1312\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1312\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x07c08a28f86d8143000000b81764f173b2d2980186210ae8bb9939f7f9538c46\"},\n    {\"name\":\"Blockhead #1399\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1399\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x58ed260ff80fe57e0000002c922de7e1491e0930ab56a2da42b9d87608a1a034\"},\n    {\"name\":\"Blockhead #1476\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1476\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9f0c08278b27ac90000000f750a25f26859e63d8cf9464f2d08b8bd726b25b9\"},\n    {\"name\":\"Blockhead #1032\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1032\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8cf07cb98de3501000000f0669a194a714632a5fb17ae518518a54cae87fc9a\"},\n    {\"name\":\"Blockhead #376\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/376\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x766d493dada8a6660000004e4851eadae17bf0255cf578da51c929c0e88bbf44\"},\n    {\"name\":\"Blockhead #1483\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1483\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31a6aba3dd9d422f0000003783af05e595e4a3ac7d1d6143bc678c2510f45554\"},\n    {\"name\":\"Blockhead #1997\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1997\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x786db12fe7e5501e0000002b4a3ffaee64ee510157889128853236dcb53120d4\"},\n    {\"name\":\"Blockhead #1147\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1147\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4a78a55904844bf5000000397f2615d45af79193064d759a6e2a3f06e175df23\"},\n    {\"name\":\"Blockhead #1464\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1464\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab1911da4be7e565000000135048dfad98043cbeae1ed3e77cc10f06baecbb19\"},\n    {\"name\":\"Blockhead #1946\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1946\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x099d8066348bdbf80000005648c4a8bcbfeb96881e2c1e7a648ebc26cb9d443e\"},\n    {\"name\":\"Blockhead #419\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/419\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x377930923ba387b8000000c3284a0961885f2a564eda034ca70186caa7c4f12c\"},\n    {\"name\":\"Blockhead #387\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/387\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x018e37711d843f790000000f7616b1ca3291b30c3d84181e1bf30b5f1bec5830\"},\n    {\"name\":\"Blockhead #977\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/977\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x495441d78a70ef900000006811915cf0d03e1ddde2faadcf539ad329bc9178d5\"},\n    {\"name\":\"Blockhead #1944\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1944\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0676153812b1a2460000004e04f9b1df03abe4bfcdb67a3dcc4bab74ba3ddbe9\"},\n    {\"name\":\"Blockhead #1218\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1218\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x202683b02bb32b240000004e48f1efa9c4fa246b3e3518de9cfc53b87671fd42\"},\n    {\"name\":\"Blockhead #290\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/290\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d5830c96b35ae330000000f5b15e0f2681989087472aa50476d27b00222dcc1\"},\n    {\"name\":\"Blockhead #673\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/673\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31ac66453a93dda30000008e394f930eb744e55a6b811321e40dfbe03cf8fe52\"},\n    {\"name\":\"Blockhead #288\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/288\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x97191f53524cc17700000067e66d7a23a3b03eece7c3130274181ff10159b3f8\"},\n    {\"name\":\"Blockhead #1898\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1898\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb662c739352a5cfc0000009bc1004f8cc0af55d9d6404185e6d6438492eaa794\"},\n    {\"name\":\"Blockhead #294\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/294\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9385e910e7813599000000871dd8eb59a146826f762125563bfb5cba55abc57b\"},\n    {\"name\":\"Blockhead #202\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/202\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x14e32ec18bff12260000006771e96ab712f2da109a013214e67fa8fa0df7273f\"},\n    {\"name\":\"Blockhead #1051\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1051\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8ab5a41965bd87b9000000695a670dd39c3b2ab3db16a668c90b45f3f3b173be\"},\n    {\"name\":\"Blockhead #488\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/488\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x189131d0206d531e000000a2d016e2671f915c2b25bc05e71e4d1644ab8336fd\"},\n    {\"name\":\"Blockhead #1354\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1354\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x49cb0d3eaf6b69a300000043b24c5b4aee04986fb711912688b3094b70d7fb80\"},\n    {\"name\":\"Blockhead #1623\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1623\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7d504714b597138d000000665b2d70a4e3e7254f0f701a0d84d9f8f4738b3bd5\"},\n    {\"name\":\"Blockhead #44\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/44\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x308a595fe3746db5000000c37d54db499b8c13882911a2bd9787d9e7999ab988\"},\n    {\"name\":\"Blockhead #1567\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1567\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbdc5b7d18b967985000000380ece725c596fc39885d4a2a7d371e0cfbc5f03b8\"},\n    {\"name\":\"Blockhead #2034\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2034\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8159b352b9b03d230000006441ee12b0f9e75f075d5d77c47e2448f6321eda60\"},\n    {\"name\":\"Blockhead #39\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/39\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb9abaf72dc4298ab000000134f9f758bc2b5ad5954c569c145e2a0afa191a6f4\"},\n    {\"name\":\"Blockhead #692\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/692\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x72fcabda6734df2a000000424cec37a9d689292100bb099676c6dd58357b2831\"},\n    {\"name\":\"Blockhead #1784\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1784\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd3ae7a76eb2414a90000003095638affc28d710b2d0bd1bcb3e02e1f7b11959a\"},\n    {\"name\":\"Blockhead #748\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/748\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d3c9517ef774198000000c82bd6d749524bcf421fd9f7366175a82f08426903\"},\n    {\"name\":\"Blockhead #1924\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1924\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x93e98467013d0c2c000000db4c470aad66f27189315955a7b696caacd92e12eb\"},\n    {\"name\":\"Blockhead #1209\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1209\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2fd1ab756fdd015b0000005517777b0a7302de73601637513b6ca91513a0dc4b\"},\n    {\"name\":\"Blockhead #1544\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1544\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x159f535922b5e45d000000224d4eced62e8adb06723ffc6ae2e690a4c8e28447\"},\n    {\"name\":\"Blockhead #1395\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1395\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2376147e3a7d82e800000045cf290bd08bdbd81317f6c09cf1f00a17067d3387\"},\n    {\"name\":\"Blockhead #1091\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1091\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e810dfab9fc73f90000009a362894c4da0070e6cc6a8df5e9327e8aabddd334\"},\n    {\"name\":\"Blockhead #1369\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1369\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x12fde63b7798afe5000000673c5fb79b752467fc61f3a3dc07307620b6b6fd3c\"},\n    {\"name\":\"Blockhead #874\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/874\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x12d244698198f70200000016195a42a88b152711c419eb5b71aa89ec2ccedf32\"},\n    {\"name\":\"Blockhead #1930\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1930\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdc6a86e0973ed0b1000000c7479e0b8b8e80bba200e78657ddc4f39eec731e02\"},\n    {\"name\":\"Blockhead #78\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/78\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8e75677f6fd33cfa00000048d30cdb198d29b8cdecce7e350f6c42618d37d3ef\"},\n    {\"name\":\"Blockhead #1388\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1388\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x890f52b57995e9100000002fd96cb6ad830e6034d9c9e540e0f40c8e3d49e939\"},\n    {\"name\":\"Blockhead #303\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/303\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Alien\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59bed4696c680627000000c6e5d4d5344c88d394bd01c071345922a61c1435ba\"},\n    {\"name\":\"Blockhead #1412\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1412\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa184806117cc35f0000000a942eb36b59d09a73ef20aee5d4bd84132dc4dcff4\"},\n    {\"name\":\"Blockhead #1871\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1871\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe1948ea26785da380000003886048b935fcbd53ec8273587e856411c8de593fc\"},\n    {\"name\":\"Blockhead #1178\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1178\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1ccc3f6ddb42fb4000000067cadbe369fa6c37961c81d33c9ee545a76da06340\"},\n    {\"name\":\"Blockhead #1289\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1289\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x190be739d842e6c6000000f2bc2577c3aaef150e778cd2cd07079bb4ee0a7720\"},\n    {\"name\":\"Blockhead #676\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/676\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaa6dd618ec35a1360000009a63078d22a80672e12d1a3acc29ad367015169b75\"},\n    {\"name\":\"Blockhead #1232\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1232\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x17b6fb33112c77b900000064358ed78cf78bf33fe8ef02b5af818bd1bebe03f6\"},\n    {\"name\":\"Blockhead #462\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/462\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7655c37e5068f31300000062cefc15867682ede48b5ef9be084770ae5703b750\"},\n    {\"name\":\"Blockhead #437\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/437\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x44043b61ffa54a11000000e15f2480aa135dc05de6230575269dfd97a80bc990\"},\n    {\"name\":\"Blockhead #1558\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1558\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33527f2e6cacae8c000000593a090eed3010280c2c001250af5b11c7c7c28bd8\"},\n    {\"name\":\"Blockhead #1992\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1992\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfde1aa5cb19c6b4c0000004a1c0bd9ddd7c32e8cf218c59020a8fa630517e31c\"},\n    {\"name\":\"Blockhead #1308\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1308\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc41d85eb33bca57400000011732017fde3326ab6439017130b651de6d200f3a3\"},\n    {\"name\":\"Blockhead #736\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/736\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1789f6043e62bba1000000425413288b7e09143bc61f1d97d61f60508768a42e\"},\n    {\"name\":\"Blockhead #1168\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1168\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x53e689fb0c9411a00000001546fda4ca8ca832598467051387c80635a5c64c13\"},\n    {\"name\":\"Blockhead #1396\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1396\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd094e9edab0182c000000384a4318e0658bc50b822cea8723478a569065ac6d\"},\n    {\"name\":\"Blockhead #596\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/596\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a81c4a1626255ff000000379b253c863f7ccad1e86136447cb11d4b1e98aa6c\"},\n    {\"name\":\"Blockhead #1093\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1093\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x69c148440e28d8200000004ea9026cf0745e25fb4de4b7add12d1cb1f6f1a98b\"},\n    {\"name\":\"Blockhead #55\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/55\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeed938a64d47c8d7000000861439674c88c4f0be9b39d90133e61caa6912febb\"},\n    {\"name\":\"Blockhead #881\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/881\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24bb2a6294308aa1000000636958d3a513b7c50d54f91211d07d1c373ddbaea9\"},\n    {\"name\":\"Blockhead #1283\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1283\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x64a6deb172bbf5f8000000743d0437e25e4cc473e4526cd52cd9544da8673888\"},\n    {\"name\":\"Blockhead #617\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/617\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b92f3fe1951836600000045144df619db675d2af641d2b31864a56353dbed63\"},\n    {\"name\":\"Blockhead #196\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/196\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf94ed8eaf77fae1200000028fe1f67a5539d979b5bb2dacf1fa6012b3587d7f9\"},\n    {\"name\":\"Blockhead #936\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/936\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbb97e842473776d9000000ffe249200e582d382d1c8db8ad6cb79183bcf0eb6c\"},\n    {\"name\":\"Blockhead #685\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/685\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c0ae946d49af2d4000000a5e70233cd0732f77220c7800f3c3dc7b5ca1cfccf\"},\n    {\"name\":\"Blockhead #771\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/771\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc2f7ca7b4c90340d0000003f0f60068fb40dca3335a27702c2a0bae72fb2d418\"},\n    {\"name\":\"Blockhead #251\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/251\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x418d1b7ed96495430000005b61dde64436c04644adb317ed4a43d085a8b2e4ff\"},\n    {\"name\":\"Blockhead #767\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/767\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xacc172fcd959c141000000ba12e70851844cd0ea38599c39c4ba9ee093dfe5ac\"},\n    {\"name\":\"Blockhead #1565\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1565\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8f04c98af949511f000000d0c4007af49e71511cced4eb22701386b81af98d2a\"},\n    {\"name\":\"Blockhead #1803\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1803\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0f2e8cc4bd3ed7d00000079680164b4a1e6dbdff06a379c6cd398f614b88fe3\"},\n    {\"name\":\"Blockhead #2057\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2057\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1af69851287cbf8200000034331ccbecfa7b5b170afc91486d3ec5e6d421003c\"},\n    {\"name\":\"Blockhead #253\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/253\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0d3f228979558f1900000041a3074c66936aca5c057ebfeadef7dcb2bc78269a\"},\n    {\"name\":\"Blockhead #187\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/187\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9fd6c4bb0951ccb90000003b354cdd61e61ff2b4ad980f301d7b0708d4e345cc\"},\n    {\"name\":\"Blockhead #497\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/497\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e357140d28c0df7000000e82e1486cc9ef26caa63c3a0c8efe3ea9dd51fe47a\"},\n    {\"name\":\"Blockhead #1280\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1280\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfa70286ac30fa5b0000000170db7a18114fdc95a77c7505e3aede29e78e081d3\"},\n    {\"name\":\"Blockhead #960\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/960\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x218d272454cbf9600000009df209b84fabd3dc3b1c01761b8438b717786b9a56\"},\n    {\"name\":\"Blockhead #1533\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1533\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x64e9f138ff55330c000000376e13f0a20f1418c0d8371da3f8d857afbe666198\"},\n    {\"name\":\"Blockhead #1259\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1259\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x13989ee273169e58000000315cbaa3fda58924adaa3d3d022e1bfdce9db3d85d\"},\n    {\"name\":\"Blockhead #1863\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1863\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd4b4dd4a933cf1000000096580b73705dbd2870792fccce308383b40e99dba1\"},\n    {\"name\":\"Blockhead #509\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/509\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x750374ec1ab4c7fe000000ecef1ee5b63ba8e185dd87df41d7429bdf4b85caf4\"},\n    {\"name\":\"Blockhead #609\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/609\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf47c2ee56dd39575000000e0f119c3c2106801bbc75109361bfcc7f67b9a6446\"},\n    {\"name\":\"Blockhead #971\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/971\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdca99219a04407be000000b51753d96bf1d3545a4f2f734dff73d97fe0cc627b\"},\n    {\"name\":\"Blockhead #1857\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1857\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdc62d75226d824b9000000212b559b534c42cf9a7ddd5e772a7a13a463fe9a0b\"},\n    {\"name\":\"Blockhead #912\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/912\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd791884f4ee388e8000000203649f309e6eb8d27d6b77c58dfce9211603eb250\"},\n    {\"name\":\"Blockhead #1709\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1709\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x26a8d1247a196229000000454c4945947d5d3f7876c49c4a245a8e1f58cccbc7\"},\n    {\"name\":\"Blockhead #222\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/222\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe38705c527ac755e0000001494e0d845b93eabba1b6fc9878c6f6ffec3d6c073\"},\n    {\"name\":\"Blockhead #1614\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1614\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99d28780e7e41fc00000002041e4180b83a0f032f22b9f844d20d45d13247789\"},\n    {\"name\":\"Blockhead #1458\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1458\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe850d2ce30a81f3000000a7458107c981aab9d2436f25de3d9a906e47bba623\"},\n    {\"name\":\"Blockhead #1605\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1605\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e0a239087d33962000000521fae7c1bf5809819f6ce5038d5ed15a63c76a6fb\"},\n    {\"name\":\"Blockhead #694\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/694\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf6ff66f31897c1b00000002a2a277bf84ddebe93d7c2cc1e5e68c0c3c1edac63\"},\n    {\"name\":\"Blockhead #544\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/544\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4bfc5c750454c994000000e61562f84f1230fc8c97a8330a404249faade4e1df\"},\n    {\"name\":\"Blockhead #274\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/274\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x173d5da08cca26e3000000ca0b49b90597381aa52b78d6c4099941af196230a8\"},\n    {\"name\":\"Blockhead #1155\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1155\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1468262daba5723c00000019623a525b5091c1246b1d5619a343eb7ab2a88463\"},\n    {\"name\":\"Blockhead #656\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/656\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3394388eaa50064e000000edf24a0f0d7c03e16f1b1b7b8e6c1abc4451e0afee\"},\n    {\"name\":\"Blockhead #1010\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1010\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b89b40a1cb8a67f000000d9e4048bd25c46623f8e0e58744d5483094247a482\"},\n    {\"name\":\"Blockhead #1040\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1040\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd946a3f682d3243b0000006a13df0d009eba0766cfa459510c331fc6de65b56f\"},\n    {\"name\":\"Blockhead #1843\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1843\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x78cf00f33b7a5d4f000000bf15d9227d0413c9b08a16d65814c2b4606ead665d\"},\n    {\"name\":\"Blockhead #149\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/149\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Steampunk\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7d80d099421a774a0000006bc4dece2c3282da57356a796ced8d8c8f4792d574\"},\n    {\"name\":\"Blockhead #231\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/231\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Psychedelic\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x130ba653651d3c44000000f69aefc240b2501ab831f449a77fd0d5a7cd778a07\"},\n    {\"name\":\"Blockhead #1044\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1044\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf92ae8ed5d5ffc88000000b64c5587a5573a246a2fa0b9a6e0570e8bdfc0161b\"},\n    {\"name\":\"Blockhead #831\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/831\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x435dd7a4dcd9e3420000006856aa86aac51cc7b0bf9983440dd205766779a793\"},\n    {\"name\":\"Blockhead #82\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/82\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x06d5fa280161b855000000bed830ce4787d39bf32d0f8cbcdfcec597f3af7102\"},\n    {\"name\":\"Blockhead #29\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/29\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbe37953dedc92868000000b5ed066473f9b9d2087e6d20f133ffb8e121f6785e\"},\n    {\"name\":\"Blockhead #180\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/180\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52b617eb48272ddb00000080f40de406256db2cda9197a843d42137569cbd11f\"},\n    {\"name\":\"Blockhead #1192\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1192\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1604172146216456000000177375f71014a5e93bb5311736b155336f0041559b\"},\n    {\"name\":\"Blockhead #1740\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1740\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x914d9b8bf40e08d5000000189b014de6de292d305e8183bf28aac232bff88e1b\"},\n    {\"name\":\"Blockhead #903\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/903\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb01f8ede99a2cc280000008b290e3d8789cf6e1788c0bd4c5c094a0334c843a7\"},\n    {\"name\":\"Blockhead #805\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/805\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7552e5d7e5426b90000000e18aba21434a44d0b41dca388fd11fff2ce56fa501\"},\n    {\"name\":\"Blockhead #2015\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2015\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9f6ec5eff3e880330000002733554d735e49dfe1ee63b87d9fb3ef814c259061\"},\n    {\"name\":\"Blockhead #997\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/997\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd88fbef8d0a220f4000000a843fb2991254968ee13f700319054a5d132013cd3\"},\n    {\"name\":\"Blockhead #1993\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1993\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x89b3d96ee2c4944900000034670d9e90673c4444addbc5db6b035483587448db\"},\n    {\"name\":\"Blockhead #260\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/260\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x223276f5ed18da690000004420f1d6696d854c2710c964006bb6f24c08b0e3de\"},\n    {\"name\":\"Blockhead #1060\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1060\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e402de4bde7a691000000d4445985dc13d7654f0297140c9ff70dec45a66231\"},\n    {\"name\":\"Blockhead #469\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/469\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x932cceee03b225c9000000d11fa89c555d909f17f6307ac20c7bca74d5cabedf\"},\n    {\"name\":\"Blockhead #1403\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1403\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Circuit board\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b1679cba1643eeb0000006fe6d502f9f7e3d7f47013b0605866d8c257c27a56\"},\n    {\"name\":\"Blockhead #284\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/284\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba47e31495f6250b0000002a2619a7fd70425c496b663add8ca5624fccc9bb2b\"},\n    {\"name\":\"Blockhead #34\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/34\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x02dcb7312c3ea033000000e07e421c5bec43933ee544bc497581b45a157ee134\"},\n    {\"name\":\"Blockhead #1374\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1374\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e71cfae401482c20000005343a72da596b19fd8b5fa54f182b889b911d6aa56\"},\n    {\"name\":\"Blockhead #973\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/973\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f4d04e3893bc82d000000b146d616e875353ffbd17b6f3c334702f70d938bcf\"},\n    {\"name\":\"Blockhead #1471\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1471\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x28f3e4aa84d35084000000210ad7aa19e4b3d488a331c14dfad730ce1c935706\"},\n    {\"name\":\"Blockhead #1534\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1534\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8e4fc32e1b666def0000007ea8221ef3925eda0b58aeb53e376deeb5a783a7e2\"},\n    {\"name\":\"Blockhead #1490\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1490\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbf1734dc03334da8000000635a6195d231758b78444c4f13d695a4fe67e744a9\"},\n    {\"name\":\"Blockhead #713\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/713\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x80b532c16b0fcc1c00000024e73b09521d99668e470f378c5e3bb4f8d8f0c777\"},\n    {\"name\":\"Blockhead #1648\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1648\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe3756171df3b5e6f0000005aa2334b134c283e4f664c52b2417cc8d71c26a288\"},\n    {\"name\":\"Blockhead #238\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/238\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2c0315e8414b694c0000009b0c4e7e7ac31c5a7affe33ad9977e411ee14d1297\"},\n    {\"name\":\"Blockhead #422\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/422\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7e46a9e0989380eb000000b20b66950aa51a8da45fcd8a0908394085b0b0f380\"},\n    {\"name\":\"Blockhead #1777\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1777\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Rainbow\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc4ce5b04a53202da000000ea05df30fce0ba5109bd2e281417ab480c148989c0\"},\n    {\"name\":\"Blockhead #1825\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1825\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ea3256a8de3dede0000004412b7654ee660927e9c41dca037ec9da2ef186971\"},\n    {\"name\":\"Blockhead #1058\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1058\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x790676f04edd247a000000e74bcace8e6c105019b31d748f2104b96330a9f26d\"},\n    {\"name\":\"Blockhead #916\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/916\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xde748de1d3a6cb07000000935d2c65120e958063c46c6ece18544b28b0772b10\"},\n    {\"name\":\"Blockhead #1552\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1552\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x52b1bf764e33531e0000002235aede59a14fcdbfe97e5f809e15e5045e7a23cb\"},\n    {\"name\":\"Blockhead #1599\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1599\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5fab34dc058a4cc700000051ee8a1c0c364c667eea88f980b55238353583beed\"},\n    {\"name\":\"Blockhead #659\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/659\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x648bd478890bebdf000000a04c537dd87eff8ae7d29c6f8f7568f167d9cb9bc7\"},\n    {\"name\":\"Blockhead #820\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/820\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa4be6fb44ffb3552000000647addf59d1079817d6af8e1a763b8989bdf60735f\"},\n    {\"name\":\"Blockhead #714\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/714\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x825977870ee959c100000054fa2250889d8a47808e82bfe11cc90ca2ecc3eb8e\"},\n    {\"name\":\"Blockhead #510\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/510\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5610dea32060af01000000b01f8518b8528892bdbc150cb1a86c0541ada85e39\"},\n    {\"name\":\"Blockhead #427\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/427\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9c54d441714930e1000000e880151096427610114f66d81bbcf4f0f9a448b8d4\"},\n    {\"name\":\"Blockhead #384\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/384\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xabc60700df4c1905000000eef94e72461cbe7c58d48cb39c3cd285f5add22bf0\"},\n    {\"name\":\"Blockhead #1574\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1574\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x277099aff713265500000010230f89edec5f167e612b9e7ee2ca8e42f88d9a87\"},\n    {\"name\":\"Blockhead #1962\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1962\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a5f1a055924699400000079489e56832cc02b2fd1df67c35f3eef83377ebbb8\"},\n    {\"name\":\"Blockhead #990\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/990\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5b4a2957790814e1000000de9328568fb5cca38338588698ba5172a7f049dd24\"},\n    {\"name\":\"Blockhead #885\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/885\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf487bf52134b2745000000c6063476201ef55a24963ce8f2fca54a43d39bb0d1\"},\n    {\"name\":\"Blockhead #295\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/295\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb5506da89d6803c6000000ac15f368571045c4f7990c15a6e19d989fde18d980\"},\n    {\"name\":\"Blockhead #723\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/723\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc22bc065dae3f0440000000d4c324be0834e196d7c63dbae200c7e50e217c85f\"},\n    {\"name\":\"Blockhead #1460\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1460\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1e41f910e0ddbf70000009147688aeb737b9982c269643289327a6a16a7af72\"},\n    {\"name\":\"Blockhead #1453\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1453\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8bc96a1cac4e771a0000002916ec21c9bf072841e42d1434418380117b149866\"},\n    {\"name\":\"Blockhead #967\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/967\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe7c30af008691ca2000000be15b71520b4b880927ebfdeb23ed0243bd23cd2e3\"},\n    {\"name\":\"Blockhead #491\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/491\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6023a56d1a5a5de80000001506c89b71e95e4d75583c32c765c4713016710feb\"},\n    {\"name\":\"Blockhead #442\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/442\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x693eb9d1ad90a7220000009017b8977d0018d75ec8d46f2932a9039ce394d2fc\"},\n    {\"name\":\"Blockhead #695\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/695\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2805ea1b44c7a63000000f31df0b6014c2c70b3626e090e4d42087d992f4525\"},\n    {\"name\":\"Blockhead #366\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/366\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe6b3040b6faa6add000000231554b290dda2ee03dd77dc277b03ec92be33c9c3\"},\n    {\"name\":\"Blockhead #1242\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1242\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x43dd8bb54e3efa280000008477160ed6906de0e6d13e19b95a3b642a0d82d11a\"},\n    {\"name\":\"Blockhead #1700\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1700\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4240dc10e070e77a000000ee2d27cfd66c2fb8d5ba6fd79e000f561f74d54cb2\"},\n    {\"name\":\"Blockhead #65\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/65\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x988e4474d68151fe00000054ab2245a38a9496b2391f9c35fe5515d411c62f52\"},\n    {\"name\":\"Blockhead #1401\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1401\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x70971d87350ae8f5000000a02d337d5e17fd44a0465d1460daf333e153a23fad\"},\n    {\"name\":\"Blockhead #1831\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1831\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15ed98a1a9c9b39900000082ef26d2bdfda48e1d0359bddcffb695c9fc615cf6\"},\n    {\"name\":\"Blockhead #2014\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2014\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x48abbebf0c0c398300000091ab121fd8c5a69d5d9f3e432de1e93db3a7208b59\"},\n    {\"name\":\"Blockhead #781\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/781\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c6fe727cbb64c6400000068119c33f862adab92f581157782a0b7616ae370c1\"},\n    {\"name\":\"Blockhead #1998\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1998\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x69f68c40c940f170000000264299a494e129f1be277ee4ed3f7411c71bc5d45d\"},\n    {\"name\":\"Blockhead #40\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/40\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4ebf891a6275ab960000009ae709a718a1df4030da8c2859048b262897abb762\"},\n    {\"name\":\"Blockhead #710\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/710\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x06e25b09d91d59d40000003ed04e28176a873f94904d6185db6393f02ab1f458\"},\n    {\"name\":\"Blockhead #1903\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1903\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf07778acc7827d29000000262e2c3668c7d390bfbcc74b1828603eede5410df9\"},\n    {\"name\":\"Blockhead #1477\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1477\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd0e620738c66a80d000000da406e125bc184478ebdab55c3b43253e596c933e3\"},\n    {\"name\":\"Blockhead #1201\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1201\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xde35fb73b1947102000000eb4879ee9f89b35e426759df5d7fa916ae923ad434\"},\n    {\"name\":\"Blockhead #1819\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1819\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b305e85a8586a8800000020125b8fbb201c5c8308b5a86b6bd49400454b93e9\"},\n    {\"name\":\"Blockhead #5\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/5\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd7b0352757416595000000774fd56c8738b60c3ca698f81ca4cb7c21fb0f65d7\"},\n    {\"name\":\"Blockhead #479\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/479\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfcbb14c865f9319d0000006ac52282a67b3597c750f62ed9d4907ec70694da97\"},\n    {\"name\":\"Blockhead #728\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/728\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb817472f3b2e48970000003a14d7dd779067056a5adfcdfde037311f31f88e87\"},\n    {\"name\":\"Blockhead #1140\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1140\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbf743d33a6eccf31000000340e6c7b0526505df787efd7eac235d0f62065b01e\"},\n    {\"name\":\"Blockhead #1107\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1107\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf35550bbc70a33af000000ef083d16aa373600865aba4d40d99183ea21e69a51\"},\n    {\"name\":\"Blockhead #763\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/763\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe789972af08238750000007b6a5acb0c8c32b6c1fd60a00b3a0bb1907ceb766c\"},\n    {\"name\":\"Blockhead #751\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/751\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f383552243664cc0000005bc817648be5b7d0bbf673cf934d316b80208500bc\"},\n    {\"name\":\"Blockhead #492\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/492\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab38b6d0392f1570000000aa22bf391169494f557038b5b7fcc5c3aa8d94ca56\"},\n    {\"name\":\"Blockhead #1435\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1435\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x534864f7551adacf000000b8381c7d9a2e5c8fe090ebf54c96d359632cb60249\"},\n    {\"name\":\"Blockhead #607\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/607\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd96d31938d8a6bef000000402559e351d7e74e240974b4757d369d5326037bd1\"},\n    {\"name\":\"Blockhead #456\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/456\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2d2a4c587fd53170000001a49fa48d50ae62b64f522de6ed3249a429f276af0\"},\n    {\"name\":\"Blockhead #4\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/4\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbcb679952c9d98a70000005c242b7874a22044a7055d2723e6464254e76e891e\"},\n    {\"name\":\"Blockhead #1829\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1829\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xffde4f188060b7530000005736382d046aad2e17cdb4874c2fec447a7491fa72\"},\n    {\"name\":\"Blockhead #1190\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1190\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf8902979956730ed000000698f4b3ea3d1103059e5bb418255f88ded7b363248\"},\n    {\"name\":\"Blockhead #1949\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1949\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x76ab5d6ce0ef23c1000000417459140428c7d87120b0bbfeffeeafe5daf1607d\"},\n    {\"name\":\"Blockhead #328\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/328\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8158eb00cdd57a8d000000ea152fda69f74c989c6cf18c4726ab7e981436b407\"},\n    {\"name\":\"Blockhead #1173\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1173\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b2da405ab0fc3ad000000d77f1cd68abceefafcccf2ba4bb7ab672c192b3eca\"},\n    {\"name\":\"Blockhead #1953\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1953\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e5f1060d1a3d96e000000155199dd93f9a0d97829869562b36b9cf98b723fec\"},\n    {\"name\":\"Blockhead #171\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/171\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0afcf7ac92262484000000f49a00fff0a4e4a519971c8c4829738aa834556810\"},\n    {\"name\":\"Blockhead #465\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/465\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x35a48a00c683f7950000004d87fdbf44b62c430ad4e7704d1ef29923ff5cd64f\"},\n    {\"name\":\"Blockhead #1373\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1373\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc3b1c37f5cdb628d000000c7cc19688f1a33cb22ae8722430939138a58774948\"},\n    {\"name\":\"Blockhead #1541\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1541\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x125602aed34c747f00000063997e0bdc6c59a311b8b60332ae1c55c812ce2617\"},\n    {\"name\":\"Blockhead #1666\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1666\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0f9013cd4ad95770000007915371287bd46ea77f84fd22f972c0f0eeae5d657\"},\n    {\"name\":\"Blockhead #75\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/75\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8969b0b7bdfa4bee00000064729324b244394df9a22c3f3cc378f11ed681ba9f\"},\n    {\"name\":\"Blockhead #1210\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1210\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa296a46220397834000000a01469461ce361b15176747b606ac6180406b846d7\"},\n    {\"name\":\"Blockhead #512\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/512\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf247da262e29e00000000da4a806b9d7dc2f90b8175682dcab8183c2b83e2f3\"},\n    {\"name\":\"Blockhead #1500\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1500\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbed1f2364fbf6b00000000d313f8166967fb0b5cdc4ed169247344fc33cfa1a4\"},\n    {\"name\":\"Blockhead #523\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/523\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x990056d9f0cde15c000000502424ace464ae0d36aa33bc4654a65e8a0cbba698\"},\n    {\"name\":\"Blockhead #232\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/232\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc26bf6b32daef7550000007c7aed6444f99e2d06ff1235548d6ea7b7eb62c790\"},\n    {\"name\":\"Blockhead #1408\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1408\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb210fb0176713450000003ffe1f7fcafbba111533ae3037ffac12085d9ecac2\"},\n    {\"name\":\"Blockhead #2045\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2045\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0748f1dbae10732f0000003a70213bd411c5d54e231bfe707d5cdf9e6c1c331a\"},\n    {\"name\":\"Blockhead #1227\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1227\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf97a5fe2b93a1562000000427b499d607a5f81533ca74ccd811e00bb4dd1eef1\"},\n    {\"name\":\"Blockhead #1669\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1669\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x56bcd7174f269ef00000003e8b1c51a31938ba2131f4a1c7ca1b886af5f4882a\"},\n    {\"name\":\"Blockhead #996\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/996\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0a29ea8b5b0a36b100000030919294e5809562e2c0067c05f892a6608cb765c2\"},\n    {\"name\":\"Blockhead #1276\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1276\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5de3e619bc46d0040000005ccb226fd99a1508ed6b6458d3c6a234791432381a\"},\n    {\"name\":\"Blockhead #1646\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1646\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9241e6f5a60520b3000000ccb309dc70ba5bf038368ab134c28b97ca9eaf8509\"},\n    {\"name\":\"Blockhead #961\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/961\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8cf2e06bdf652301000000ed3412c1b1680fc5de46e6609f607f47489b0c95a9\"},\n    {\"name\":\"Blockhead #1086\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1086\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb6f79d68b14b7a9f0000007533589062eae8e58d2b3127a2f9f1db6c717cae30\"},\n    {\"name\":\"Blockhead #872\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/872\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf70d65b83220d8c500000029e226a59620c4f7d75ff733276e59e1c3b11f70ad\"},\n    {\"name\":\"Blockhead #252\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/252\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x80dbd55a5917643d000000896518cda3d55b268561d52ebd0e298e6fbc0294bd\"},\n    {\"name\":\"Blockhead #1795\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1795\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x82b6241394d1fc5d000000aae60b1983b7870fe69b1369c01c7b78230301331f\"},\n    {\"name\":\"Blockhead #1432\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1432\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x42612880a7de4b7c00000029e6510804d1310901bd2722c850f727d3af131d2c\"},\n    {\"name\":\"Blockhead #1840\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1840\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x738dbd1bd6ef472000000015a94b087cdc870413610790a5d3229988cf92be86\"},\n    {\"name\":\"Blockhead #380\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/380\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x92f169d402568055000000d5af154da76cbb40e4c05174994e4268eddd76d8ef\"},\n    {\"name\":\"Blockhead #1629\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1629\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x30038a673fc28279000000cb453438acd03999c70fcf1c8e4c0e9bedc992e6ec\"},\n    {\"name\":\"Blockhead #451\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/451\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd8eb19ffb11d46a20000009b5041ef92e0bab378bcfb52dfdf81af8fa3d9aba6\"},\n    {\"name\":\"Blockhead #1947\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1947\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5b9037c65760ba4b000000634068cae0182de63840fafe6e9e0751e7fbf22587\"},\n    {\"name\":\"Blockhead #898\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/898\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59af20e323ad14ec0000006997ba8a8f81f2df4379b85aeecc5dea8e070155d8\"},\n    {\"name\":\"Blockhead #865\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/865\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x904727a9b40d474200000075477711d500a2bba10c74c2e0b15484500a0e8e68\"},\n    {\"name\":\"Blockhead #1796\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1796\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xea0a9e6453a995610000000e1462709d7008403f886a5d628f84eb611d0afece\"},\n    {\"name\":\"Blockhead #211\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/211\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x07ad0520d33c0df00000003872c9fb13264309741b5d823f9b27996e5c94ccb8\"},\n    {\"name\":\"Blockhead #757\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/757\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5cb653017935112e000000481bf948b95e2e667bdd0731e451ce51a0af4e679b\"},\n    {\"name\":\"Blockhead #1550\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1550\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbecc9a23d8b6c1e40000006286413bd292c4de79c8c3d18484f5a33c1fd79291\"},\n    {\"name\":\"Blockhead #1378\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1378\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac1767781900b2150000008d4dc51892e3e436884b63ac14b382a89367e23c0d\"},\n    {\"name\":\"Blockhead #1571\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1571\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd5fc3d0a55c3ad4d000000c31e7ee81a086b9fc160771c30b94741cf97a2ef4e\"},\n    {\"name\":\"Blockhead #1072\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1072\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5b2dda9d2665565b00000057a402ecdd34208511d4fdc67caa6638efe272c22f\"},\n    {\"name\":\"Blockhead #877\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/877\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdd6a97f55e70966c000000444d929fd240605a6a298537cda0dbaf888aad5ff5\"},\n    {\"name\":\"Blockhead #1580\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1580\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x07200964398caaec000000629f63adda5d5b5f00d4e00fef205add44d9ce01f7\"},\n    {\"name\":\"Blockhead #1547\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1547\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x640abfcba754e287000000573657cf0937aecab79aa3f651d50fa12eb6d15bc9\"},\n    {\"name\":\"Blockhead #1184\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1184\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaa1090316a86105a00000023a62470b34f78eaa6fd43bdbe76291fca542354e6\"},\n    {\"name\":\"Blockhead #1368\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1368\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x07300f1762dd7e2d000000c56c03aee26b7afbc2fd5d928f863a5b587b0277e4\"},\n    {\"name\":\"Blockhead #848\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/848\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4558e852c9782a9900000012ad2f161a23e85450fedd97f2a3fe36da0e954d26\"},\n    {\"name\":\"Blockhead #194\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/194\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5b784170628a3d56000000610b3c718ead29d2a2c89c9a38aa659c76f9d0283c\"},\n    {\"name\":\"Blockhead #587\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/587\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d97574c9c22e98e00000011c6cd18600f7b1a413c78cb6ef4ca615ed9eeaf49\"},\n    {\"name\":\"Blockhead #964\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/964\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d776cfd6cbaeaaa000000549d169ccbd0e4250798fd0e40ce165e18ef937e45\"},\n    {\"name\":\"Blockhead #1752\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1752\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb65bed3d5acdb8d90000007d173f82a9d8127b6cad8744c31380e6a169973bcf\"},\n    {\"name\":\"Blockhead #891\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/891\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xff268e2f19807a2f00000045d61ae2f12af704d4480dbcad5ff0c103a4374d25\"},\n    {\"name\":\"Blockhead #1611\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1611\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd4370182a1b3a86a000000436f635d5f4ba094281d854c55931234ea41f6254c\"},\n    {\"name\":\"Blockhead #27\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/27\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x303b1a4d18145c8b00000020d6f58915b0fac77b3bd81d99f80928a6e200656d\"},\n    {\"name\":\"Blockhead #577\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/577\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5160631bb3c324780000001d861007ae9524f888968840bb6545e3249aa59ae5\"},\n    {\"name\":\"Blockhead #634\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/634\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x05756b95fe92fd46000000e578235de7c91ec6fb6b959565fba7458086261860\"},\n    {\"name\":\"Blockhead #1985\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1985\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba45c7affca4e923000000d578147bdaa3af52b023fa96af401c9863b48dba59\"},\n    {\"name\":\"Blockhead #1492\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1492\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4fb8ba7ebae24e3900000038419d8559e4870f30018ebb9b4119693dbf64d1c4\"},\n    {\"name\":\"Blockhead #410\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/410\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x92ad0067481aaed3000000a48d14cea0e210c15916d14109c5bed7dcf94b7fbe\"},\n    {\"name\":\"Blockhead #1306\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1306\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x76b3f64aa4a38937000000236559f24c112a26d005342b2f4c7f2289d5dbec2c\"},\n    {\"name\":\"Blockhead #1637\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1637\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x53eb18a389353fd00000000c6b326181338f77bf1f1baf0f5b5b5b2e9fb17f36\"},\n    {\"name\":\"Blockhead #1425\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1425\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9d908a29ee92387b00000038132a6ba6b9a2037e58b8cf5aac5003fcf6f41565\"},\n    {\"name\":\"Blockhead #1600\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1600\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71680bcafe30c9320000009b073b60c20328393cba4ae867fa83cee7bc2c6a6d\"},\n    {\"name\":\"Blockhead #1366\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1366\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa67cd04f071f27810000005436ac0e1a06c3a70c2a942df711d8bd7ff8ca2126\"},\n    {\"name\":\"Blockhead #853\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/853\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0f4e4a26c5f63ed60000008d1adcc070ea1f2029c8ce4887c43f92cd9322fcf6\"},\n    {\"name\":\"Blockhead #1466\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1466\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb862934c5804797000000b8d9351c5ce9e996780cacd11f290fc16bfd31cd2f\"},\n    {\"name\":\"Blockhead #2027\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2027\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa15eeca302849b7600000092088414bf73d2f132e7983f5c5a43e44660592a1d\"},\n    {\"name\":\"Blockhead #1370\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1370\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3d83a816dbe80348000000402f3f0fbe4db5a24c6961efda70312d176e2a7981\"},\n    {\"name\":\"Blockhead #657\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/657\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb4afe82d0c3b775b00000081310bcec6391cc98f8ed80a45f10ffeabc2f1c8e7\"},\n    {\"name\":\"Blockhead #783\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/783\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc162f991d1c1dcaf00000068d659b9e86b401740beca323afc698688bfb271b1\"},\n    {\"name\":\"Blockhead #1443\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1443\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8fabab3cbc04898c000000491d2f73cc926dcb9012a03798b8f7885d21293642\"},\n    {\"name\":\"Blockhead #1856\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1856\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0f953d9493197cc0000000ebe5ead61929b699c143eaabd36491d2c3ede53ab\"},\n    {\"name\":\"Blockhead #1272\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1272\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74607449480d1de1000000ab43ed65a35d346e6fa7fcbd45ea8f42728ac3ae0b\"},\n    {\"name\":\"Blockhead #2055\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2055\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa9158975067c1ae100000037512b3afa474c0b52bf5bce831733f80f5e459fc6\"},\n    {\"name\":\"Blockhead #650\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/650\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x255c21e61a13cfaf00000037be08cea8a8631a67dc0f671bd73e42a41062bfa5\"},\n    {\"name\":\"Blockhead #529\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/529\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d8656c5f1f152b100000093a90ee9c22dca27d46177bb4537d06d6789e284b3\"},\n    {\"name\":\"Blockhead #1889\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1889\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88813911566dce03000000d41f4c24e9811d16d78794ea425a1eb1771e793ab0\"},\n    {\"name\":\"Blockhead #1166\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1166\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x022b2e58d4513d220000006657c847cd9b5524fb19bf6a1c05455f50d68f591c\"},\n    {\"name\":\"Blockhead #269\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/269\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd89554c3f0ab2eb000000ede82f62168b397dc220b49389e08389eb59a8c577\"},\n    {\"name\":\"Blockhead #2049\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2049\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x100455d90cf2c93e000000161a405a93f8dd15eae0c5435741782e4d48656aab\"},\n    {\"name\":\"Blockhead #179\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/179\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b9f9535210c11740000005008b08765042494cc5f31cf758ceaa38497d5994f\"},\n    {\"name\":\"Blockhead #369\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/369\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x49324f9c1f4ee243000000d34a582ad41a3f4e5ea040a616a27d40cd7740ee65\"},\n    {\"name\":\"Blockhead #1967\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1967\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x71e86de4a67cb4b9000000504e841afcac8ed37e1ca266ad35445bf20150de1b\"},\n    {\"name\":\"Blockhead #119\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/119\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb4ed15c71ee264e3000000a50981c94cdb497df667478edcd4b83dee7154760e\"},\n    {\"name\":\"Blockhead #614\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/614\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x23dce86fcf4201fc0000006971a7ecd81cd5153ebdfc002312b9c6f095e8deb5\"},\n    {\"name\":\"Blockhead #825\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/825\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x08ff290372a78bca000000e51d374ba0b1a996f8fc617863b25b2f3fd5df1ff6\"},\n    {\"name\":\"Blockhead #1335\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1335\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b1c87cfc67f59b30000004617d419f11db47c5e556f4a5bea717b56634114e1\"},\n    {\"name\":\"Blockhead #541\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/541\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81363580dd106f5200000097c98c0f1748a791aa91f551d11855b939f7fb2bf2\"},\n    {\"name\":\"Blockhead #893\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/893\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd2a176f848691fa7000000e1185b46aa9c838fb272aa713ee7b348481275a7d2\"},\n    {\"name\":\"Blockhead #93\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/93\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x64fef4032e306a990000003c40483a71aa5924f5f1bb78ae9fb966dbc9950d32\"},\n    {\"name\":\"Blockhead #1663\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1663\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9fa790dfb59daee2000000a3ce223889044fbb36077b04bc65ea017507e1574f\"},\n    {\"name\":\"Blockhead #1205\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1205\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0ac9450a2138f79a000000945e1c8fe7e65307e06df78ad98b09abf5f1f3299c\"},\n    {\"name\":\"Blockhead #1808\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1808\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x115e5854ed79f4df000000c57735177d13ae2017274cac1a9f5d9215f4ba1da9\"},\n    {\"name\":\"Blockhead #1862\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1862\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x717791fe60b06eff00000052354ad71ad839ee29b45ced8d3c6eeb413c71c327\"},\n    {\"name\":\"Blockhead #930\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/930\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f56427837b57ff5000000363f98236c772ecff88c523cfc108c8cca5135a855\"},\n    {\"name\":\"Blockhead #1743\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1743\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaa462046f7b9717a00000024183035aed5da851670540ba3ff0f3dc939fa3094\"},\n    {\"name\":\"Blockhead #1134\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1134\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc085373faf411625000000ef7306b683031e6b46dc51725b6af3808dda5791be\"},\n    {\"name\":\"Blockhead #466\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/466\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6947c2f419e9c8dc0000001a7652e67ca7082e81b35ab15e54f067caaa8cc5d8\"},\n    {\"name\":\"Blockhead #707\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/707\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74611fdc2ad351d20000002757636a07077aa72a92bee041caf57bfb5212b95d\"},\n    {\"name\":\"Blockhead #393\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/393\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xacbe6bb69d1995cb000000873bea08536145f6824eeb97bb7322f748e054fee2\"},\n    {\"name\":\"Blockhead #1411\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1411\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xedf49a3ea81fb0f8000000cce5160df0a56d781b4e59fa77a4e27fc2221d02d4\"},\n    {\"name\":\"Blockhead #38\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/38\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb6fd2d2b56609a610000002921c30fd4a51a6647949300ffdafed9215209af65\"},\n    {\"name\":\"Blockhead #937\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/937\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6b73d4bc230a4d150000002624e49279f4de5e5191a1659ee0ab9cb175f071e6\"},\n    {\"name\":\"Blockhead #1022\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1022\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x537ffe2823732cca0000002b28c59b0496a432e9608190483b4c59994174cf5f\"},\n    {\"name\":\"Blockhead #1739\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1739\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c3cff9605e125ed0000003342d9b0abef2ef6f0212c8e39aa5cea211014dffb\"},\n    {\"name\":\"Blockhead #1243\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1243\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd79e635244c85d150000008242abc5c9e2b9f86186da1d242ea4937407e3b77c\"},\n    {\"name\":\"Blockhead #1754\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1754\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc6b2ee027ea2994f00000036620a5ec411723db083de2f30261680c7de8d71fc\"},\n    {\"name\":\"Blockhead #717\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/717\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe13161605639959a000000344d7ec592c6fad9685df01e77d652c19368c322ba\"},\n    {\"name\":\"Blockhead #1487\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1487\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7179985c00e00b70000006ccc2085a56d88cde597ac4230d513a9e67cecf958\"},\n    {\"name\":\"Blockhead #353\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/353\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc8d3a3f7370f14df000000883f0bb4e9e57c37179fcb5c2747a415e508b6fde1\"},\n    {\"name\":\"Blockhead #955\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/955\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf9ccc1d63e1e9050000008444a27af3cf3ec61c59978a3dd90e01e1371bcec9\"},\n    {\"name\":\"Blockhead #1760\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1760\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa7e4a05c0b2d1b6f0000004861098fdc862baf5c4efc26dee080afbf0aae49f5\"},\n    {\"name\":\"Blockhead #1632\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1632\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c57fa282b826ab1000000379a10e69c2eae930286761e6378c077b0af862c41\"},\n    {\"name\":\"Blockhead #662\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/662\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfd94f3394906037e000000a7bc0f9eb695a223d580d5f8fcdaee1169e07a7407\"},\n    {\"name\":\"Blockhead #969\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/969\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x94c33094dabb90ed0000005d215af8d9874e06e3e4695ddc899030b342956a5f\"},\n    {\"name\":\"Blockhead #536\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/536\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e4b1dfe86188c5c00000093f74a59119192897bb483bea33c73b37572bcc6c3\"},\n    {\"name\":\"Blockhead #151\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/151\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec3e3f61a61a4e3f0000001b092a76da43ff7eb9d2b8aca3282cdffa6b07082a\"},\n    {\"name\":\"Blockhead #2009\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2009\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x12ce74b325887647000000647dd34ed1eafed9b658b9a09e571155561178b499\"},\n    {\"name\":\"Blockhead #1915\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1915\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x04fa6d1d5cd1890e0000002208f01ac84ab51664527904d92d1554c284c50097\"},\n    {\"name\":\"Blockhead #1624\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1624\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b2ba28dbeed53270000000c692c541ff0020518dfd10b4a5b1d727c51d73a7e\"},\n    {\"name\":\"Blockhead #1402\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1402\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe1a12da700e371550000005a1f7663bdaa3d0c2ce5306d4e9b836051b667714b\"},\n    {\"name\":\"Blockhead #95\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/95\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc07d677f3dc86990000000eb0df1c70221e4cac51e47f3ceb588c77784ddf4ca\"},\n    {\"name\":\"Blockhead #484\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/484\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x303383d6d1796d39000000f309d1c9829a266e55798d14e1510b59f318c645dc\"},\n    {\"name\":\"Blockhead #1619\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1619\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa100639c8d25299300000062ea2ccaf0d1b8c651017ce1dcfe2b5454bae8ff8a\"},\n    {\"name\":\"Blockhead #895\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/895\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b1942200b0b248f0000002774c2eb5b63dab1e23484cf47d20811d533ac6941\"},\n    {\"name\":\"Blockhead #1935\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1935\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8758033495e6c45400000034122e22999996c7a5599b48645769ac395a4921a9\"},\n    {\"name\":\"Blockhead #940\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/940\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x87cca8511add0bec0000004ad24b170702fab3127a2a736afdeb71aab56ca8d6\"},\n    {\"name\":\"Blockhead #862\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/862\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x221e994e9ae2c9540000005251fffcb4463ad53b86e03da974eed09cc88d3d40\"},\n    {\"name\":\"Blockhead #843\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/843\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe18756647c3354a5000000d94d8339cd2e70f8182b802567347ad205a1b9264a\"},\n    {\"name\":\"Blockhead #2020\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2020\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9c1ce141f0891aa60000007fb415788cf3ebe37108cb90ce3c0ad12703c5fb99\"},\n    {\"name\":\"Blockhead #1635\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1635\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6b5e3303548bc6d20000004e29514168cf35b993b0a201f7cfcf514cddcd9de2\"},\n    {\"name\":\"Blockhead #550\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/550\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66c058eabd915a7d0000002b7f8018232bec7aa9dea0e7b148dd2e86a2756e25\"},\n    {\"name\":\"Blockhead #806\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/806\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x94c4c12507c7baf80000004e5a48cb529155108569ff1de586ed801b6d82168d\"},\n    {\"name\":\"Blockhead #1907\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1907\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4fd413d49c9eafa9000000865b29cf981c38e40d82e350179de1294adfaf1ab7\"},\n    {\"name\":\"Blockhead #1434\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1434\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25c7d1969483fc0b000000d93f664f4bcdecee05142338b2da86d5219476cebb\"},\n    {\"name\":\"Blockhead #88\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/88\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x53916062eeecacd6000000a532489c76ebc8a4d385411739c4929455f3168cc2\"},\n    {\"name\":\"Blockhead #1621\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1621\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0c40040b390a2d58000000784c7c7af138c5169307cd90132e70081fba4872de\"},\n    {\"name\":\"Blockhead #392\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/392\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8bebe3f96344fd4c0000001d783e1cbe3b1ff08287fed41e88a71cdd4cf04ab6\"},\n    {\"name\":\"Blockhead #798\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/798\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc21abf4f904628810000003560fc184cc7b1bdd7985ad3041dfe687715cfd857\"},\n    {\"name\":\"Blockhead #109\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/109\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Zombie\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x891f637130f1b79c000000eda1efee48831061f3800182e79924eb8fb3050206\"},\n    {\"name\":\"Blockhead #716\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/716\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd1591085d2835809000000a00d4ea3b69ac52d2c0a5b28031c2e2305addc9dcc\"},\n    {\"name\":\"Blockhead #1105\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1105\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8e003f5700ce18f000000762c90200851281043bf110d2ee0039144db307fb9\"},\n    {\"name\":\"Blockhead #1579\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1579\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfe375cd15b807a160000005afa21ded337c1a9566016fa3161a243569628910b\"},\n    {\"name\":\"Blockhead #633\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/633\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0ca0a29256d2f3a50000005ec839e857df0655b33511dffb1526abf1a01613fc\"},\n    {\"name\":\"Blockhead #556\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/556\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5843717788fcd136000000ab2a2739e2d9a189d13868a404ecba4d8e36734210\"},\n    {\"name\":\"Blockhead #1955\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1955\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe15680402c785ab300000033f024c5ac7179c28d33cb44128101ef983658d8f7\"},\n    {\"name\":\"Blockhead #514\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/514\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1006a27a00fdaf8d000000fbf12936c8d8ecc7ff3c4567699f83d2a3cd29f6d1\"},\n    {\"name\":\"Blockhead #1275\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1275\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9edbbb5da69407550000003814bbaabfc28994cc22c9a11eabd8875e9a20380f\"},\n    {\"name\":\"Blockhead #139\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/139\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xea8892a262480c80000000cd5522cad3067190fa1be04decc3c53862013d02f8\"},\n    {\"name\":\"Blockhead #1731\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1731\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1dc7d901cdd9664f0000006f6d39bf5b348356152ab936491426a974fcce28d9\"},\n    {\"name\":\"Blockhead #379\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/379\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb33d4a1fec74b455000000a9d21ca9a22989f57e74f922adea59848230a301ce\"},\n    {\"name\":\"Blockhead #613\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/613\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeccb78b1b71c00d10000006d49b166e90d13b55adccf224d9ecce6d83f492d9d\"},\n    {\"name\":\"Blockhead #1704\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1704\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x011c7849c33f209d0000001f16c165a4ddd7c27b5bdebd4156811e9ef69e6552\"},\n    {\"name\":\"Blockhead #1386\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1386\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x286b593a598028a7000000428a7f1d603528dc86d9288817c99747f8f6e798dc\"},\n    {\"name\":\"Blockhead #743\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/743\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x974ac8a3b067bc230000000db041424e5376f61dcd240f3356e2ceaf4905759f\"},\n    {\"name\":\"Blockhead #84\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/84\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9147beb094541de10000008a2134588bae2cd7c08d4366b75be9b4477157f457\"},\n    {\"name\":\"Blockhead #1494\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1494\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x152011b4b80e924b00000063cee743890ab69b9af1780e32281af91a4aa90645\"},\n    {\"name\":\"Blockhead #1012\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1012\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x17a19e655afe32c10000002113397beb4b5c60f2d2577682e4cb5d7cb1e02687\"},\n    {\"name\":\"Blockhead #1652\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1652\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ef82854f5c49b9e000000c95aba0c5a2755dc1b838f6f3881ac2aa09272dc0d\"},\n    {\"name\":\"Blockhead #209\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/209\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x251534313853f05300000016bbc20b539aa0f61af37df096dff9a0ea4692fcae\"},\n    {\"name\":\"Blockhead #336\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/336\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4bbdac0ed47b95f90000004df282b11172fa370908c804d33600e795d025bb6d\"},\n    {\"name\":\"Blockhead #2029\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2029\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x21b80e5d57ed33740000005fb117399a5ed07e822cadc579363919c24cd87d82\"},\n    {\"name\":\"Blockhead #1644\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1644\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x09291dc21cea7373000000206bf41d6b491affedf0b7af9ff0bc9a253a37eb57\"},\n    {\"name\":\"Blockhead #635\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/635\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x39828f7600e1f3d40000001b107273bde6305e7d60efb14df092e3651be32428\"},\n    {\"name\":\"Blockhead #1151\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1151\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe7815d3cd0ba61ee0000001a37e3851be4e373eb4148eae5b635dd50615f0699\"},\n    {\"name\":\"Blockhead #130\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/130\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd236c7e43a6d2d9f0000006119ea59a07f3a0b47ee32a95919e73ea98e4ee500\"},\n    {\"name\":\"Blockhead #136\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/136\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x14d4ee46fb4ec00c0000008f557fac0cfc872fc94583efd35ff373bb5f30aeac\"},\n    {\"name\":\"Blockhead #612\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/612\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1f7b3eb7a4a7f8db000000e71984deb688272ce8a511de0b491977d8a1524d14\"},\n    {\"name\":\"Blockhead #1438\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1438\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe80a63c559ccba49000000b67e19fe92f782ee73e2e009f28af86c5768c7288d\"},\n    {\"name\":\"Blockhead #589\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/589\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3ce305410748a79000000f3fb0e1ff30a752cae7c5048be2bba3975c0977ffb\"},\n    {\"name\":\"Blockhead #756\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/756\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74aa864530871aa100000096780b12ab1d4bda4da2282e46d3062608176294b6\"},\n    {\"name\":\"Blockhead #1855\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1855\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb7bc914ddda4c9800000005b0c2b9288ab52fca15d5570816569d90571ec42f1\"},\n    {\"name\":\"Blockhead #668\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/668\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x221a2fd1d0fc60a2000000376867dc5466aab159c1a2b58d56ec9816702b00ed\"},\n    {\"name\":\"Blockhead #987\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/987\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x34b4abe460de15040000006879eb24f82cad617657d6a9d18b29805a83c669e5\"},\n    {\"name\":\"Blockhead #36\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/36\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b68d311bf4f35b3000000545d43970485c004f566f7a9269b4b90326bac43ff\"},\n    {\"name\":\"Blockhead #1636\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1636\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Electronic\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e9b70e20d3d4de3000000e6ce02e7e1f43cbf6e6dc2f614d9fcf99f0ea94444\"},\n    {\"name\":\"Blockhead #735\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/735\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4efd65ac8a23b3e7000000f74aeab2e94945ffa4c47d5ff81bcec228c566b100\"},\n    {\"name\":\"Blockhead #377\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/377\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x37545d7c889b831c000000e5366176006e8285ff269b1f2da4d70bee179c113d\"},\n    {\"name\":\"Blockhead #1554\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1554\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x965a1a3fd4263ea3000000bf4058c680d03adc96f0db970b4e6132d620b2af4d\"},\n    {\"name\":\"Blockhead #1860\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1860\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa62ebb3f1f395c5d000000108b0ce6ce61eff9fbe0295d5b694108f3fc5f9130\"},\n    {\"name\":\"Blockhead #452\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/452\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x06d6543cba5df7310000005031e7a24b6afb67eed31f534a91277289266a1060\"},\n    {\"name\":\"Blockhead #1815\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1815\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x189ea6909f43d2aa000000af1545828e37be48fe8108d34a0dbd23cbe411d2b9\"},\n    {\"name\":\"Blockhead #2048\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2048\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xafec7055067b77080000004ed2193ed591ed5133a813369596c90a03c10a0de8\"},\n    {\"name\":\"Blockhead #2025\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2025\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfd1f019029c8a44f0000008f331bbdf8469b8da2c163c3dc7ce86aa51dabc21a\"},\n    {\"name\":\"Blockhead #1288\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1288\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xccfb3ff3f326b6710000003713d1b7b5c1584da8f526a83f78b1611e74999682\"},\n    {\"name\":\"Blockhead #784\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/784\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x89a07a30c161d16f0000001c67490a9e9d9def2c9481a5b2826aa614f450208a\"},\n    {\"name\":\"Blockhead #1699\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1699\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x643867a83288d73a00000046f9687e58bdecb91dd164dd806e0350b487af26cd\"},\n    {\"name\":\"Blockhead #402\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/402\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xae13b62f406da4d5000000e4b018f3c4bfe050e567cf852ccb68b04c47728b95\"},\n    {\"name\":\"Blockhead #499\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/499\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb786385b9550a7fb000000c210c1d8226ed79f6a75a973413f3d256599d3c19e\"},\n    {\"name\":\"Blockhead #1109\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1109\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e70ac551be4b01c0000009d1dc407a5b87851103e2580885ce33a0b64dd2359\"},\n    {\"name\":\"Blockhead #1922\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1922\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3dbf7a92e95c29bb0000007d741b57d7d6ab4f7be515d70220eb63af4331c0cd\"},\n    {\"name\":\"Blockhead #1816\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1816\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0ee10ed9202fde56000000dacb2e0c4de91d5c1e04279f6962cda44c2ce6ec29\"},\n    {\"name\":\"Blockhead #801\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/801\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x959fa124701b1864000000eb330a4c99ccce888faa5f224402198b3b69af2076\"},\n    {\"name\":\"Blockhead #1346\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1346\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88393f679e599673000000c9c3292ece22893ddc4ed720a4b7f91ca1afa351a9\"},\n    {\"name\":\"Blockhead #1783\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1783\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7264a4003340c602000000f7671acaab6ccb98d21987aff5ade18eec401bab23\"},\n    {\"name\":\"Blockhead #758\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/758\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e354c38a1a0b522000000c87c5ae55c52921584a58dd74ee455204fa7e4ae3c\"},\n    {\"name\":\"Blockhead #1391\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1391\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x594381266b89c74d0000000d1bb9a1f17e1f2e52531cfbb6520e844921bba1fe\"},\n    {\"name\":\"Blockhead #1238\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1238\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0d29737ef63d433d00000024159b3c86998d3a11ab9b2c98546da0271dadc2b7\"},\n    {\"name\":\"Blockhead #1560\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1560\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x221df355449feb2a0000007e42462fe1e73fc7316affed8d39c0b97ced1e5a41\"},\n    {\"name\":\"Blockhead #1764\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1764\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6cc53d3de71ffa8400000019c84a714bb6eb9a0bf83e1ee0279f51c4e79b7066\"},\n    {\"name\":\"Blockhead #539\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/539\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf090d99e0357bb630000000ce33182825a5dc08f934107f0918865cd9a779038\"},\n    {\"name\":\"Blockhead #1809\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1809\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe55110ccde86f2af000000ea232e9c22f0a1ebba01f150e2fde166a0e4abb0ff\"},\n    {\"name\":\"Blockhead #1737\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1737\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xadd21355b0ca3732000000c9f80afa8fefd5db7f37cc28a0c374b6612583ce88\"},\n    {\"name\":\"Blockhead #398\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/398\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbbd09f0710eea1e4000000b723c0756231d6ee9b9c9f1a6c27e2cbb09ed053f9\"},\n    {\"name\":\"Blockhead #567\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/567\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e66edd599f675b7000000ca7559241fcf8fb9c60717dc995f4165fdf2aec336\"},\n    {\"name\":\"Blockhead #1991\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1991\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdf5c202ffaa28d2b0000006371c2439bfd8602fbea1ac992cadcd8fcfa659862\"},\n    {\"name\":\"Blockhead #1939\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1939\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb839205ba710c626000000117761ef63f9f06f416cee61f55dbf20aebb0fa75e\"},\n    {\"name\":\"Blockhead #218\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/218\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x95a95a7866595ec6000000208fba1900a2bfad121772e75ddd7b7e08f154521a\"},\n    {\"name\":\"Blockhead #915\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/915\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5bda91853962a1d100000027bf8e147f2480742b790b278809c2bd9a2e48b51a\"},\n    {\"name\":\"Blockhead #1418\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1418\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e9c76ce6e1d37310000009336f32118d82e847b60c5cdff48d91f9b98d64c3b\"},\n    {\"name\":\"Blockhead #623\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/623\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6e1c87efc9ae2f61000000222fa67e6abca4d416b227fe19932c9b349fec6870\"},\n    {\"name\":\"Blockhead #374\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/374\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62da29fb1034db660000001ff824c4face24e93fcc02ad08e06b108877690e8a\"},\n    {\"name\":\"Blockhead #1685\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1685\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe213475e92b7af7d000000401b472bd6776baf124b656aeaf5d2632b121016a9\"},\n    {\"name\":\"Blockhead #1564\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1564\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd5d09acf55f1b44400000084c70d6bbba10f7e68f07d6b333fcbe7943117962f\"},\n    {\"name\":\"Blockhead #1934\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1934\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x964d4e6b0e7d9afa000000f807ec0da7ebf7c1a4d790e3e1c37f1e5def9bd46a\"},\n    {\"name\":\"Blockhead #1638\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1638\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x22e4940041c7fd83000000ab260deab20fddaf9753d2c34354265760fa480f2d\"},\n    {\"name\":\"Blockhead #1102\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1102\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef04ea28ca9353cc000000652dcc61f8b7ca8644e8b429669d463d59b9b20760\"},\n    {\"name\":\"Blockhead #560\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/560\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x21262f8180718cf20000004b54594e7cf623c838e10c89ba6d8f825e2f39b9a0\"},\n    {\"name\":\"Blockhead #1573\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1573\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3f8a2dbb23f7661000000566259e6073f61c827e4d9f496cb256c814a0de457\"},\n    {\"name\":\"Blockhead #52\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/52\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9a0f9b83c70383f200000062c96ccac4813bf1f17b51d61560d9d8a2b0a1b456\"},\n    {\"name\":\"Blockhead #2039\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2039\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf625615bbb4d3197000000190cdbed9df046cd5121407b03b09c9520ee558c9e\"},\n    {\"name\":\"Blockhead #1634\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1634\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4da4ff286db8c8e2000000ef7007cca4e88e0d9ba3806fa13dcc69a5d1e3a2ee\"},\n    {\"name\":\"Blockhead #791\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/791\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x765cb301ddc00538000000c44f2b49e5dfed39666fe4debfb18678ee699587a4\"},\n    {\"name\":\"Blockhead #1329\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1329\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa05dd4b48e1e7a92000000f5e31126a6a0c2a5d6e896de8f7eb5c6b7b382cd14\"},\n    {\"name\":\"Blockhead #1528\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1528\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xad3821596f57b749000000649475a3f3aaa02cba83ca11e2198b8347e5bada25\"},\n    {\"name\":\"Blockhead #483\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/483\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x16ad7272a7073e49000000522a848601c1b92d42040091cb4555f41227698fec\"},\n    {\"name\":\"Blockhead #1493\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1493\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f0108639d958c8900000061269b6179e01d5b71eef29ffd4b75ff5735210e88\"},\n    {\"name\":\"Blockhead #516\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/516\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x92d52926790234a3000000ec15408187a68993897dc317e8c2a0acbc6a297381\"},\n    {\"name\":\"Blockhead #31\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/31\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x594c955dcc7564e4000000676b7a53ae3c5626d07f1a1342f1181b672d619623\"},\n    {\"name\":\"Blockhead #279\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/279\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f639b41e677ec4d000000ce0d9dc764ba26088ba19575703d361f11b033cd17\"},\n    {\"name\":\"Blockhead #1886\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1886\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef3d04ef91eecd9700000036791a71ff489c7eeb95c8b3cd51f313ec06c2b29b\"},\n    {\"name\":\"Blockhead #1718\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1718\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x01573c7da387fcd1000000e8084f938e1a6a2a42253f3a7a9fdec019dff81130\"},\n    {\"name\":\"Blockhead #1814\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1814\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8e53be5cc7eb27d1000000b14c9d12f84dab228c7dca8154a00944e373d13a14\"},\n    {\"name\":\"Blockhead #42\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/42\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf2d7b3a8e0b22f11000000881be810d815972807ca74e9f857f5c86411113ff0\"},\n    {\"name\":\"Blockhead #1785\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1785\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0ad1f5586e3a952c0000004908389ec5c8ee3dfccb6af11481611ae5e16502a0\"},\n    {\"name\":\"Blockhead #580\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/580\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e2aea39ee551c80000000b4ab17cee8ca0ce899118a7e7c4a3df23346b3d7c4\"},\n    {\"name\":\"Blockhead #538\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/538\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x20985c0ef69d785f00000095b34b12517ec0906bffc6bc300d86aafd5c5c9386\"},\n    {\"name\":\"Blockhead #1175\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1175\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3743379ca2a61ad00000014207bb7e813d6bb9ac15f5be4d63e0d1e728e00dd\"},\n    {\"name\":\"Blockhead #569\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/569\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2e897b25fb455fa70000008ab52a1c7a6f714e782ec90270d6f6648006fe7c0a\"},\n    {\"name\":\"Blockhead #818\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/818\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x522548cb9862081600000057274f1a883068e27d2808fd5679920e8dd9ed4147\"},\n    {\"name\":\"Blockhead #147\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/147\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x635ad60e6471ee29000000ae2334596a300dbeaeb152c9c41ebd104f8344f46d\"},\n    {\"name\":\"Blockhead #1419\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1419\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf750631181c0e2090000005f2064f093fb1a20da26184f93b4698f34fa74d9ac\"},\n    {\"name\":\"Blockhead #81\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/81\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc70aeaaed221bb7100000098115d59be37284bc33f14390727eec9b554416593\"},\n    {\"name\":\"Blockhead #1069\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1069\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf9b1f1643279637d000000607446af18345f6ac0780283596c6cb12f566ddbd7\"},\n    {\"name\":\"Blockhead #1028\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1028\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa589fe1abcb68b7a00000081d00fc38352b2d01486a00609f833402d57a22bae\"},\n    {\"name\":\"Blockhead #85\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/85\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x88556625453ebe360000001a9359eb0a1217a02de010d41f24fdf2be5815cdda\"},\n    {\"name\":\"Blockhead #337\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/337\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x89d567c95c3ba41100000013b55bd47de370a771c17b0a04f8bfd36a0c2251f0\"},\n    {\"name\":\"Blockhead #777\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/777\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe8d8411840f330ff0000004a7b8a7d609e475a6f68d6b991bd14119d61387a80\"},\n    {\"name\":\"Blockhead #564\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/564\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd03647224590313700000090255de2190c1c1cfb35cf788ee4b8ff6a0ea1ce49\"},\n    {\"name\":\"Blockhead #1302\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1302\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaebf74aa6d25735d000000f32bcf176471fc426a5edf26fb8a0af42fc7601b5e\"},\n    {\"name\":\"Blockhead #1285\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1285\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66fd6450043e4ae100000053350adefde83045baaa1a8d509150e11de83041cf\"},\n    {\"name\":\"Blockhead #799\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/799\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc65547850c4ff3f70000005a52f5101be5b847692a21b2beba0f08de94ffe722\"},\n    {\"name\":\"Blockhead #1828\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1828\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27c0afa1a1582ccb0000005c9f0de5c57ce2fc358ff9de979eac3f7ada9bbd1b\"},\n    {\"name\":\"Blockhead #642\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/642\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa8d1fb7d9ac83aa80000002b7c78a14b42d75b684ef66d932e562343956caac1\"},\n    {\"name\":\"Blockhead #1589\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1589\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x442238a0c2859b55000000a712dd0e9cae02bc24c7cd3d1819f1d5efd0b81cf4\"},\n    {\"name\":\"Blockhead #1742\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1742\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3996e02e0cc55afa0000003bbb09a6f57632751fe0203f223ba7e5d2ec28d2ae\"},\n    {\"name\":\"Blockhead #675\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/675\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6816c8c93e0dff6c0000008b457f99af084796a50491679905968e9cbdb52890\"},\n    {\"name\":\"Blockhead #696\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/696\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2aeb3ca5832f13d0000005d670ad9ad27857928ae180a2c589c2703e5cfeb03\"},\n    {\"name\":\"Blockhead #1734\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1734\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2c70fa92b20c9b5a000000c450cba4957c3ef4e5836860a540f06053d1e0354d\"},\n    {\"name\":\"Blockhead #1316\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1316\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66e928ce3f226d810000001eb208d292574777de095a1d02b0c8a5f4da0d6afc\"},\n    {\"name\":\"Blockhead #1697\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1697\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x40eef882c2b5bf13000000dd20c9b58f844fcb2ae237c36fa4fa364675a458b4\"},\n    {\"name\":\"Blockhead #1566\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1566\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf2da0cb4174c363a000000ff515750e1a35c997872af0b274b082db02d80b5fa\"},\n    {\"name\":\"Blockhead #769\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/769\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1abf7bdc9c0b945200000063b19d6beb6fd1e77145d1f75744f1b1ec0273d9b9\"},\n    {\"name\":\"Blockhead #583\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/583\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb4f454f5f1fa197500000013923bcc1c10d925d7adbb8da14111f60b9cc00ddb\"},\n    {\"name\":\"Blockhead #102\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/102\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc32005f2b1b0cc120000000cf6e1ee5f43a611bc0d056a5f6144daba8cde197d\"},\n    {\"name\":\"Blockhead #1667\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1667\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xacd02e757d417804000000b80a4fd68588bec22f64356ca7d1d30ca92607a60d\"},\n    {\"name\":\"Blockhead #660\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/660\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x739dd8e981aac5860000005821f94da16d65854fc112d1b3cd6edd0255dd19cf\"},\n    {\"name\":\"Blockhead #667\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/667\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f8319f07450222a000000a719f11ae8bbeac497c4ad617ee09216df24d8b5d1\"},\n    {\"name\":\"Blockhead #158\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/158\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1385765cef8d28be000000bf1eec8fbd105ab9c85deb08699b64ecffe9634e42\"},\n    {\"name\":\"Blockhead #863\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/863\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0985e5f85f9ae43000000409745da51347b64751b249b95bec8ce7355510e23\"},\n    {\"name\":\"Blockhead #689\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/689\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81b2cd8c79bacbbb000000b6b927e29826fc5edcc13a4fd088d94ddf3dcd428d\"},\n    {\"name\":\"Blockhead #1531\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1531\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f0cc4bc799859d10000007f4cb575effb5d8815e03e691ec04ac8ab9592a389\"},\n    {\"name\":\"Blockhead #1941\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1941\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6aa63353e248bf0200000014e20b4dd3a52f8893bf601501d6fe390d874d85a6\"},\n    {\"name\":\"Blockhead #1884\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1884\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x86dd70863e544a59000000e9fb5b19085f646f408aeb3f982370eb0a0ce3a3ba\"},\n    {\"name\":\"Blockhead #327\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/327\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b27322ae1da8d5b000000a74de028ace1241b8a52da016b4ba838d69f84d3c9\"},\n    {\"name\":\"Blockhead #655\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/655\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0245c4b6d2f3204a0000009925532f6692a35f7657af88eb19be9433a64925a0\"},\n    {\"name\":\"Blockhead #1538\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1538\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x456ef9e2ab301a3500000020b608a7ab524633ef7fe553e7677cbb67e7cde381\"},\n    {\"name\":\"Blockhead #2060\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2060\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1dc68fd32f875b2000000141f4446fe09252922af1a1e46d007e7c383eafd42\"},\n    {\"name\":\"Blockhead #762\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/762\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x43f4232cebf27324000000725d328a4d2004ec45e2788d80bf650b5864a15d36\"},\n    {\"name\":\"Blockhead #1472\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1472\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x487796a4cbfa1e0f0000007316ce70a73973a868e689a60d48a7abf5256aa6c2\"},\n    {\"name\":\"Blockhead #537\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/537\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd2f2d65a9fe420ec00000059bbfb144d1eedfb7140b4ac3c523063d5d8907415\"},\n    {\"name\":\"Blockhead #148\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/148\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b844e91a563b8d50000004b12b925eb01842db21010a624c27a0894edcc8d44\"},\n    {\"name\":\"Blockhead #1661\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1661\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x024a23a0c7ef1ef20000004d0bf363bdbfe8b83fd97c2de0c396b51ad3fe0020\"},\n    {\"name\":\"Blockhead #1221\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1221\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3dd16376ba5c3894000000f2ec151ce200b86471a4ff58b0b49e21261f20f1d1\"},\n    {\"name\":\"Blockhead #1875\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1875\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5aa6e557e3c6fdbc0000005943abbef839582a2d85569c9c51070c8a61ad21ce\"},\n    {\"name\":\"Blockhead #2026\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2026\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x91e9451a68077dad000000a71567899fe0a7595d0be9c598c2a4636ad02c6961\"},\n    {\"name\":\"Blockhead #535\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/535\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf4a8716b082bfcd000000bb53a524557ad256733642a219be8c8741e6b8cbda\"},\n    {\"name\":\"Blockhead #790\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/790\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27a1bd60b625535e000000332ae59621fe4bce1717312b8b8cbcfcc2756b4d36\"},\n    {\"name\":\"Blockhead #1255\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1255\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e7ae6a5953a20800000009bd52168d63f8dc001c6d7e3429bc675a19ff4396d\"},\n    {\"name\":\"Blockhead #829\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/829\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3887cb565622da410000007aca33755a16804b53df7a40bf491c2325e6c961dc\"},\n    {\"name\":\"Blockhead #1486\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1486\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x55d4214de3b738730000000e10bf4c8c747e055a527e615a5d450d8f16e058aa\"},\n    {\"name\":\"Blockhead #647\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/647\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3731fceea7c77c460000000f6ad09c09340f6cc18afa80c1da389f1c31b1f747\"},\n    {\"name\":\"Blockhead #672\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/672\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ff864d85965e9f8000000215ce5c2751df14f25ee32b7cc7f7a6658043a1945\"},\n    {\"name\":\"Blockhead #1154\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1154\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18bd23a73a56d61e000000a09922a0ab52eb991d973f14db8025a7be2e2da41d\"},\n    {\"name\":\"Blockhead #1225\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1225\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3286c390034e1040000000370988bca92eb1f92d7084462e5bb6eeb72a337d91\"},\n    {\"name\":\"Blockhead #557\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/557\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd0fea37882a05225000000c306a3e1c1107cac203d016549d316a1635dca621d\"},\n    {\"name\":\"Blockhead #1282\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1282\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbcdff289682b0b6d00000047e1400bb5a26a9f66e3ef17b63b8756898e2389db\"},\n    {\"name\":\"Blockhead #371\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/371\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6f92ac47140353c1000000a41f7b7585a3d4892dcf12ea81cb2e0498ebec9119\"},\n    {\"name\":\"Blockhead #638\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/638\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1fd33bce277356ca0000008a8b2b1c2148456e0be60031da8544f795a68f6d59\"},\n    {\"name\":\"Blockhead #1705\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1705\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c5232233f958afb0000003fe04f11c1b01f6ce63eef7f3aa435952d4deaf65a\"},\n    {\"name\":\"Blockhead #2033\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2033\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdd2e7a6efcea4657000000290a5dc7ec58d94a89bb5b7aab078c25156bf0f4c8\"},\n    {\"name\":\"Blockhead #1038\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1038\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf70c3a175f420318000000d8e8e00a5825b5d730ae98f7ff80b2662ec43cf49a\"},\n    {\"name\":\"Blockhead #1822\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1822\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x17b9d6560758efe500000016cc633e1e712e0ede3a2236b3aec24fff2ad04b2e\"},\n    {\"name\":\"Blockhead #1763\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1763\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b65665eb817d92d00000069c3482cf7e041b454792b9e3d9f7a7aefe17c93d1\"},\n    {\"name\":\"Blockhead #216\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/216\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6671625a0a7a5b490000002afbcd196683e7046ea43bba2f6f60dc99c037b2a0\"},\n    {\"name\":\"Blockhead #244\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/244\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaed847751fe97a900000004c1defacdb34337a681b23c24688157211c6a42790\"},\n    {\"name\":\"Blockhead #63\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/63\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Silicon\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5cd0468674029e6e000000f0c193530d8a63092ac4a7e10df681caa4a415339f\"},\n    {\"name\":\"Blockhead #1004\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1004\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x079d0a8d6f7e5b97000000beed12ba9be9683ccc124c3c6c1d33866231f41618\"},\n    {\"name\":\"Blockhead #191\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/191\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0b43af3f24affb21000000ebc10911b04fb69418ca2ef4002c218d6d84969cbd\"},\n    {\"name\":\"Blockhead #2056\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2056\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x892bab5f9307d8d6000000c418410ff730f76e12cc0dd1a3d7455f50c53d13f2\"},\n    {\"name\":\"Blockhead #316\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/316\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36008b2976e69aac0000004ca34c814b9a38c71bdea5903bcacee69159c12243\"},\n    {\"name\":\"Blockhead #1240\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1240\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1d66a1be12135b070000005acb2e30740e5824f1ebf55367484b0a1c5535373f\"},\n    {\"name\":\"Blockhead #1450\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1450\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5c05e3f64e47b3440000002513795ea340cf920d7f607566699cd5f3a0606fa5\"},\n    {\"name\":\"Blockhead #296\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/296\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xffc46a14f6a136ca0000004b0d5976ce2ac3af680fc6f86cc242f0c3d308652e\"},\n    {\"name\":\"Blockhead #1117\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1117\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3934c5d17eb43aa4000000991ffd4c9c95000bf14450d403668967d292c9df72\"},\n    {\"name\":\"Blockhead #788\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/788\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbc368966e15351d5000000b8123df98b5b3214ea06cb92a6dec9c4465ddbf7e1\"},\n    {\"name\":\"Blockhead #1762\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1762\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x611825f8b2c9710600000097565541559c6f053ecdd668865b0db5574120ca30\"},\n    {\"name\":\"Blockhead #122\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/122\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9629b72922f871080000006b683ad77bddb7e4af67a0e828031b4591ba2af0a6\"},\n    {\"name\":\"Blockhead #551\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/551\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd8f5776a854fca25000000d6523f2a003acebe6724af0676bca041f27f961141\"},\n    {\"name\":\"Blockhead #1496\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1496\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x208a9643d4cafd8c000000439bb8100226e0255b8e22881f477b36c052c51708\"},\n    {\"name\":\"Blockhead #348\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/348\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf9fbd22d6def946c0000003d2b81a469a42d14efe4a55ea2971c5e81c7ce5140\"},\n    {\"name\":\"Blockhead #257\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/257\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe4604325ddd0fd130000004fc828f6f72bc82d87bdaf4831a7feec0ef3067cc5\"},\n    {\"name\":\"Blockhead #525\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/525\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfdcf1c69876422ad00000013814b19a497e869be5838de5f5541539ac533d9e2\"},\n    {\"name\":\"Blockhead #1186\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1186\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x465b70e512e785830000007b31ff8c521f2ce12481cf0a6eaa6ac46b81ac2e93\"},\n    {\"name\":\"Blockhead #412\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/412\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5120bcc0cf038d4b0000009d5d951e007c502e5f2cc6626262cd5f90adb6ab74\"},\n    {\"name\":\"Blockhead #909\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/909\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x396c858f55c7e595000000f670830681603c4f8098811b6170fe543009ee272d\"},\n    {\"name\":\"Blockhead #1449\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1449\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3e730a77f6200d8d000000108a5e0aa9fc79140f241dc06f1e555c6b9513d088\"},\n    {\"name\":\"Blockhead #1065\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1065\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x54a04afc4e66e9260000007ed81b9ff03e3aa8fcad5608951cd4f128a6035aa9\"},\n    {\"name\":\"Blockhead #1220\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1220\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x83c787d2d9c54668000000da812889ff023f764612b2d8396d4c71406ca5fb91\"},\n    {\"name\":\"Blockhead #542\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/542\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5acf1955baf4bd190000009d0dbac9b5315c3f77a44a5a5e6d691334d986ee03\"},\n    {\"name\":\"Blockhead #1563\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1563\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x584917af5fa41ae2000000b7ad198cb48603eecb664cfb98dbfd7f56892d7a54\"},\n    {\"name\":\"Blockhead #450\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/450\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd13224963e2a41be000000ef894bd260fc7244ccf10cedb13a888b22ec4c2540\"},\n    {\"name\":\"Blockhead #1846\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1846\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x42c458f73bd9c7ee0000000c1affd8ab648ba33cae0b276a735c68de70be83d4\"},\n    {\"name\":\"Blockhead #1692\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1692\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3885ce125f9da82c000000fd952a1063c3d9883b15a9d10473cc8b2e0079bc86\"},\n    {\"name\":\"Blockhead #1658\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1658\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb59b058b20f70dbd0000003e3a661ece26b65ec3199abdbd646963e9189d832f\"},\n    {\"name\":\"Blockhead #1183\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1183\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdcf39f819aed03ab0000004f364a87badd43e9c21ed0836b4512ab67fe87dbe7\"},\n    {\"name\":\"Blockhead #482\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/482\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x030703b2fd20f911000000b3bb0fb6888466d71ed260581832ece6e98ca0d9f9\"},\n    {\"name\":\"Blockhead #1732\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1732\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x48b465cb315c79e5000000be9461191c54b551c9b76c3c8c2ca0722e4eb519b7\"},\n    {\"name\":\"Blockhead #1074\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1074\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe321bf4ec37a45c300000069d7f5ff9ac98349ea94c9b0aeb558fda7e9a93554\"},\n    {\"name\":\"Blockhead #281\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/281\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x481c1adf8742d84200000021ec615f675043a75a3c24e72e1dc937f93737ce63\"},\n    {\"name\":\"Blockhead #547\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/547\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x13cc74e0f3f14b7b000000a90745a7a1465894beacb07dcac858c84bcd066501\"},\n    {\"name\":\"Blockhead #884\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/884\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf45a285934a469be000000a94033bfb7ba0704ef179f461d1e273d38c15486c7\"},\n    {\"name\":\"Blockhead #982\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/982\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8652ef0b85e12ce800000048674179bfc311e0d617164c365992f68124adbbf4\"},\n    {\"name\":\"Blockhead #431\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/431\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x82d5b5d0c0a6235600000065b75ad5e4198caabe33e24aa29b5ee3007d49da5d\"},\n    {\"name\":\"Blockhead #956\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/956\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf52ebfa8893cab1d0000005e21e276d2b2c6f30b2c6642a57452ccfe82ed5a9b\"},\n    {\"name\":\"Blockhead #1266\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1266\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbf9e31e0a9d981ad000000fd0eb20ba3dce10035b0c9b7508f5654365639dc43\"},\n    {\"name\":\"Blockhead #276\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/276\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdde7128e5d9677ac000000fe35ee17b9bd9f5c64fced947d471ac0ca3930a480\"},\n    {\"name\":\"Blockhead #511\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/511\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf2a3056a7bd683d0000000100d81a8d858585396084ec1e3716ecdde7b5a6d8f\"},\n    {\"name\":\"Blockhead #621\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/621\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4a849cafde53587900000058db69ba0470ddfbf1b023ee73ac7b01ced634d515\"},\n    {\"name\":\"Blockhead #823\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/823\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5b49d3276145e1310000004ff54abe82cfea080aaf6fef3d79f9307c2d7c66be\"},\n    {\"name\":\"Blockhead #1097\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1097\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4491b8ccf208c9ff0000000c74fec119d72d9001669ace1ef18b444ea66e1109\"},\n    {\"name\":\"Blockhead #867\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/867\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0a38d8b143ae89f0000000eef50bb2a429239fd2529bb2a092125dd2fc24c626\"},\n    {\"name\":\"Blockhead #1911\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1911\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4cd9f42c3e95981400000062cb89f9f087c0f13ce22e910638bedb6dca9d6a7d\"},\n    {\"name\":\"Blockhead #165\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/165\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5f11e260d9aa62bc000000b97969ba031fddff2d10315cc75d727bd69ea6ec3c\"},\n    {\"name\":\"Blockhead #213\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/213\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b60791787b2d01a000000817c657a78f9abad7512c7d9c303c1ad6d324fd3a5\"},\n    {\"name\":\"Blockhead #280\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/280\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x344aa39376f4ffb80000004a9713f9e6b73d58f232e9d1fdfb042b305cfcde2f\"},\n    {\"name\":\"Blockhead #386\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/386\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcd2a19b67129236f000000356facfc56bbd143e542da70dd19991098933db778\"},\n    {\"name\":\"Blockhead #1387\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1387\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x73464981797fe573000000bc21850ad718f66df2673e1fbce010347908dfda49\"},\n    {\"name\":\"Blockhead #1318\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1318\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcb4d843e794b11e60000000eb72e76bf7c5acbf6801cae7a3776a8213bef3dea\"},\n    {\"name\":\"Blockhead #62\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/62\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x601ec5755756bd320000008534f93779e3e8e99cda7a7ef620fdf7d726944e8e\"},\n    {\"name\":\"Blockhead #677\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/677\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc9d6a4ac335285c7000000dd3b946c08b8a9b110bf1b250f36f16ef5288065ec\"},\n    {\"name\":\"Blockhead #421\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/421\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf166eff050c89480000005bce0df996ada8e1a6f398f5eefc5822f1dc2d722f\"},\n    {\"name\":\"Blockhead #1465\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1465\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab943ab89a6aa58e000000ff761a27e34189f336f45d5815d77db6ceb856a4e2\"},\n    {\"name\":\"Blockhead #262\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/262\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0f28784ab17ed16f0000001a5da01dbc2196a51887e8424be7f2b7405650c5d0\"},\n    {\"name\":\"Blockhead #1118\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1118\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0669fc9771c0c9f000000433d430b9632cb067af8f09ec4698abdba728821c7\"},\n    {\"name\":\"Blockhead #1904\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1904\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x21f52379ee184b6900000017762d6faaa1eeba3d0767e1537906c8c0cf706db6\"},\n    {\"name\":\"Blockhead #828\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/828\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb754d09602408e840000008e90530a6dd50dd82ec7eb5ac7e1fecab6973c4130\"},\n    {\"name\":\"Blockhead #1974\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1974\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3233a263b6998b3f000000360e2bfeaec652f228852e842b48b72e839e4d43fc\"},\n    {\"name\":\"Blockhead #1236\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1236\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa8420286a2c46d65000000977510cb9a3f250bf6cbcf60142ff253b6b573b60f\"},\n    {\"name\":\"Blockhead #498\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/498\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x84c0361d96f645d900000049c66bc95ce89f8bb67884658b71463831cb1c5342\"},\n    {\"name\":\"Blockhead #1817\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1817\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa50edfa8a87d3a8c000000910a4ff9a32ef31b0d64a0448cb19bbcec4f549bc7\"},\n    {\"name\":\"Blockhead #740\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/740\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb193f05a31e4f109000000ae8044a81b6ee800f9afc00fac72623418adf1462f\"},\n    {\"name\":\"Blockhead #631\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/631\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e85a4427aa3959e0000005ab3f9101e53f73c12737253046371aa357912adc9\"},\n    {\"name\":\"Blockhead #315\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/315\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d0462b3b48373600000007c54da8357de17ad1540ce19673955020514230b0c\"},\n    {\"name\":\"Blockhead #995\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/995\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc1b9a260f0d37715000000268adf4654978d885229c0f27152ec4547da53a238\"},\n    {\"name\":\"Blockhead #929\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/929\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0657051b5d947471000000df08dd1bf52d6a81c5d8dc583a07821fe2458df6dc\"},\n    {\"name\":\"Blockhead #287\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/287\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee17b343857659e400000047d711aaae6e6bd20387a3284ad79d2d71b04609ab\"},\n    {\"name\":\"Blockhead #1919\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1919\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6dcb5f50174110b90000008152770c1f287310856345dc6e51e98372649e6dc7\"},\n    {\"name\":\"Blockhead #1068\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1068\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xefdcaac6e8f8f5ba000000d68e1184caa4cbbafd7be03be8a2a1436e375793c7\"},\n    {\"name\":\"Blockhead #935\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/935\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x44eafb30c9bd97830000002a5787d7696b945fab4a88c2bfd0ef93783e46dd2c\"},\n    {\"name\":\"Blockhead #1181\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1181\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ad1fb1624419d550000005e0f56b7982a267dc01aa5a5e81072c60226d07fff\"},\n    {\"name\":\"Blockhead #204\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/204\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9406d87bda16209d000000b3a908b8f149d6e93faf7da6202b80b4d137d3bc6d\"},\n    {\"name\":\"Blockhead #680\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/680\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa8754cf7933000a3000000796406edb18609f48b1deeb2f956a92a3b9b4a0d88\"},\n    {\"name\":\"Blockhead #1461\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1461\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x35fdf95d758fabef000000675d87dcdfbe251f03f265c4fa8bb86d6540769bb3\"},\n    {\"name\":\"Blockhead #254\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/254\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0321dbeba764a03c000000272a4b30c4eff5ac53b9467c786e4b85e67b856ee9\"},\n    {\"name\":\"Blockhead #835\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/835\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd6c11dc4d1b588f3000000941b64fdb2cfe7652ff76d7851844552c31993d4dc\"},\n    {\"name\":\"Blockhead #991\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/991\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0a31eb7c794b0b33000000560de19f8be8fcebe67e29ef2acc43b78d1a5f635c\"},\n    {\"name\":\"Blockhead #910\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/910\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x758a776542e9f31d00000048818dfb7a096f309112c2af2514109f6dd9f1f118\"},\n    {\"name\":\"Blockhead #1139\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1139\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x65807b37c9938d3b000000367abcf209e8ef186332b694ef833c16847a8cdfce\"},\n    {\"name\":\"Blockhead #1090\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1090\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e2e7fb8c4eda6c80000000fcd57f8c2c2000bb2bc8e38a14c881f667eeba2aa\"},\n    {\"name\":\"Blockhead #882\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/882\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xecb26a9476b52c1b0000007e683a22aad8e2fa147a84f9e01d4984a3973e6b51\"},\n    {\"name\":\"Blockhead #833\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/833\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb06250a78f7ed84f0000000c27c148bb762c2794c26d3010f6b277c915b02c29\"},\n    {\"name\":\"Blockhead #894\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/894\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8db5c4bfb03c46790000004ea845f16f8653a5e2d9834dec0dd4af8f1c34061d\"},\n    {\"name\":\"Blockhead #1314\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1314\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcf3fd82cafd8d9cd0000008e1fc2f4a363360573be90d56b88908fbd2f892faa\"},\n    {\"name\":\"Blockhead #1313\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1313\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b7805d463546b35000000f6da38964c87c94d2b677e51bc0f0f7ca34dd37f07\"},\n    {\"name\":\"Blockhead #1878\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1878\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2b23576766a8bc460000009414ed2f8ed2db8a9f96c57fa451ddfba42f87f307\"},\n    {\"name\":\"Blockhead #1039\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1039\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcfc6b0dfe0277634000000bd0768f4cb40da477f57484732adf49089689737cd\"},\n    {\"name\":\"Blockhead #616\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/616\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x07caf4dbc2c9784400000041b0370c87e21a3b8c29ad542ccf5ecea94e933d81\"},\n    {\"name\":\"Blockhead #1503\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1503\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27c708e720e0eb4c00000050bc60c61fa663f7b6ed240a5062ccd325b2fadb3b\"},\n    {\"name\":\"Blockhead #900\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/900\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x16ef5db99f0e7ae20000001452e6149e37d36c7d55bc3875364efe04b5610dbf\"},\n    {\"name\":\"Blockhead #308\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/308\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x608450fa426bab200000008a802ccd711ec5675577ea4ed44c8b30d894f393f5\"},\n    {\"name\":\"Blockhead #248\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/248\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa55621d2cf37191f000000dc0a45c5e7cf75dd311759b65e45133735e1133480\"},\n    {\"name\":\"Blockhead #185\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/185\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x38bf787c2964471100000058d6951166653aef39f736a34d138ed372123e616b\"},\n    {\"name\":\"Blockhead #1428\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1428\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7feded5ef8036a7b000000ba136764f1051232f4bac00868660be639810f1bbf\"},\n    {\"name\":\"Blockhead #1400\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1400\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe1be6b9b3cf776740000009ec4d4155568600ef438315811f84a5e07bcb95ce6\"},\n    {\"name\":\"Blockhead #275\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/275\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3835c7f34ae18784000000f55f56e91b636dad7335da8da2425e102fe19b1dfc\"},\n    {\"name\":\"Blockhead #1436\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1436\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb8cb28d5da0c16ce0000007a0ce6a6baf3430dd814b28803ccb8c6b295c08b75\"},\n    {\"name\":\"Blockhead #236\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/236\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81187935bb42330d000000c9468b3dde758ce46e25f6bf05a7656ae1fdac40de\"},\n    {\"name\":\"Blockhead #1235\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1235\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2d8301a31e64373500000055257be0b8819ea7f4f93761c9f8a3685ecf4b49c3\"},\n    {\"name\":\"Blockhead #1921\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1921\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x874eb728124cfa8c000000506707d0f6d4d454fa878546a3eb8dbc4a1cc5aa69\"},\n    {\"name\":\"Blockhead #174\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/174\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x18ea8ca87ef40f8b0000001af97c4b0b301acb561ee7de84584fbd057c8ddb61\"},\n    {\"name\":\"Blockhead #595\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/595\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf513ed7fe4f79ef80000002885a2827b86bacd13dbdaf99426658c3796e8afdc\"},\n    {\"name\":\"Blockhead #199\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/199\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25dd478718bf34af000000c625b8862303d5af0ba4dc31436b503c5fee14e9cd\"},\n    {\"name\":\"Blockhead #141\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/141\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25910f46945732c0000000270d41fcf98ed4cbcb50092d326cfe2f0ccf87950a\"},\n    {\"name\":\"Blockhead #458\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/458\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x353c96a22cbfd8d2000000a4b30f84cf5de11fa5e859a390f167759485287ff5\"},\n    {\"name\":\"Blockhead #22\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/22\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf72b3d956189858c0000001329caac836874daa8e9b2c501e831df2b2565f395\"},\n    {\"name\":\"Blockhead #796\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/796\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0386ffc95acdd67d000000720ce5f2a98287cf42d7478c3174e042532eafc9b7\"},\n    {\"name\":\"Blockhead #1587\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1587\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9952c1b1071236b40000005e324874a3febe8610ce34928891a04cb8c8cda004\"},\n    {\"name\":\"Blockhead #761\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/761\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x928b2fb0bd7779e6000000882b3b6bbb061397fa757e5ccbf6057b5484565cc9\"},\n    {\"name\":\"Blockhead #1274\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1274\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xea91619ba933a0e60000001de659148a9a3ab816504511f1b58b5b36dc082b3c\"},\n    {\"name\":\"Blockhead #11\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/11\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe4537278198b29c30000009aaa5b1fc2fdb843172cf1df92f6d9013f775374fb\"},\n    {\"name\":\"Blockhead #1868\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1868\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf7cb61d189a3cc520000002b10c711df146b285ee915e3fec1f11360a5bec3e7\"},\n    {\"name\":\"Blockhead #1136\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1136\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbff922666e8029700000003b1bb6e0eee192bb1f86e0f4c5c59994a3aa102d24\"},\n    {\"name\":\"Blockhead #968\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/968\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdcec9fc31d8c2a080000004d19754db217a99765c0f7ca2101b56e2a76e06aa7\"},\n    {\"name\":\"Blockhead #889\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/889\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x23d5df35b5502b5c000000fe2182c1cbc7e90a022fc14c5b509b3e19ae4ce79b\"},\n    {\"name\":\"Blockhead #1479\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1479\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x844f6b6944e748a70000007f575006a6f33f83330498d63e85a751943d9eee58\"},\n    {\"name\":\"Blockhead #365\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/365\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Cyclops visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62e17f468740ff62000000e64bdaabfa7b5cb98b741eadfebca998556c916b3b\"},\n    {\"name\":\"Blockhead #1641\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1641\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4e854649f79efd350000000dc30cd5e3b9edba457994861207b2c0bdf6ddcb47\"},\n    {\"name\":\"Blockhead #975\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/975\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4d2bea96822949ee0000005eaa60e76fe04b58d14b6fcf796e6b843282545b87\"},\n    {\"name\":\"Blockhead #838\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/838\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfeff169d1a9daca6000000ad1aded9dc6610b87f06c2fb7f134313e8daf719da\"},\n    {\"name\":\"Blockhead #373\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/373\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3802e63866ea1e87000000e212ed65853231ff0163ae3ec2f9ee33edab209a5e\"},\n    {\"name\":\"Blockhead #1133\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1133\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4b29704e63f97af0000000b8d45cc64f5a24e004e9756ed6d308ff860bfb7772\"},\n    {\"name\":\"Blockhead #435\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/435\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4a40f72ec7d8279d0000006c86374d7753287070184f4e734bd46779abd9f670\"},\n    {\"name\":\"Blockhead #571\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/571\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x60024069a7111f800000009af02c2a0724f71186cc58d4a8ba2a885a7894a0c1\"},\n    {\"name\":\"Blockhead #1331\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1331\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6c2e52d4d8763a5b000000322250cb89d4eccee494082e047499d9fa690b5197\"},\n    {\"name\":\"Blockhead #1978\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1978\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa4c4a550de74630e0000000e31c47d9c406333e98211c17a8b8174b5119dc897\"},\n    {\"name\":\"Blockhead #1383\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1383\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8f6fc1be2c4801c5000000217a4324eeae0b8d4db8392d02658e487efbcd688c\"},\n    {\"name\":\"Blockhead #1167\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1167\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b8b3e648bbb631700000047995a2084645c3b92fb42f057a3e922949e09a814\"},\n    {\"name\":\"Blockhead #770\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/770\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5035887d75cf5f7e0000007d7760f3647b7cc40e056c7ce4a213ced3191fe708\"},\n    {\"name\":\"Blockhead #615\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/615\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xda37e5d6249bce2f0000006c1163a8cf6bf27fa5edbed4e389d05e9be0da9227\"},\n    {\"name\":\"Blockhead #827\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/827\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc4ff5894010a97d00000004413775ec44a0a0fa93815a40e7cd87e3e4b74be2c\"},\n    {\"name\":\"Blockhead #540\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/540\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7fa8c02646c4755d000000bbddfe090076f6ab9b5b0584ce245c01ebd46f9fe5\"},\n    {\"name\":\"Blockhead #684\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/684\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcdac21b8e3eafd61000000bc95d00a811296032adfd1f149741847b002805c8b\"},\n    {\"name\":\"Blockhead #229\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/229\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa3f89227c75b3244000000ef3dd0e8648991cb5377e96575cacd0b58cf30d63a\"},\n    {\"name\":\"Blockhead #184\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/184\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Pink hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xad6c2506c7959d7b000000ea9325a8faf496f47e794f7dd71081439d2d089136\"},\n    {\"name\":\"Blockhead #2053\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2053\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fedfd3a9869c57c0000003d0fd995d94a5286b2eb1f52a00dc1c8de6f3b8a81\"},\n    {\"name\":\"Blockhead #343\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/343\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x063a2d97910ca8020000000e10912794498f3731b0e7a3b7dd932562812adeb5\"},\n    {\"name\":\"Blockhead #206\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/206\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7337c8b1317d6e8f000000577dbc951d54f90dca578d7bbf8cb650e001a6fdaf\"},\n    {\"name\":\"Blockhead #239\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/239\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe9c25cfef79f733f0000003c312ccbcb5ae5d0ada9b9068be3b1eb283f43554e\"},\n    {\"name\":\"Blockhead #1049\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1049\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4d0300488d24751a000000bf0fcacd9cbd9c6f91b7410daf466cb19e93a0f456\"},\n    {\"name\":\"Blockhead #448\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/448\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1cfcb7fb0eb94050000001d363e3793f65f5fcac7044636a8e85ec2df276dc9\"},\n    {\"name\":\"Blockhead #505\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/505\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x36ea9f8ec620f3c30000001962477d8912d04de391d7c64b1d2216a3e99191e3\"},\n    {\"name\":\"Blockhead #702\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/702\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xefb2ff413f7ebbb000000061fdd50ec141c0d49e764a97305df46250eee09fa3\"},\n    {\"name\":\"Blockhead #1439\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1439\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa09d006882542ddb000000290ef1c7d47ed4da2ed06af2ac5088aefec411d774\"},\n    {\"name\":\"Blockhead #826\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/826\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9581d28489be7a88000000ed216f5fce39c20f0d59ad33f7efbc71b600d16546\"},\n    {\"name\":\"Blockhead #304\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/304\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x16e3218ae41114950000001184cf791fcd7a1f32db690f78dad98dcfe476bb81\"},\n    {\"name\":\"Blockhead #495\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/495\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4de8d8e82731b6df0000001e22561de51e87e162743bb99a57f750b9ca1155d1\"},\n    {\"name\":\"Blockhead #1029\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1029\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe598ed33da2016ed000000da0c4658978229c81dab7697a7a47573895b7eec1f\"},\n    {\"name\":\"Blockhead #1200\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1200\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x551871517a081a760000000d728f92b99fb4bbd9aaa21d9b924662516ff3b7a6\"},\n    {\"name\":\"Blockhead #118\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/118\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x97e779b0b71ae7cb000000e4be5d3673233433a80447a0a8bc7699acc7b4beca\"},\n    {\"name\":\"Blockhead #135\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/135\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6d8dc797a172dd01000000c88866a20bfbf9351724ccac870e45847d782ee7c6\"},\n    {\"name\":\"Blockhead #1195\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1195\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x135ce5d50fa9ccdf00000018de3523e91cfe95cfa8844efb365c86d0fd139e9e\"},\n    {\"name\":\"Blockhead #588\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/588\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0acda7c0d8a42c7c00000042996d6d4cb011f0b09d0fe8dc3f0bb7c68dd33578\"},\n    {\"name\":\"Blockhead #7\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/7\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e09918e94a7d933000000b73763cc8677d69c5fe4cd842d855c32917b2c1825\"},\n    {\"name\":\"Blockhead #918\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/918\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdfc1ba6a9faaa771000000ad0cb42393bbcc932213901f9aaab2dfc303f454f7\"},\n    {\"name\":\"Blockhead #764\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/764\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x95608c1ba24b3f940000005b5dbdd76514d743dd8935c8b1b0d33ce686522c85\"},\n    {\"name\":\"Blockhead #1526\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1526\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x722b642f1d271f3e0000000f79383fa4a571e50a69bcc2624070ef4a3fb18f6f\"},\n    {\"name\":\"Blockhead #221\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/221\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Blue hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xee083808d4b995ee000000a1e21c5ef61ba6a7a222d53274566f47ce7e304dce\"},\n    {\"name\":\"Blockhead #433\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/433\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x80de6873e56e926d000000be73ecbb52f58f66f46483adfb9db52f499000daef\"},\n    {\"name\":\"Blockhead #1511\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1511\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6742030fab8605ce0000004a59711f849990b0d40f0e48850e2ff75178198d0f\"},\n    {\"name\":\"Blockhead #490\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/490\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4000f176eda092ce000000fae70bda9afcd6c1183d9416ce1d10941c76e94741\"},\n    {\"name\":\"Blockhead #1596\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1596\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xed6e24578fa4d34600000035ee3bc3b6f7d61bc8a7f89a2a0e2963e7aa7bb474\"},\n    {\"name\":\"Blockhead #1914\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1914\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f54de1c9b663758000000f70f3939b2f2a64b8ff14409cf172f59fb67ff5930\"},\n    {\"name\":\"Blockhead #1882\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1882\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x92e902abef92cde1000000ef9a3d671f326a55f8a6211a2699b5aed612e579fe\"},\n    {\"name\":\"Blockhead #207\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/207\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdddf4d82de8ff8a300000055b25698c05426a036ae52b5f0e1b942323814bbbc\"},\n    {\"name\":\"Blockhead #267\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/267\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Gold\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa94f9aa0a95d7e27000000c8cb94ef5c67d8ecdf32e47f68849b72420676c58b\"},\n    {\"name\":\"Blockhead #503\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/503\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9f3854803775ab490000004941e652bedc8a32ac69fc429aa565d31465fc549e\"},\n    {\"name\":\"Blockhead #1251\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1251\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x115417af3ff0de610000002474623d8910abe32c4031712d2562024769735d71\"},\n    {\"name\":\"Blockhead #526\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/526\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaada1af81ec22abc000000f63f616e9eab24e3cf7f84731cb8b17f5c760704a5\"},\n    {\"name\":\"Blockhead #1929\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1929\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd353db6d812d0dda0000008114cd24ae0740dd5dcc3e8ed1e51f9ca780cbef56\"},\n    {\"name\":\"Blockhead #72\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/72\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbc415cbd9dc805c70000007f65686cc1b0fb9e47ab321ed4e1036b740b77059b\"},\n    {\"name\":\"Blockhead #513\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/513\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa47d24cfb9b9c9d50000009f82f31d1a75de5c8709bab4e496cc1bb0a886cc0a\"},\n    {\"name\":\"Blockhead #745\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/745\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0243bdeb2cbe17f900000024d1a18f6dd05ea25d2bb1237b9b927fd289b2e0ef\"},\n    {\"name\":\"Blockhead #1772\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1772\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x92442fe5158ee7b50000000deb68df8e69faa726f538d90bb3ee3b415fc3f8c7\"},\n    {\"name\":\"Blockhead #1501\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1501\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6fb7ab40a678947a0000001735c3298a558bd152b1e4768345b203afd65a79d5\"},\n    {\"name\":\"Blockhead #1971\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1971\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6cdd9d4a8bb8a910000000d25cc615b67cb862adf66c936d942ea507e13edf8c\"},\n    {\"name\":\"Blockhead #1427\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1427\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7545844affa73752000000e4234607d34b3f277a7c18003ba4719c9bd8fb599f\"},\n    {\"name\":\"Blockhead #1507\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1507\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3bbcb47d23d1d1a000000199e9a198541f45d4fd183d5b567b9770e46b4d40a\"},\n    {\"name\":\"Blockhead #133\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/133\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa06d33dd7b75d8be0000009bfc0656acce49d4d0b8e0d6706ca6875882a8a4f1\"},\n    {\"name\":\"Blockhead #699\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/699\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile with cigarette\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd20418b93b3b2a1d0000006499b129fd4b4dd1b00dcf5fb3ec94ea8cc999fc93\"},\n    {\"name\":\"Blockhead #1891\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1891\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x320597a8cd3b897f000000ad9f3216beb6efa7c5709193746a6e4f81d966d74b\"},\n    {\"name\":\"Blockhead #1770\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1770\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xac726cb9a8805453000000d60c665d9937dc09ca6721c8dbc6fc2eac28d445e9\"},\n    {\"name\":\"Blockhead #1572\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1572\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x70f4aea2608ce39400000023295b6cd76f0f890359838ee8473b7a2acbe51e29\"},\n    {\"name\":\"Blockhead #245\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/245\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8458c0065b365df500000020d954b6ba345ee8a822f9eb74322d47732ae85a8c\"},\n    {\"name\":\"Blockhead #277\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/277\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7f9ad0c88084836f000000142e4d63b485489ea41511f5c1a0da341f17a761ef\"},\n    {\"name\":\"Blockhead #1616\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1616\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaba6783243ba489e000000bb1cde07e5dedd34e1f54ab4fee3cb461256388818\"},\n    {\"name\":\"Blockhead #145\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/145\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbfc35479e378739500000059c6797a01e7fc0631b14723801cba05700f008434\"},\n    {\"name\":\"Blockhead #309\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/309\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x77b2265f9fa629bb00000032ee89987b26eccc1fe330f5a9e5a968726bc4d3f2\"},\n    {\"name\":\"Blockhead #1126\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1126\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8cb233ed642f8a3c0000000f538208c7fa9d68c5d5b56ae0e23db8f13b5a78ef\"},\n    {\"name\":\"Blockhead #1343\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1343\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6974a3eaa8e17ba9000000340d47d6e2fac17f13887075bd0324f39130db07ab\"},\n    {\"name\":\"Blockhead #1912\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1912\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10e19c59765fd9f8000000870e8264881b913c3de117ba472aeee3c04ad7b79d\"},\n    {\"name\":\"Blockhead #16\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/16\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb5b3abbfd3294699000000ce6683d1065d8414e1917be3bbb9d41ba95d790d24\"},\n    {\"name\":\"Blockhead #225\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/225\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5db5458fda23dda9000000cf59f7ce7e3a5995286f260bceb053d11919e00fff\"},\n    {\"name\":\"Blockhead #1008\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1008\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74191a3627ceafcf0000003e3f8f9584eae043c58f63d568aa9e53839f01264c\"},\n    {\"name\":\"Blockhead #396\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/396\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99cc148053810d25000000112a89a5a1a6fc2be5c3bb13bb62d68bb4ac7eeee5\"},\n    {\"name\":\"Blockhead #428\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/428\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x873264a699201092000000fec8377168300f42e58b89a84db53115f2afea73f9\"},\n    {\"name\":\"Blockhead #1722\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1722\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf86556a4852b5d7c000000ad0b4a38d3cea86acc9b1bf26f14d5bec75c26afed\"},\n    {\"name\":\"Blockhead #182\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/182\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x783e8d63646532500000005115f70adee3d34e9b3c8a0b8ef6ae11a4a8be2a86\"},\n    {\"name\":\"Blockhead #932\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/932\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe6bd35cc0e0739a200000060b34cdfb5bd0dd23ab1171b5068cb413956803a91\"},\n    {\"name\":\"Blockhead #1341\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1341\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x778d5a80a50ec833000000890a563caea2418f6d43f98e8d378cc0ef0862f882\"},\n    {\"name\":\"Blockhead #1112\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1112\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc0a52421666009b6000000ecc94f591843b343d9056f19653e68b46fb40e783c\"},\n    {\"name\":\"Blockhead #306\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/306\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xff9343e00b69ca860000008ca2720d72d538297293b7249e39ef6a7214d9cd54\"},\n    {\"name\":\"Blockhead #1909\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1909\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1c1a84b27d4ee1f000000077b164228d135e8a1336ede29af4d293aac3a4346a\"},\n    {\"name\":\"Blockhead #824\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/824\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2ff3d9c45dde663d000000506669bf9cea68fbd52b1264463f49860d96fd5799\"},\n    {\"name\":\"Blockhead #1761\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1761\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9c2902461f771f630000005bbc0b8edd9bdeb34ccf1b89bd05dffbace7d9b77d\"},\n    {\"name\":\"Blockhead #2042\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2042\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x099c69825e89b257000000786963b5b6a327b6882b3696725c14354fc99434c5\"},\n    {\"name\":\"Blockhead #220\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/220\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x05026995e065b5a4000000a116d0f4923b60451f8e714966dbbfa03ba4448f04\"},\n    {\"name\":\"Blockhead #1981\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1981\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc9a64f8d721780cf000000a512fa83a5bce651c336dfdb293fbe6eff82e78004\"},\n    {\"name\":\"Blockhead #157\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/157\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x96d7df4e13566fa50000003826bc7a9f92a5572b0bdd614e0fd0cca2a63308ff\"},\n    {\"name\":\"Blockhead #291\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/291\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf672227c40ddd653000000d838d155b97aa52d8dd8ee3a5249466af1936a7ed3\"},\n    {\"name\":\"Blockhead #1085\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1085\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x084f8fe52e067355000000b47710a6e2f3ab475380694ee9c6c3e9fe5eab03fc\"},\n    {\"name\":\"Blockhead #457\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/457\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xce46b12ce24d259b0000003258a8bcc22724242af64ae61128346926d22f8240\"},\n    {\"name\":\"Blockhead #1207\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1207\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xecbaef3bb7461a6f00000047ec4f1ea43f16549cbbcb2f9b1ed6b76475776ea3\"},\n    {\"name\":\"Blockhead #1965\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1965\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8d31a12bfccfeee80000009b5d3221c9e654e351db099930248e5a38169a3b2e\"},\n    {\"name\":\"Blockhead #1767\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1767\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x42f4814a2f5c06e8000000e0186475fa17191487bba883f962a6ca66b38cadf5\"},\n    {\"name\":\"Blockhead #1233\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1233\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x86618b2ad0b79dc600000020ec480c99fe36dc9d01e8aea49dc2f7ddd447cc36\"},\n    {\"name\":\"Blockhead #1749\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1749\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e548dbe43a6657900000098255a1eae723443aa629f4a8010de4be583db1510\"},\n    {\"name\":\"Blockhead #186\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/186\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x818207aba4f1c3670000001a5d9ba391f313d497fea55f5762386f2ed6f949ce\"},\n    {\"name\":\"Blockhead #604\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/604\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9bbe8ddd2997dd90000000ba745811a12e73f4c4cdcdceedc647e4c3b610b872\"},\n    {\"name\":\"Blockhead #1719\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1719\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x80484a855e1b3c6e0000001a7c3346ce2449d279d8538b1745ae5b89001a0a7d\"},\n    {\"name\":\"Blockhead #814\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/814\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb5f1818bfec89456000000c316ab3bd60100fdd43c458473d4953277f82aafad\"},\n    {\"name\":\"Blockhead #1162\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1162\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x397ff62269ecd5230000000d805fe6d84f27b2264aee6f18e585d2897507fea6\"},\n    {\"name\":\"Blockhead #15\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/15\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf35b5a3a8cc801d2000000213ac76ccd697a42289159042501c035aad53db8c9\"},\n    {\"name\":\"Blockhead #570\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/570\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8c6ecb2e2ec48d41000000168968da9f7961c44655d5079b76744d70982bc8ec\"},\n    {\"name\":\"Blockhead #1654\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1654\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf1deb687b34062a0000004315683ce3d0816c77980db011ca71322958fb9fbb\"},\n    {\"name\":\"Blockhead #1381\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1381\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb8a2a57532cdcf6000000db17e6deb1c7781b823d332c0dec98c5c98be71e39\"},\n    {\"name\":\"Blockhead #1350\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1350\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7a75b6c17dc161bf0000002372b656bc3df7f60cb5f28d063b60bfd42013562b\"},\n    {\"name\":\"Blockhead #576\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/576\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x531a9436cd3bb60b0000004a273cd29965124f2a97428470b6aaf0b0f6d43266\"},\n    {\"name\":\"Blockhead #153\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/153\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x409aa36730d0907200000021d9acb6bf8ea0984c70328ff6ec5e1b1bda9b46bb\"},\n    {\"name\":\"Blockhead #114\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/114\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x37cb258cb4ec71590000009c994a867244295e3695ee8d4fd848865595449c5d\"},\n    {\"name\":\"Blockhead #1375\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1375\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x81d6aaf72ec9b5f100000036f9365f8f240edf585b8fd93ed8f9eaf14820d9f6\"},\n    {\"name\":\"Blockhead #183\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/183\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5e2a4b8497ab6a78000000c6aa5406843e5b267324be65fc46b8ca7af07babe3\"},\n    {\"name\":\"Blockhead #1913\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1913\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3253c53687890e1000000106a86aaa924e44a879859fa1375fe84d66b248d03\"},\n    {\"name\":\"Blockhead #925\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/925\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x393f33e1872bc9060000005413ead0afced3c81444f7db67e8199e0de917d2b7\"},\n    {\"name\":\"Blockhead #870\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/870\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x430eba425bf1e4520000006e06cf81cc1c26274cabae83c1a8c4856865e5f3f1\"},\n    {\"name\":\"Blockhead #994\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/994\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd216d1bf4e08180e00000049c36a84186e817b0a7574c172f63b27f3ba9e0e8a\"},\n    {\"name\":\"Blockhead #485\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/485\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ce7c32c09d1a2750000007a762eba90adca9f95a040d35200a26d4d0258b23e\"},\n    {\"name\":\"Blockhead #1048\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1048\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x83e6556116be2b1a000000387590fbb81711b4268304a1b76ce9b944f44705ae\"},\n    {\"name\":\"Blockhead #1870\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1870\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xea53c7e8409d3345000000f20aac6ef16cae50fe5101babce6ad9e4d37306528\"},\n    {\"name\":\"Blockhead #836\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/836\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x104554000b1bf62b000000a35ed7931eeeba1f2ddb49f2c97e6f563407994290\"},\n    {\"name\":\"Blockhead #625\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/625\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc7f341eab918efc50000005e9b2a73bb5f070a99913f161aa7017d3887a91f0d\"},\n    {\"name\":\"Blockhead #1746\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1746\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1aad2306e58090a0000004740414fabb32c6dda494ee5145890477601ba1969\"},\n    {\"name\":\"Blockhead #388\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/388\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0bd586e9f3f221de000000bd402c8cca0b52c97302cf64632a6e0f9a4f9c784b\"},\n    {\"name\":\"Blockhead #1327\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1327\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcee81d93fce1cc6f0000003a8a5d22db881ba6bfd81ec1cc690d73f852adb753\"},\n    {\"name\":\"Blockhead #1525\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1525\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd01f63857da75cba0000007b80cc088d014546006c58f7b7d08266cd299d8a37\"},\n    {\"name\":\"Blockhead #558\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/558\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x97ef9f83f93e5bc2000000fa5f5710cd396217401488bbe49bad3d3d89b7d065\"},\n    {\"name\":\"Blockhead #1023\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1023\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe0b73982643d95fa0000005a642b6fa42f959ae22b1969ac7f2cfa1faa3fcee6\"},\n    {\"name\":\"Blockhead #693\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/693\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe84a222de9ecc75b000000521e7c37e6fd56fa9a08d54cf6e61871ca56573e45\"},\n    {\"name\":\"Blockhead #1007\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1007\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7288685aac17eee80000005682a513bbf969303e29d662a73e09f643bd18af0f\"},\n    {\"name\":\"Blockhead #1457\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1457\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x053213487b7814640000001ba22d4e88c96cbdcd752e974857c4c657619483df\"},\n    {\"name\":\"Blockhead #1853\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1853\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b3ef424f3ae2685000000dc2b57dca557889909b15f814ae5f179e738c1214d\"},\n    {\"name\":\"Blockhead #1446\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1446\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x85ca389b2cd5b2740000003ba73e5ba8b2956e3331754a3cd5d500522ebca629\"},\n    {\"name\":\"Blockhead #1916\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1916\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3c7798b60a8135cb000000a0b9571c9e2135f6b62033b133c63cb1d241912ca1\"},\n    {\"name\":\"Blockhead #1994\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1994\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb7de0f95592e1794000000516dfa1aa340ccbecc07f4367f6df938314355276c\"},\n    {\"name\":\"Blockhead #235\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/235\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcc66b0a35612fdec0000007b623597a8560c9d86bd31fc1314e6f04a31c628fa\"},\n    {\"name\":\"Blockhead #2058\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2058\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef16194813fc315f000000e3d7cb24bfdf1d09c8626d41c56dc3431f59a39319\"},\n    {\"name\":\"Blockhead #414\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/414\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5eae45df874460de0000001384a868b9eb1bc087d283c9492252bb1f46531ee8\"},\n    {\"name\":\"Blockhead #590\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/590\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe65e11266dffd9870000009a5c7a12a99d9a7ee22306604d2848dacdde6de026\"},\n    {\"name\":\"Blockhead #189\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/189\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x615492b5508b3751000000465566b18b13beffb6ff6931a36c7cf5c0257bb05a\"},\n    {\"name\":\"Blockhead #1392\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1392\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x15d311dcfe46a2750000004d902da684ae12fd3b07d95b90ededa9f4c7071f59\"},\n    {\"name\":\"Blockhead #1474\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1474\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8b13ac5fc1786327000000266bdbe39c0b4115056100a013696a241afc04f0ef\"},\n    {\"name\":\"Blockhead #126\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/126\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x47fce79fdade97d700000049feddcc714a567c25466690b2b79acb9359cdaac5\"},\n    {\"name\":\"Blockhead #125\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/125\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Camouflage\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x512b5eb113ebe2880000007ae5afd64d7b8b367ad5d72537099143c0fc23480d\"},\n    {\"name\":\"Blockhead #1034\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1034\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x61001949837145db000000de793fb085b47332b13bd79ebe6efb0bbc0d809cb5\"},\n    {\"name\":\"Blockhead #1576\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1576\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7d8293c54d52996c000000349ba80a840d880fb02ff147bb10d21200323ae310\"},\n    {\"name\":\"Blockhead #30\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/30\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x86491c338aec69bd000000b676a7e9692e792d5154da9119f415b94feaf2e6d9\"},\n    {\"name\":\"Blockhead #1937\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1937\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf026cd8ebeb49f38000000ab6669428f85ca8b82011fe62bdfb94799667f98a2\"},\n    {\"name\":\"Blockhead #205\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/205\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x412d556e8d586afa000000fc0e716cd02b0c7327800122e1fad23c943dd34522\"},\n    {\"name\":\"Blockhead #1046\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1046\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x618cd2bae7750cd10000003c2465acd468da1503528ca3f029a3557615f324a6\"},\n    {\"name\":\"Blockhead #489\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/489\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1c487c39a48db31900000095767d1e869568a09ad8cf12361a1497c13eccea72\"},\n    {\"name\":\"Blockhead #1016\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1016\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfeb2fa15d933b8c100000080235a5cc754a30f4346138c44a929663339e86d45\"},\n    {\"name\":\"Blockhead #741\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/741\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b93eda45dbcdeb90000007ce83a148c848164872700cc95c1a8da89b5ae292a\"},\n    {\"name\":\"Blockhead #1191\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1191\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7651cfa40a819748000000475c32ecf14730a548ee335302438b9b2776d88266\"},\n    {\"name\":\"Blockhead #1347\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1347\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6a58a402380f7d71000000415a4afca54895f8edc8b0ab4313ef5cba67360853\"},\n    {\"name\":\"Blockhead #99\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/99\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5aad2965cd190253000000dc596718ea78e5accfeec6596404ded799467c0f6f\"},\n    {\"name\":\"Blockhead #1179\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1179\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb0a172bd7fd41820000000b2666861be59600cf2cea614ed4795c48112a67727\"},\n    {\"name\":\"Blockhead #493\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/493\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2543d626a765fb15000000b9cf4659b7b02fe5b180edfd34f8d823d70894250a\"},\n    {\"name\":\"Blockhead #501\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/501\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x97ee75b60410bb190000000c9d4a6d8b781625d6f45bf2e9ccae02c56837b8a7\"},\n    {\"name\":\"Blockhead #417\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/417\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x68400ebc71046a58000000528363b8a8d4e8f92884b707dfc66cbb7ee41cc622\"},\n    {\"name\":\"Blockhead #401\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/401\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe0d6844dd4c6a14b00000093e15162c16cda71073f97d7a391dafdc064ea43d8\"},\n    {\"name\":\"Blockhead #233\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/233\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7a737dcb6891d93f0000000f14b6acffd89cbccb53f8582c225021d66b7113fa\"},\n    {\"name\":\"Blockhead #1640\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1640\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0b6ca4917e7fc88900000058278baea3a7539ab6833315e2d8ecf5dd44df9151\"},\n    {\"name\":\"Blockhead #919\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/919\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc891bec2715ddce00000009922a32fbd0259277d064d3ce94a61e9c7cd63e6af\"},\n    {\"name\":\"Blockhead #480\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/480\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7c1fd970a5c286ba000000ac813b679f3e8f9ebf455dcf107aea6f717d587d76\"},\n    {\"name\":\"Blockhead #572\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/572\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe019cd99c47779050000006aef7c0db836ecf7da77c5107b789cccc4c7ec0416\"},\n    {\"name\":\"Blockhead #1263\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1263\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcdb2f128d1acf3dc0000006f6a62f7a73bbb8aae7942ce0e9c3832b969234451\"},\n    {\"name\":\"Blockhead #1779\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1779\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x602a3e2850d4531900000019313a61e138c607655a61745c3d56ec82d62921c9\"},\n    {\"name\":\"Blockhead #59\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/59\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ff25db2eab02adf00000038f55b2984a2c70890f2da055e966b1cc3cdc6c96f\"},\n    {\"name\":\"Blockhead #1757\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1757\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xff78961d696b8bd100000017bc7c14c6f4daa6811892247d78f111ef2ca51d81\"},\n    {\"name\":\"Blockhead #28\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/28\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0e8ff542a2e7e8d9000000c5a19499765b2379f3008a4b8cf2e3bef49184b209\"},\n    {\"name\":\"Blockhead #107\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/107\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Titanium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x371f6abb28841542000000f4beb590068292f2d63216ed0abc9d61fda5e306f0\"},\n    {\"name\":\"Blockhead #1710\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1710\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1b2769647c3af4a0000001bcd7b1edad2c6304b31bbca6f4acd46e423001c9e\"},\n    {\"name\":\"Blockhead #1298\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1298\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd289a54eaf8102e000000b30b3a46fe5e26ec6fdd5d434caa9ef2037b61434a\"},\n    {\"name\":\"Blockhead #1203\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1203\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0b0aad8d1e9d9340000000ac2f8c6b831f012232533b5ff263d8a1eb7dd4117c\"},\n    {\"name\":\"Blockhead #1664\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1664\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa19cad96e4ded8760000005971a7b28efad2861766ab342e7e70dcbb01e41d00\"},\n    {\"name\":\"Blockhead #1892\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1892\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x58d17b1a603fb69800000048534a99c893aeeb7ba89f185b84971abe0a868aca\"},\n    {\"name\":\"Blockhead #1792\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1792\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7b33a4a62f0a821b000000ad5b352492b8303134f606e97c6db28ae10fb3d073\"},\n    {\"name\":\"Blockhead #1323\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1323\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe817482ebe1fe832000000e037576bcf65969531ac8ec1b089ff690717716d1c\"},\n    {\"name\":\"Blockhead #1441\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1441\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9deaa5bcdd238a60000000cf067212fc8dd119438dca8a682f75827e21fb9982\"},\n    {\"name\":\"Blockhead #1351\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1351\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8db061e45bccfbc9000000365954a5d93079acef5d8991ab9012fd2c37604b76\"},\n    {\"name\":\"Blockhead #370\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/370\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa24a9c5c6da2e6fa0000004139a7b0c9cb006406f806814669c668595f5eae16\"},\n    {\"name\":\"Blockhead #1310\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1310\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfdff01f9f0aea73e000000e7966553b9f3dc9ad7b23d438b852dc060dc51c723\"},\n    {\"name\":\"Blockhead #1701\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1701\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf57a6eb20c69d87d0000000f60682f9a706b817346605209020129da6a9d8abf\"},\n    {\"name\":\"Blockhead #1470\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1470\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcab859839db57378000000325fd2fdbc5406be81c40884eea27d9121d03b6d85\"},\n    {\"name\":\"Blockhead #1077\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1077\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x76b115937312d127000000ea5b649e9f2b42fef470ce6d24510cec3ed0bfcd79\"},\n    {\"name\":\"Blockhead #188\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/188\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Grey hoodie\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x181416189065b23b000000c5f507fbfe4c4bfd6b915f15a15adb6f0b8719efd7\"},\n    {\"name\":\"Blockhead #1223\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1223\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbee3acd94a78ac1c0000003a95a673c2bb15727e5ce1a50cae7c3d941ca4c7aa\"},\n    {\"name\":\"Blockhead #108\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/108\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x874165950b5cf7820000001f3f728e97fd2a0de22d058c550b8096e84b1771e2\"},\n    {\"name\":\"Blockhead #860\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/860\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1e191d4d61b053960000001368edb488c25d741747bf71b5487097b88886f9f0\"},\n    {\"name\":\"Blockhead #591\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/591\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb35611263024f5eb000000c72975589d7689b4c54e9a50efdb186c85e5b4d374\"},\n    {\"name\":\"Blockhead #1790\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1790\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x512acbc175410abf000000e9592a09ef49874349d78efaa49fa00704d9e50c02\"},\n    {\"name\":\"Blockhead #359\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/359\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f34ffa406b7e735000000ce5aab58c1b152e4c9a865fa3be6f0ef1ef4f921a9\"},\n    {\"name\":\"Blockhead #1142\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1142\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0af747673622072d0000001c374bb4df098d4094285e7c1977801b92b0e14fbe\"},\n    {\"name\":\"Blockhead #703\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/703\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeb9c27ab8d21df1c0000001cabc16e8fcca69ff3a3c6a5efc630490583f73f90\"},\n    {\"name\":\"Blockhead #1883\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1883\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3b24729a60b1de320000002bca4facc726118020e0410e030384f5174c6b6dd7\"},\n    {\"name\":\"Blockhead #1683\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1683\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9f36e93f593abded0000006c7a4312b4b9e31f19dcb7bf80f9c03403df0344f7\"},\n    {\"name\":\"Blockhead #532\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/532\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9920a39fde241ff5000000196a6379ef05f2d870baaab26fd7f04c8a0e2b5ba3\"},\n    {\"name\":\"Blockhead #1277\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1277\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2f10c022cf53d30f0000001fa63f31eaeff6e912b376f228f49c0da8e4040c92\"},\n    {\"name\":\"Blockhead #355\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/355\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9b3c83a888088aa6000000138862fef1a0cf15d4c3a02d99bfe079b0865d992f\"},\n    {\"name\":\"Blockhead #795\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/795\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x532ea6941146ae80000000146d4faeaeed3f8e3710bd4cd5994bcddec230b7a2\"},\n    {\"name\":\"Blockhead #347\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/347\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x165149fe45dd0764000000bf089c3b962f89758528ca3269197a264f1a380e51\"},\n    {\"name\":\"Blockhead #426\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/426\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x22c818b24eeb48220000002b2a8e36d3392d509db63f0acc8d8ddb8a14c8e3ba\"},\n    {\"name\":\"Blockhead #1135\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1135\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1c28f4afc1a03ec60000001e8f7725eb32b9ad41133cdf489ccaa3b3a7266cb9\"},\n    {\"name\":\"Blockhead #1695\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1695\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf4efc0e1bee1ca7700000010f0c733bb7faa1dd156cb316e7069d0c4962a52e9\"},\n    {\"name\":\"Blockhead #754\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/754\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x69f1924d26683a510000000d3fb9e0b14a67d2d3eccf0ad9d6786d02b95eec7a\"},\n    {\"name\":\"Blockhead #241\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/241\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3aa40603b60d9eb70000006160c328864433aade48fd9843e053cb0bdc6c73ab\"},\n    {\"name\":\"Blockhead #1593\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1593\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x85caedd015eed82500000048f62f638cc449edc8a983dbd6f24f500e51fbaad9\"},\n    {\"name\":\"Blockhead #1148\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1148\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd341206f47dbd1cf0000001466e0e9a21f7019e85b5767bc5be3c55cdd9fd114\"},\n    {\"name\":\"Blockhead #1849\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1849\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2bd17769dec32980000000eb2444a29459e91af5267d72333b7f8a2d206f43e2\"},\n    {\"name\":\"Blockhead #1141\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1141\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xecf802df8ea5e2c90000001bd46fb9a9eb73b83e1b98e177ef32d95b46f94f97\"},\n    {\"name\":\"Blockhead #1315\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1315\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7ea0abb2a12c90e3000000a96e46578b410cad0ce2bb0c7faa8bc73dcaa799a2\"},\n    {\"name\":\"Blockhead #2007\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2007\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa033e0fb47141e4d00000048bae60c8c5f2d4e4ca744a99730db50e537e5cb27\"},\n    {\"name\":\"Blockhead #981\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/981\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x309e4cf8760ec34a000000ced139a18ddf6495f37594e2b9af574451a3622990\"},\n    {\"name\":\"Blockhead #1025\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1025\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31de6097e3e791ca000000ec3da70c961fbdb997d069b66544f2e4d205be0dd8\"},\n    {\"name\":\"Blockhead #682\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/682\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x899d95a9f00bc44d0000009b148670f04ec37df7d71ee1e0b64a96dc692b03fd\"},\n    {\"name\":\"Blockhead #1078\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1078\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x33879aa619a8bbab000000493391caebcf9c28bd3c1a859e47f97de4642d19a1\"},\n    {\"name\":\"Blockhead #434\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/434\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd2a5c9c11f3da1520000003582e0bab5a16b1cfa5fbaf944d390ba71de1a34b0\"},\n    {\"name\":\"Blockhead #258\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/258\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x24046ca0dce193b3000000e7158732b4661608fc60b9a6dc9d0f997714945012\"},\n    {\"name\":\"Blockhead #504\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/504\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc4f96361e53dbe5500000046ab5911ee3ab69bfa4ac53fee3a32d2d32880769d\"},\n    {\"name\":\"Blockhead #53\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/53\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Aluminium\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1690f7d93172e92a000000a79fad851923d1a472e1e410d5924260dfa76bc7c5\"},\n    {\"name\":\"Blockhead #944\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/944\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f5e53da50665713000000fc235414e6c4a8fbff1a2c7d927a44e17b78dd434a\"},\n    {\"name\":\"Blockhead #519\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/519\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2b24c26cb79c50c4000000ead6e6078d680a77e09fc9c4792856fc9e4ccbaa93\"},\n    {\"name\":\"Blockhead #1216\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1216\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcd1f2ec7bdfbf4c500000050d3541caceac466f5ea31b7283bd18623ff3da550\"},\n    {\"name\":\"Blockhead #954\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/954\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe5a01f7cd435cf09000000d0884e23c923177ed6e9c9c8e92a4c12dc341b213a\"},\n    {\"name\":\"Blockhead #1246\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1246\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb884c4f17d49b48500000034777a8da08baa21e8d5205fbe53137ce669f399a3\"},\n    {\"name\":\"Blockhead #25\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/25\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x436ee121a0f7c11f0000008d797561b5cdf659281765af3b0861507c80c57623\"},\n    {\"name\":\"Blockhead #1603\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1603\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66fab10307603381000000872838feee52b41f5631a0d6cf1a033cd977c943bc\"},\n    {\"name\":\"Blockhead #1557\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1557\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xab054b547bf25d47000000278fef3f852ae4ad32676062b59a876f45ab63b735\"},\n    {\"name\":\"Blockhead #1626\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1626\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc466904a076d4015000000efae3206d17a8cb7b3bb5645d3722b75056692a8d0\"},\n    {\"name\":\"Blockhead #886\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/886\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x471bfb062fb3867c000000c8fb309cbe868ce41b4b5ea5371cc7889ac36b9782\"},\n    {\"name\":\"Blockhead #1940\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1940\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2be955968df86f1c000000fd3638e4aee32b54b6dfd76eeab09cd53850977c71\"},\n    {\"name\":\"Blockhead #856\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/856\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x407cb0212855a6f90000000fdb5449e9790c5828ad7fa6c2f48cd542cc6bd856\"},\n    {\"name\":\"Blockhead #350\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/350\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x081b5f436438a70d000000c329f414d56a08a92fff4d49d3a2afa2d0c30bebd6\"},\n    {\"name\":\"Blockhead #947\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/947\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6d6699b28f603cf4000000fe663ab0a16910584f96663b56a48be758dfe05fce\"},\n    {\"name\":\"Blockhead #750\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/750\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"3D glasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b27d0e57f4eed04000000d617f66af9a26331fb87ee1d083b209eb396cbebba\"},\n    {\"name\":\"Blockhead #2050\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2050\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xff9e75fb2f1660a2000000bddae217bda7ba9eb6495a5e79c3f32428dc5da9ef\"},\n    {\"name\":\"Blockhead #789\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/789\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5d115a266b46e4a0000000c7d3459daa8cd36334ef224b6d1ea77fdb312e0a4c\"},\n    {\"name\":\"Blockhead #755\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/755\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x26df577d7ec8b02c000000b42ff11eab1ff01a9b7f5a33418f52f617bf0be5cc\"},\n    {\"name\":\"Blockhead #1406\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1406\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb765bf75db28a4a30000000f6ae2c5c5904c95c2dc10c0bedd858b0705614083\"},\n    {\"name\":\"Blockhead #250\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/250\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb4cf15fb31bbca9c0000007a6e9620a4bc580a271f8adaeec86364bf1204bb1f\"},\n    {\"name\":\"Blockhead #1241\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1241\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb5e49ad35382cb3000000b784fc14aacd9660ebaa365d04b4a2f904b1460337\"},\n    {\"name\":\"Blockhead #842\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/842\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc29bbfb2a2605e7400000047d24eaf8c32a7a4a53808bcb2010856a5634168af\"},\n    {\"name\":\"Blockhead #602\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/602\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x551785822e0e8c2d0000000e727c58f35b135ca6ea3f24bcbee71f66daaf387d\"},\n    {\"name\":\"Blockhead #169\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/169\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7cb35cfe2875095600000026997ce59c2fde06959aaad3bc628f8f06a5cfb7e2\"},\n    {\"name\":\"Blockhead #920\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/920\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf3efa6db85e2aaf4000000be31563c984399d524a77f17734f6e4d1dece0b424\"},\n    {\"name\":\"Blockhead #1127\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1127\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe3ba0ad92ea6f4f40000004c12cf80e2dd883c7de34edc5b878fd38c79b5297b\"},\n    {\"name\":\"Blockhead #1488\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1488\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe2922fdf2dc44003000000ff615d458bd745cb9865aeb00bdbaf7d38febc4c41\"},\n    {\"name\":\"Blockhead #1123\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1123\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd64470a360028836000000a7fe3fe18486ea5cf0f7f20b3d78c0bdda113407a2\"},\n    {\"name\":\"Blockhead #173\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/173\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue gradient\"},{\"trait_type\":\"Face\",\"value\":\"Normal\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa227a0517bdca39800000096a9bf3263ca258f773f6b2b9319fb48e14d3b9bb4\"},\n    {\"name\":\"Blockhead #974\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/974\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd279db419519101c000000d685649d8db215899b904175b556a4e0d17d472499\"},\n    {\"name\":\"Blockhead #270\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/270\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe6b263de51d2afeb000000773fc65c89f33ab4e0975fdfec74885c407d6ce415\"},\n    {\"name\":\"Blockhead #605\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/605\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5464d9563ec2a25200000033e041a1cba3662050b5cda537bd89d1d3562a2352\"},\n    {\"name\":\"Blockhead #1180\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1180\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfd9dff9308a384ac000000d6dfe41284bd4163dabbaa517d7986465381ee0772\"},\n    {\"name\":\"Blockhead #502\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/502\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x63354369d18d86f800000036812ac7eff90d69a2cb1fc4c92d7390071c0f8b2c\"},\n    {\"name\":\"Blockhead #1158\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1158\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7816e3586ce2f792000000c12a58f9ec93a85b81e0a1cee9472b0c91aa6baf08\"},\n    {\"name\":\"Blockhead #1523\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1523\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf77da80dbdaa796f00000057ab4592f39f0b29abb9023c7f23ecfa3470c94218\"},\n    {\"name\":\"Blockhead #1791\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1791\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xabbf76885881061a0000004529eb24dfe873ede12eb01ce9429e0a1f1eebdb5b\"},\n    {\"name\":\"Blockhead #905\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/905\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1d79391cc9b4903300000045825389a402e70453cca2bb71ad292a11908f8eb1\"},\n    {\"name\":\"Blockhead #1000\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1000\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x037e4ebf632ea351000000a7f16611eac4fc436f7130050bdc2c625bab14fc07\"},\n    {\"name\":\"Blockhead #527\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/527\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf29d446a0b959c06000000d46e40c4c8690b3924229af966ed28dd35369225b7\"},\n    {\"name\":\"Blockhead #230\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/230\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf6a95cbd478836c1000000a2ef55deba1d97d98dc5fbfeee87ba546c13e40fe9\"},\n    {\"name\":\"Blockhead #89\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/89\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8e6307f1ea3ded8d0000004cca8d0ac7ad4ccc7b0b2b0b5fd2176a6d8559fa22\"},\n    {\"name\":\"Blockhead #198\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/198\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc878e4f184acd96b000000298446e494dbc60af91c4e906e92ee72cdc3496a64\"},\n    {\"name\":\"Blockhead #573\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/573\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xded2f3ebfc641e0f000000b5713d56f592068bce4337b2b2be00aa210ffebbe7\"},\n    {\"name\":\"Blockhead #1559\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1559\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2fcdf32da4965ec700000099685b93a5a60dd5291f913562e6abe785bcd2e626\"},\n    {\"name\":\"Blockhead #352\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/352\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa524249b264c7162000000af9b2d2c9ce91d1548a35f943f9e10a399eadd8d29\"},\n    {\"name\":\"Blockhead #1057\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1057\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x91d945682e2cab3e0000006d67ea1ccb7db7d94f62b4089f59772a3da0ef6d3d\"},\n    {\"name\":\"Blockhead #299\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/299\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x19a951125baa6c5400000092d34b6da6a53de5e44cc568efceef11aa49ab681c\"},\n    {\"name\":\"Blockhead #927\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/927\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x205a0e8933302cf6000000cf2e969ea27909099f56b2a85d0fdd2cb60990d962\"},\n    {\"name\":\"Blockhead #1733\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1733\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1ff3f33519cbff6900000084ddd4239ff5ac7b6a7118741ec2185022dc401103\"},\n    {\"name\":\"Blockhead #1304\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1304\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5520093a14bc50c10000000ee25b08ff49e90a5a54a914b72ea96816dab08fe6\"},\n    {\"name\":\"Blockhead #581\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/581\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x39a28495e027fa66000000276672d1e8cc447e36af0cd174cac4a8870d2e3ab2\"},\n    {\"name\":\"Blockhead #1570\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1570\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x54390008ed6249ca0000004a5360e697792a2142e6c8ffc19910ad3204fb0bea\"},\n    {\"name\":\"Blockhead #760\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/760\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb42069bd18b873f0000000219242e7ee9c8cd9c23696aacf96590d707859cd0d\"},\n    {\"name\":\"Blockhead #1103\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1103\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x59f57b921dec0497000000268435f9b0a323db1167abe2d4d6c377fd5a7600f6\"},\n    {\"name\":\"Blockhead #1096\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1096\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x817515bc7f65ce1a00000038297fea9264df852f6f41b7cf34d30a11ebe43554\"},\n    {\"name\":\"Blockhead #907\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/907\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25ba53e97babbf02000000b59f4faf874dad15de41d70611bde9a204460ee259\"},\n    {\"name\":\"Blockhead #1442\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1442\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3fc1f51d824682680000001798f012ed0f03874e61c75e3ce6766bdd3d40836a\"},\n    {\"name\":\"Blockhead #360\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/360\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1fe57e8e1c9c41100000026a3c421af627d35a07ea870a57770e44b5c08b984\"},\n    {\"name\":\"Blockhead #1073\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1073\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa0fc07064faaa65f0000005855f7f48bf635bd08e985be31ad5c5c0c0a1dd8fd\"},\n    {\"name\":\"Blockhead #1549\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1549\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x03e5f8f85dbaa9ec00000036364e73f62d0f4d08ea4035a14f37e189cd236dd3\"},\n    {\"name\":\"Blockhead #190\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/190\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x520807c7f55407be00000054a5dbe78dbf5cda011e7386ad55e6b6ec8b6cb4f7\"},\n    {\"name\":\"Blockhead #1021\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1021\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb937afb25b5dbd8a00000089a93c169bca72d99cfdf7c0e921f4883eef58fe15\"},\n    {\"name\":\"Blockhead #619\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/619\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1ee64bcd110f84bd0000003f6a5173d52d62fa123ad1c49f8c0d14e597b73e34\"},\n    {\"name\":\"Blockhead #1156\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1156\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2befa4bfb39052dd0000003db22bc0e8e704c2228d00a02d44539b3aa91b90b0\"},\n    {\"name\":\"Blockhead #896\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/896\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf1a96ab708c701c30000004eca63c5d976eb79534e47a733dcce08bf50cdebce\"},\n    {\"name\":\"Blockhead #1013\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1013\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x53bb8c680fdd10fd0000007c6379ba8d16b82e714ba3eec405274f48071609ae\"},\n    {\"name\":\"Blockhead #731\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/731\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1152af81d8580fa40000008f5c62e7c7d0fb4a8b04e39c8d9ff3bf0dae6e6995\"},\n    {\"name\":\"Blockhead #1299\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1299\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x94216219a7b9f37400000016b25759943e82b223d6440b44fc361ac279f4e293\"},\n    {\"name\":\"Blockhead #432\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/432\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3e64fcfcb6bf543f000000403ba9a9ee4ca97059e2df44df25d4c9f5e44fa305\"},\n    {\"name\":\"Blockhead #1717\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1717\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbb5a90c9d91a3fcd00000035bc851ad1d73cc805835af6b71d6a0a5e93198e1e\"},\n    {\"name\":\"Blockhead #152\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/152\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xba54b31b722b7f440000004e949631ba1629d70e38bf267622cb6a2dd62610cf\"},\n    {\"name\":\"Blockhead #887\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/887\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x30b7860701a7217400000043336b8ab47603076572054c9c7fc4ad31fdb969dc\"},\n    {\"name\":\"Blockhead #242\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/242\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe1600d9deab58d6e000000c75c5d85f5e5feae8f5fbef6466b897803754b0c95\"},\n    {\"name\":\"Blockhead #300\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/300\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa62cf25bc7960014000000cf40d32bc47112d81bb19ca893ecbed1b12c1710ab\"},\n    {\"name\":\"Blockhead #1475\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1475\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdb1e9ba0d55885900000006dab548e9ff940465b466b49b58c31611c4e0af1f9\"},\n    {\"name\":\"Blockhead #282\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/282\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf2d1105eefc01c710000005781bdeaa2a99ecb1d8fb56afda33476756ec0f7ca\"},\n    {\"name\":\"Blockhead #143\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/143\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd19f131218e2993a000000c06c9912ce3c5cfa2bd547a81fe4722287db203c90\"},\n    {\"name\":\"Blockhead #683\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/683\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9ec6b34fb3d3cfb1000000ff7afd77bbc96fa8689b0478e745ae39b5df2019cd\"},\n    {\"name\":\"Blockhead #1936\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1936\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa7d3e03a07c98dc600000029cdafdd8ae7d806a2e3bd6846976dbc617c4de8ba\"},\n    {\"name\":\"Blockhead #1688\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1688\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7434653ba1ba9c7700000084883a18ed8e20d56c21b629cfc70ad5d9a91e1f1d\"},\n    {\"name\":\"Blockhead #704\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/704\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x631ebe8056f5534600000060d1ca85a85a736434cd9816eacd3ff37124144bf7\"},\n    {\"name\":\"Blockhead #330\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/330\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4ef013c7725133d1000000acbec5f8c3394683b5bf3f949839fce1399a9eecb5\"},\n    {\"name\":\"Blockhead #129\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/129\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa7e959c03f239ac4000000f3ff2b17abe2a80c175fb6bc4aa637b330f1dbee48\"},\n    {\"name\":\"Blockhead #548\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/548\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x34a7c08693e8b02600000021752b53e6a387b371b2cd742ce32d9e21c01a9221\"},\n    {\"name\":\"Blockhead #140\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/140\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7132ea6f69685fbe000000d66877b2aa60ec2ff6f1348c24263924e3651e5b8e\"},\n    {\"name\":\"Blockhead #1377\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1377\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9e0f001bc9bb9bce000000256b7f23f7472a3f11121e06d4618411df8dbd2f36\"},\n    {\"name\":\"Blockhead #686\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/686\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb89e1b28e2b83ee30000005599d16d83101d437b870dffde68735eea642d77db\"},\n    {\"name\":\"Blockhead #1482\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1482\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x17dc062ec82257ad000000149efb6aa567dae3ff718341324765da9051f5dda9\"},\n    {\"name\":\"Blockhead #1338\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1338\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5ce2e0fb7d6d1bb3000000cc89630a96066336bff58b9b27cbda0b2e764e2909\"},\n    {\"name\":\"Blockhead #698\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/698\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99fe520b4a3e269d00000034a34b4ece560bab442126061e26e0ecab29a32dbe\"},\n    {\"name\":\"Blockhead #697\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/697\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb55a3daf94de82f0000000ec68f1fc84f5c7dcc3ef3caeeb1c39e907a48baaeb\"},\n    {\"name\":\"Blockhead #331\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/331\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa3bc4a2390a09e1400000086f73eb98913c42e13ebff2439c3cd64aab597f694\"},\n    {\"name\":\"Blockhead #1836\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1836\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5c54cea5408c1b41000000bb7256a2cf73cb9223f812a2d426bacc1dcd3843db\"},\n    {\"name\":\"Blockhead #170\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/170\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x895ac098c05985e60000003d797239cd3a50f12967cab92650986e1885e26cad\"},\n    {\"name\":\"Blockhead #780\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/780\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2195049cf29f2ec9000000d2aac1238a58cbed256f3cdbf1ae44889b7132fcdc\"},\n    {\"name\":\"Blockhead #439\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/439\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xaf9afa2373d325cf000000a83277a3ea449f733635c3ab99e783d02e0f56ecda\"},\n    {\"name\":\"Blockhead #701\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/701\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xce7ddb5973a91de0000000606570a3d93d3b0012d931bcdd27e476d4c75d44e4\"},\n    {\"name\":\"Blockhead #61\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/61\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xacd393f687f897b20000003dee7ab7a094d6b37352fddde13d2d858c4fb07655\"},\n    {\"name\":\"Blockhead #802\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/802\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd9e5fef70f156465000000d2a69037b899e4431fc88ae923c478fab80a719ee3\"},\n    {\"name\":\"Blockhead #94\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/94\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x70b8e2b49d02a3630000002854c33d961c629d8a2c4d0368659123582d4955a2\"},\n    {\"name\":\"Blockhead #1473\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1473\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74e1ce5a4d78a5cb0000006d792d1bf7695a445847d11e90ea5ac89719b0bece\"},\n    {\"name\":\"Blockhead #1633\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1633\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x69d714fa55d62032000000c0c35f23d7100953afb43fad40147f00db3ada41ca\"},\n    {\"name\":\"Blockhead #46\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/46\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7fbbb050665deb09000000b59a5720ac5af0acbf37456266284390d257ea9180\"},\n    {\"name\":\"Blockhead #263\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/263\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x12e6d00c8a212781000000b16dbd4aa09735a911debb2098d7d68305fbd4918a\"},\n    {\"name\":\"Blockhead #1094\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1094\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbbfb4778f5f521f400000014715c81e5d4b2f3d49b102eff99e21870af463592\"},\n    {\"name\":\"Blockhead #992\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/992\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9d270810381b9488000000c2953a52a1cd76711d1625c8b88fd73809eb2afe00\"},\n    {\"name\":\"Blockhead #1160\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1160\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdc50b8cbdbe82fff00000015409047dd77d786ec2588369421fba5d4a69efae0\"},\n    {\"name\":\"Blockhead #1144\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1144\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x29e7751b5868f44900000018f0b98dc7de0779623dfb870cbc648b3e7e0e4c46\"},\n    {\"name\":\"Blockhead #632\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/632\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef1f6c46f20bd7e0000000e5b3a71aa3e3d419db90dba98ebb5306171bd4f32d\"},\n    {\"name\":\"Blockhead #1229\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1229\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x4f16f650d810f7990000001f56a283d41a60f07613fdf34c10877aa360696593\"},\n    {\"name\":\"Blockhead #305\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/305\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x01a00289d0a9c890000000338a43879b5c88891b1d0887d66dcfde1657cd0d9a\"},\n    {\"name\":\"Blockhead #1702\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1702\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x73ec9e2ad8daed9d0000001eb6ae3ef3e40ef7ba30b7f49a0af54ef91b9e0a2e\"},\n    {\"name\":\"Blockhead #1896\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1896\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcf81518a3c50f4dd000000126f9b53b16dae9ce4c07e6f1e568d1295b81059bf\"},\n    {\"name\":\"Blockhead #192\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/192\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdbcda29b36f4e403000000856043509bb9d19efc03e9af93633d745c87d41e48\"},\n    {\"name\":\"Blockhead #395\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/395\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x0fe46bf16c5aeab200000071a24f5c8af89c3dfc5360717e2c382d715ea306fc\"},\n    {\"name\":\"Blockhead #663\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/663\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x724825106e4b300b00000043a7ec1093efc851ff23014a90ffec3710c843dce4\"},\n    {\"name\":\"Blockhead #354\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/354\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Visor\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe7f80f7cc178e93a000000e807e328fd57fa3016f5d515d05dd62e75fdc2a58b\"},\n    {\"name\":\"Blockhead #1999\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1999\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf55313d8090425e3000000907cc9069ac0930ec4184cd899c7eb815e3fd9e257\"},\n    {\"name\":\"Blockhead #1100\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1100\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa62c7e369ee945e00000003c79cb35d2ba5bbecc39bf455523a7c217a2a0c609\"},\n    {\"name\":\"Blockhead #855\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/855\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd2450b4301b33b9f000000e73b338af64e847f06aad9bbc637b55abe66ebfc31\"},\n    {\"name\":\"Blockhead #1801\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1801\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x04c95196b53215e300000046c62b79ae8861bd2b966d1800e2f6b4ff2d41786b\"},\n    {\"name\":\"Blockhead #224\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/224\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6ec346a1564c05ec000000cd535a1cfd44e762982a06b1e3c29ece518185fd12\"},\n    {\"name\":\"Blockhead #425\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/425\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x97329259ba60628200000073fe36f5c6bd677ada673d5961aee450fe8d804331\"},\n    {\"name\":\"Blockhead #58\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/58\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x248a7f084859cd93000000c7b43b59f4bd5e34b7c6d972a83ac2ca7bed330649\"},\n    {\"name\":\"Blockhead #752\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/752\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x10926e9eecf70a500000008a23b716e10c3c5610d49ec3f7706077cd76f23d6b\"},\n    {\"name\":\"Blockhead #1035\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1035\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf93a6d1ee88032d5000000726d3a62ae2711e7808ed0e227ab6e3437b8decb32\"},\n    {\"name\":\"Blockhead #732\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/732\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x65fe012ef2ed94a600000098c5609fa564dc192d49e83360444a2691eb31ffa4\"},\n    {\"name\":\"Blockhead #726\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/726\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfb4da0832c3bdc570000003ade6a10b4f451e56c37a62a0bbf85bda331784994\"},\n    {\"name\":\"Blockhead #500\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/500\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe8de758a7f580f17000000ff97e90bc6927fc0fd233c656f00b24409c4cbcbfa\"},\n    {\"name\":\"Blockhead #340\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/340\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x61079e788491cffa000000b95ebe15d552c9e0e32c48d0830306bfe2b24b9374\"},\n    {\"name\":\"Blockhead #472\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/472\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5170985bfc158f08000000bbd5c013d9ebf9aac6e824b66bdba6f8af8f31e070\"},\n    {\"name\":\"Blockhead #1247\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1247\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb51e57a302cdc1c7000000d17ea50ab29d46ebab1caf4ddeb8b93528f4e4b1e6\"},\n    {\"name\":\"Blockhead #8\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/8\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbdeca252b9f7dd5400000011c47bf2d1a3e65b2764a352c1e7ac58286e7cdafa\"},\n    {\"name\":\"Blockhead #775\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/775\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3f0732a34d5a2fe3000000a27561d896cfdcd3f0ebefd00f085b0c7971d49463\"},\n    {\"name\":\"Blockhead #810\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/810\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd0e6afd1b4255f1500000056838fd78b20d97f945ee9370e67227abedd058609\"},\n    {\"name\":\"Blockhead #1249\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1249\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x837d1945b7d0d380000000e723e2a3991815959dcf186a3b978b3c12b7302e68\"},\n    {\"name\":\"Blockhead #467\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/467\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x72fb1583912afa56000000567f346fe2faa80aea60df5495bb93ec020483ec4f\"},\n    {\"name\":\"Blockhead #66\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/66\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x79c67791d3ef8b4d0000004ec74aa1d71d7e730d82afb595b9e767cc8e5b2ff9\"},\n    {\"name\":\"Blockhead #321\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/321\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa8c492b8576fa6710000006b697dab88d6d2022dec435b1541b4e9968b1e0165\"},\n    {\"name\":\"Blockhead #37\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/37\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdd11f999763065aa00000078acd4288e05fa8bb13e21fde611cf1354d74a3285\"},\n    {\"name\":\"Blockhead #2004\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/2004\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc8cc223205ae97ef00000041f44a77afbf1aebdd52e23e6e96e2c8f25286a2db\"},\n    {\"name\":\"Blockhead #845\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/845\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x145155109223461e000000f3e267f7c43331f56e77c22b058dab430ebfeacc40\"},\n    {\"name\":\"Blockhead #1001\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1001\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x784f6540f1ad7fd5000000dc5b63a0eff8261a19c1ececb36c2265b225c07a0d\"},\n    {\"name\":\"Blockhead #283\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/283\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x211c1c998b04140f000000bdef40fbe9ea580ad787c2ea881074bf771f37a120\"},\n    {\"name\":\"Blockhead #297\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/297\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc0a5bc335efee259000000aa984f5edc02c9810745b3467740186e684bb76abe\"},\n    {\"name\":\"Blockhead #1047\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1047\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8826c828f264b936000000c078579db43e53955c614d37a151cd41a2f6d8ca92\"},\n    {\"name\":\"Blockhead #335\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/335\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1275a6d8f67cecc40000007123fbd0ee0950781d6eb7cbcb46bae7e82b957eb3\"},\n    {\"name\":\"Blockhead #470\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/470\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x34812d2403d4edbf00000032c8dd3fa49306280984b0b296bc99f05e07858ef0\"},\n    {\"name\":\"Blockhead #237\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/237\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x66ab0c210b94cecf00000084f7ba20e7a8c1eae8f234d1f4944960a276cb6e61\"},\n    {\"name\":\"Blockhead #106\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/106\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2090980c83d7a7be000000c4bca39abe8a0b5835a01fd12d413672dcdd326d22\"},\n    {\"name\":\"Blockhead #476\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/476\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb698b02bb782b889000000dc3ccff1b0a334aaad22381388644cc454ca4241bb\"},\n    {\"name\":\"Blockhead #313\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/313\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9fdbf70e48031737000000e767b969a48cc355590e2f0a22097d18c588dd94b9\"},\n    {\"name\":\"Blockhead #1798\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1798\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3bb26f8ded7ca2db00000025bf31acf93873400c6015d3c778d531b5b376ceb0\"},\n    {\"name\":\"Blockhead #120\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/120\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x7be1d3587c423725000000da84e96aa97426207d4d9dc5b20324cb6b59621af8\"},\n    {\"name\":\"Blockhead #568\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/568\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xacb1bfa907144a290000002787d417fdef5a0ad68772b31978ca1370539f9b1b\"},\n    {\"name\":\"Blockhead #847\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/847\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbd2b55f36d41d068000000437ceaf497610ffea52ef69196c184f6b3c880996a\"},\n    {\"name\":\"Blockhead #904\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/904\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xdc1aa7b450265d900000003a5962befd64b216f58b38d2aaa98513226152f3bc\"},\n    {\"name\":\"Blockhead #68\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/68\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc46c35f559a073570000006da38f8a8401791a37d9e78be3b67dbe85dae70afd\"},\n    {\"name\":\"Blockhead #1778\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1778\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x60a564bb4321fe3c0000004624fcb6ff127632a07d09f1e54b96cd976bbc8f52\"},\n    {\"name\":\"Blockhead #1128\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1128\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xc10bf9da482c2703000000d995637ece51173273edcdd57921e97452530d6955\"},\n    {\"name\":\"Blockhead #162\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/162\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8a7afbfb4f42b49800000061d38f34c9f0fe10abe3b41c8e835e7ca47dbb5bf8\"},\n    {\"name\":\"Blockhead #1027\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1027\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x850d69f1188d70c60000005156fb9cd4d2e2ccdf427814d8717054981445d833\"},\n    {\"name\":\"Blockhead #785\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/785\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2f09e39cd35eb8dd00000049ec7b44f2a30fc6c98ac4fa29579d166d69acb367\"},\n    {\"name\":\"Blockhead #1660\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1660\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x25fe39af96f219d6000000467ebe3cacf2c66cf471d024d58f8aecfa806a42fc\"},\n    {\"name\":\"Blockhead #19\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/19\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x490d1e1f110a6a56000000ef5fe092cd9cdeb5f3cdc0db8b3c63759d2601163a\"},\n    {\"name\":\"Blockhead #12\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/12\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xd6629f6c6ff44d3b0000001caef466985237eab4af0d13a6075c0f8a376f5272\"},\n    {\"name\":\"Blockhead #372\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/372\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x67619a3e745daa89000000c5fe4219fecddd427258f7f97cbb967a9cbdda69cc\"},\n    {\"name\":\"Blockhead #240\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/240\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa022ac4202719e5800000095599dd1f2e65266b8f52f496a09bd4c3d2e7e2581\"},\n    {\"name\":\"Blockhead #223\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/223\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xfbc3892efe9b6e0f000000b2a4f5e19fd4561fed0029a43874c3683be50a1762\"},\n    {\"name\":\"Blockhead #1145\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1145\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xeb1434b31cb4a3ab00000029ac4d97faaf02c5bb08ca6acbaa4fdd82f8b2a3b9\"},\n    {\"name\":\"Blockhead #178\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/178\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xebf77e22fba4a6f60000001cc1ee3ad5137c40f9530291bf6bbc05049e060bbc\"},\n    {\"name\":\"Blockhead #312\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/312\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x536bda351373d8870000000dfa9c65af2d51b9f4f05ce3c18109e888d9ae711e\"},\n    {\"name\":\"Blockhead #90\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/90\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x98f002dda90e4ffd0000008fca46c093cebd6e80706c5dc90a225b05202cfdfd\"},\n    {\"name\":\"Blockhead #378\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/378\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2995007b0541dc500000093dada249b65a36ab772b0f79d60ff915d40ba536f\"},\n    {\"name\":\"Blockhead #172\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/172\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3522ee6b0db8668400000044ecbab0e8cff704d49b62159d2efbe2c30c6a078b\"},\n    {\"name\":\"Blockhead #161\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/161\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x9854bd34b1586738000000dfd94d1ce1c6093eaa423614d9e67ba159441bf8e1\"},\n    {\"name\":\"Blockhead #57\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/57\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x659b318b501e3f320000006a7fb34bebba576d0a2b42d2cf38be5417ef1dbe85\"},\n    {\"name\":\"Blockhead #117\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/117\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe69653950351d4ae000000f9bd3642f07dc4f7c8f7f382f4bc56b2e67f577b21\"},\n    {\"name\":\"Blockhead #150\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/150\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x43cc8bef6bbdf48b000000efd732b0ab52fcdd7e5fb6914350170cf7a22be89e\"},\n    {\"name\":\"Blockhead #1694\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1694\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x739b328918fad2400000009aea8b1dd4ec3dfe09030f6276a715fb74b3dcc61d\"},\n    {\"name\":\"Blockhead #217\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/217\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3ad4a93d8415481b000000d79bac14b1558e79894285bc4b88134a93f3364137\"},\n    {\"name\":\"Blockhead #800\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/800\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb3b7da08a967de84000000276ba3fce33d4b81341dd902dc9c3d36c9ad95298f\"},\n    {\"name\":\"Blockhead #159\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/159\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5a03a929baf867b9000000f0d84c559a5a4fd83030dc81559b401523b99ec57d\"},\n    {\"name\":\"Blockhead #429\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/429\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x06c25c4ce24898bc00000034f8352fe59c34901eab064fd03be6359d6286c963\"},\n    {\"name\":\"Blockhead #18\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/18\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x6064605dd2a2c96e000000ee82fb2c8b74002ea41fd2bdb34c05f3389663d373\"},\n    {\"name\":\"Blockhead #985\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/985\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x62e2f969e7a0c058000000956b34b3e14dcdef4ddfbc97e7a0fe72ea47f2f450\"},\n    {\"name\":\"Blockhead #292\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/292\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xec9d21e36bc5060c000000ddd46052f0b7543d8352ec4292c0a8a3a5106c3484\"},\n    {\"name\":\"Blockhead #76\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/76\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x1b4fb4da8e02ecd800000075b867fcb19089f62c50d9c64df6e48c7859248494\"},\n    {\"name\":\"Blockhead #1358\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1358\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x23f01eeb12c994d7000000f258ba24f6e5aa24ff3868dfa30ecd7f625d7eb35d\"},\n    {\"name\":\"Blockhead #444\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/444\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa1e88196554f4a0d000000fe9fc8bea54a8dbea328b791dd2b2878c389dea58b\"},\n    {\"name\":\"Blockhead #289\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/289\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x3ad420fe891b214b0000003fc8d9c69866279ef391e311ae9b6e8742e16bfa9f\"},\n    {\"name\":\"Blockhead #1260\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/1260\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa34ec119b627bac400000038904a45f8ea740d684e3bf7a69e3f1c570628ca07\"},\n    {\"name\":\"Blockhead #446\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/446\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xa56a8c552be1766e000000fe7ce3779ba789a323f2a013d34173b826dfdb40ad\"},\n    {\"name\":\"Blockhead #268\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/268\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x14bc3c080b82e64c0000009e715e9cff97001a992a8ecbc1dc1dcc40a4f40479\"},\n    {\"name\":\"Blockhead #561\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/561\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x27be75836f5f7df60000004bdfe1daf0b7f252029c23f48975ba3f3e9f3c2dc7\"},\n    {\"name\":\"Blockhead #357\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/357\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Sunglasses\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x5211d68b11ef6232000000853af233e3c397da1d0db967a295fe96b863aacf1a\"},\n    {\"name\":\"Blockhead #724\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/724\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x99171f9395cae7ad000000609ce243acfefcdcb25f02597ae6b12a1b0c5396f5\"},\n    {\"name\":\"Blockhead #137\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/137\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Dark\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcf18c1d75b66e4870000008ffacc43cb13d93692b6a3a13850036e9a43afa43c\"},\n    {\"name\":\"Blockhead #637\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/637\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xef6dfb14c6abf11300000079626fb3ec5f8faf72183ebeb89866e4516727bdde\"},\n    {\"name\":\"Blockhead #214\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/214\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Dark\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xbb0539e95dc41ae40000009dd49d5ef1dcac84be3bc2538ef5143271b9b86b61\"},\n    {\"name\":\"Blockhead #219\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/219\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2dbe7db268d0d28c000000887275e7b10725d2cd4acbba159f3fd484856e9ec5\"},\n    {\"name\":\"Blockhead #35\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/35\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb16a7ce2dbadab4b0000005372c4d0f6c9a1237e5feacb4797db35186f998d29\"},\n    {\"name\":\"Blockhead #101\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/101\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Blue\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x31ef87453ba96bff00000072a673cfe811165eb099acf7dddbfa197a614e75bf\"},\n    {\"name\":\"Blockhead #77\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/77\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Teeth\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x8427062316fa124900000020c77859fcf5287044c76c8af8078cf65e762ae156\"},\n    {\"name\":\"Blockhead #142\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/142\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Mohawk\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x60b7c3c5aa16f2c5000000bf9330dafc603bb847341e7f2d6feae23d179be546\"},\n    {\"name\":\"Blockhead #671\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/671\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Headphones\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xcb02941f7e9e909e000000b1d4921ee58ea7856c48ad8bf51e60977b8f05122e\"},\n    {\"name\":\"Blockhead #181\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/181\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Blue\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x74af41fe666bd452000000f089b7649bd6f4b19299c097416560eaa62aef8f25\"},\n    {\"name\":\"Blockhead #318\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/318\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Hair\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xe9e156bad01c7d10000000b2a26190f67bd4f8bec880f48c81453b7e16735405\"},\n    {\"name\":\"Blockhead #98\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/98\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Pink\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xb2f784fd2e636f99000000d89bc2f6eeb1a1c7f0ba614cfd07174caaf1cd1885\"},\n    {\"name\":\"Blockhead #32\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/32\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Pink\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0xf0f7a707818d2514000000ebb67d66b1d2b507f9c023057c2fddcc66a97b014b\"},\n    {\"name\":\"Blockhead #310\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/310\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Straight\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2be4dfd5a01b365800000055f4f794dde2e94f297a89b69f6ed0153c785e2624\"},\n    {\"name\":\"Blockhead #14\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/14\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Red\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2423044042d90bc8000000f363c1bdf64d89e5bc5fe0e994635b24472e0a0b0b\"},\n    {\"name\":\"Blockhead #45\",\"description\":\"Blockheads is …\",\"external_url\":\"https://www.cubeheads.net/cubehead/45\",\"image\":\"data:image/svg+xml;base64,\",\"attributes\":[{\"trait_type\":\"Type\",\"value\":\"Grey\"},{\"trait_type\":\"Face\",\"value\":\"Grey\"},{\"trait_type\":\"Side\",\"value\":\"Plain\"},{\"trait_type\":\"Top\",\"value\":\"Plain\"},{\"trait_type\":\"Eyes\",\"value\":\"Plain\"},{\"trait_type\":\"Mouth\",\"value\":\"Smile\"},{\"trait_type\":\"Accuracy\",\"value\":0},{\"trait_type\":\"Agility\",\"value\":1},{\"trait_type\":\"Speed\",\"value\":2},{\"trait_type\":\"Strength\",\"value\":3}],\"data\":\"0x2625fa90804bf763000000d7aed848e135f15a34c405b456ae5519a7ff480e6d\"}]\n}","// tslint:disable: space-before-function-paren\nimport { combineHashCodes, compare, compareArrays, equalArrays, equals, identityHash, numberHash, structuralHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n    return;\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map((x) => String(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + String(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map((x) => String(x)).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    const hashes = this.fields.map((x) => structuralHash(x));\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n    return;\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map((k) => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\nexport const Exception = declare(function Exception(message) {\n    this.stack = Error().stack;\n    this.message = message;\n}, SystemObject);\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter((k) => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map((k) => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map((k) => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n    this.message = \"The match cases were incomplete\";\n}, FSharpException);\nexport const Attribute = declare(function Attribute() { return; }, SystemObject);\n//# sourceMappingURL=Types.js.map","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","export var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n//# sourceMappingURL=Int32.js.map","export default class Uri {\n    constructor(value, kindOrUri = 1 /* Absolute */) {\n        if (typeof value === \"string\" && typeof kindOrUri === \"number\") {\n            if (kindOrUri === 1 /* Absolute */) {\n                try {\n                    this.url = new URL(value);\n                    this.kind = kindOrUri;\n                }\n                catch (e) {\n                    throw new Error(\"Invalid URI: The format of the URI could not be determined.\");\n                }\n            }\n            else if (kindOrUri === 2 /* Relative */) {\n                let isRelativeUrl = false;\n                try {\n                    const url = new URL(value);\n                    isRelativeUrl = false && url;\n                }\n                catch (e) {\n                    isRelativeUrl = true;\n                }\n                if (isRelativeUrl) {\n                    this.url = value;\n                    this.kind = kindOrUri;\n                }\n                else {\n                    throw new Error(\"uri is not a relative path\");\n                }\n            }\n            else {\n                this.url = value;\n                this.kind = kindOrUri;\n            }\n        }\n        else if (value instanceof Uri && typeof kindOrUri === \"string\") {\n            if (value.kind !== 1 /* Absolute */) {\n                throw new Error(\"base uri should has Absolute kind\");\n            }\n            this.url = new URL(kindOrUri, value.url);\n            this.kind = 1 /* Absolute */;\n        }\n        else if (value instanceof Uri && kindOrUri instanceof Uri) {\n            if (value.kind !== 1 /* Absolute */) {\n                throw new Error(\"base uri should has Absolute kind\");\n            }\n            if (kindOrUri.kind !== 2 /* Relative */) {\n                throw new Error(\"relative uri should has Relative kind\");\n            }\n            this.url = new URL(kindOrUri.url, value.url);\n            this.kind = 1 /* Absolute */;\n        }\n    }\n    parseUrl() {\n        if (this.kind === 1 /* Absolute */) {\n            return this.url;\n        }\n        if (this.kind === 0 /* RelativeOrAbsolute */) {\n            return new URL(this.url);\n        }\n        throw new Error(\"relative url can not parse as a URI\");\n    }\n    get isAbsoluteUri() {\n        try {\n            this.parseUrl();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    get scheme() {\n        const protocol = this.parseUrl().protocol;\n        return protocol.slice(0, protocol.length - 1);\n    }\n    get host() {\n        return this.parseUrl().host;\n    }\n    get absolutePath() {\n        return this.parseUrl().pathname;\n    }\n    get query() {\n        return this.parseUrl().search;\n    }\n    get pathAndQuery() {\n        const url = this.parseUrl();\n        return url.pathname + url.search;\n    }\n    get fragment() {\n        return this.parseUrl().hash;\n    }\n}\n//# sourceMappingURL=Uri.js.map","export default function quote(inputText) {\r\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var meta = {\r\n        '\\b': '\\\\b',\r\n        '\\t': '\\\\t',\r\n        '\\n': '\\\\n',\r\n        '\\f': '\\\\f',\r\n        '\\r': '\\\\r',\r\n        '\"': '\\\\\"',\r\n        '\\\\': '\\\\\\\\'\r\n    }\r\n\r\n    escapable.lastIndex = 0;\r\n    return escapable.test(inputText) ?\r\n        '\"' + inputText.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string' ? c :\r\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' :\r\n        '\"' + inputText + '\"';\r\n}","module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"log\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addWhitepaper\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"auctionId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"repeatTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"maxPrice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"minPrice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token0\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token2\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token3\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token4\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token5\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Auction\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"BlockheadData\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"burnMyBlockhead\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"enabled\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"enableWinBar\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"finalize\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"freezeMyBlockhead\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"hideBar\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"hideWinBar\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"node\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"MerkleNode\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Mint\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mintBlockhead\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"gold\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"silver\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"bronze\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mintPrizes\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockball\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockminting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocklets\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocktrophies\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"utilityFormatting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setContractAddresses\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"unfreezeMyBlockhead\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"newData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"updateData\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"title\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Whitepaper\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockballContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockletsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockmintingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blocktrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"finalized\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"realOwnerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"tokenDataMerkleRoot\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenOfOwnerByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenSVG\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"svgStringFullString\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"svgStringLength\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[8]\",\r\n\t\t\t\t\"name\": \"_traitStrings\",\r\n\t\t\t\t\"type\": \"string[8]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"utilityFormattingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"winBarEnabled\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockheads\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"awardBlocklet\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockletId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockballContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockheadsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockletsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockmintingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blocktrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"presetTokens\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockball\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockminting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocklets\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocktrophies\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"utilityFormatting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setContractAddresses\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenOfOwnerByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenSVG\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"svgStringFullString\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"svgStringLength\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[8]\",\r\n\t\t\t\t\"name\": \"_traitStrings\",\r\n\t\t\t\t\"type\": \"string[8]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"newData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"updateData\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"utilityFormattingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockheads\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32[8]\",\r\n\t\t\t\t\"name\": \"players\",\r\n\t\t\t\t\"type\": \"uint32[8]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"seed\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"scoreBlue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"scoreRed\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tournamentDate\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"awardTrophy\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"trophyId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockballContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockheadsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockletsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockmintingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blocktrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"engravingBlocktrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"presetTokens\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockball\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockminting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocklets\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocktrophies\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"utilityFormatting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setContractAddresses\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"index\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenOfOwnerByIndex\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenSVG\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"svgStringFullString\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"svgStringLength\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[8]\",\r\n\t\t\t\t\"name\": \"traitStrings\",\r\n\t\t\t\t\"type\": \"string[8]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"svgString\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"svgLength\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenSVGTest\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"length\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"pure\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"utilityFormattingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockheads\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"action\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Ball\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"s\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"x\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"I\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"b\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"LogBytes\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"b\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"LogBytes32\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userB\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userR\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"scoreB\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"scoreR\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint32[8]\",\r\n\t\t\t\t\"name\": \"players\",\r\n\t\t\t\t\"type\": \"uint32[8]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blocktrophyIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockletIndex\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"randomSeed\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Match\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p0\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p2\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p3\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p4\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p5\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p6\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p7\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Positions\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"s\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Section\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"r\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"s0\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"s1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"c\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p0\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p2\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p3\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p4\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p5\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p6\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"p7\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"State\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"dp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"dr\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"StateExcess\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tournamentId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Tournament\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"x\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addPlayer\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32\",\r\n\t\t\t\t\"name\": \"p1\",\r\n\t\t\t\t\"type\": \"uint32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32\",\r\n\t\t\t\t\"name\": \"p2\",\r\n\t\t\t\t\"type\": \"uint32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32\",\r\n\t\t\t\t\"name\": \"p3\",\r\n\t\t\t\t\"type\": \"uint32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32\",\r\n\t\t\t\t\"name\": \"p4\",\r\n\t\t\t\t\"type\": \"uint32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addTeam\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"awardPrizes\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockballContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockheadsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockletsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blockmintingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"blocktrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockheadId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"commitmentHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"commitTeams\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"t1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"t2\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"s\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"rounds\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"directPlay\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"result\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"rounds\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"seed\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32[8]\",\r\n\t\t\t\t\"name\": \"ps\",\r\n\t\t\t\t\"type\": \"uint32[8]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"allStates\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"play\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"states\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"playerCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"revealsLimit\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"stepsLimit\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"matchesLimit\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"gasRefundPriceMin\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"individualId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"processTournament\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint32[]\",\r\n\t\t\t\t\"name\": \"players\",\r\n\t\t\t\t\"type\": \"uint32[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"salt\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"revealTeams\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockball\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blockminting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocklets\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"blocktrophies\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"utilityFormatting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setContractAddresses\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"cost\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setStrategyTrainingCost\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"teamCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"blockId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"strategy\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"trainStrategy\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"utilityFormattingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","module.exports = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"cubeheads\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"auctionId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"repeatTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"maxPrice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"minPrice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token0\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token1\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token2\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token3\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token4\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"token5\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Auction\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CubeheadData\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Debug\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"text\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"DebugValue\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"n\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"MerkleNode\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Mint\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"cubeballContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"cubeheadsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"cubeletsContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"cubemintingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"cubetrophiesContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"currentAuctionsFirstId\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"empty\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32[]\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes32[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"finalize\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getAuctionPrice\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32[]\",\r\n\t\t\t\t\"name\": \"merkleNodes\",\r\n\t\t\t\t\"type\": \"bytes32[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mint\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_gasUsed\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"requestGasRefund\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"cubeball\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"cubeminting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"cubelets\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"cubetrophies\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"utilityFormatting\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setContractAddresses\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"tokenDataMerkleRoot\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"utilityFormattingContractAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenData\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32[]\",\r\n\t\t\t\t\"name\": \"merkleNodes\",\r\n\t\t\t\t\"type\": \"bytes32[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"verifyTokenData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"pure\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n//# sourceMappingURL=long.js.map","import { isValid } from \"./Int32\";\nimport * as Long from \"./lib/long\";\nexport default Long.Long;\nexport const get_Zero = Long.ZERO;\nexport const get_One = Long.ONE;\nexport const op_Addition = Long.add;\nexport const op_Subtraction = Long.subtract;\nexport const op_Multiply = Long.multiply;\nexport const op_Division = Long.divide;\nexport const op_Modulus = Long.modulo;\nexport const op_UnaryNegation = Long.negate;\nexport const op_LeftShift = Long.shiftLeft;\nexport const op_RightShift = Long.shiftRight;\nexport const op_RightShiftUnsigned = Long.shiftRightUnsigned;\nexport const op_BitwiseAnd = Long.and;\nexport const op_BitwiseOr = Long.or;\nexport const op_ExclusiveOr = Long.xor;\nexport const op_LogicalNot = Long.not;\nexport const op_LessThan = Long.lessThan;\nexport const op_LessThanOrEqual = Long.lessThanOrEqual;\nexport const op_GreaterThan = Long.greaterThan;\nexport const op_GreaterThanOrEqual = Long.greaterThanOrEqual;\nexport const op_Equality = Long.equals;\nexport const op_Inequality = Long.notEquals;\nexport const equals = Long.equals;\nexport const compare = Long.compare;\nexport const fromInt = Long.fromInt;\nexport const fromBits = Long.fromBits;\nexport const fromBytes = Long.fromBytes;\nexport const fromNumber = Long.fromNumber;\nexport const fromString = Long.fromString;\nexport const fromValue = Long.fromValue;\nexport const toInt = Long.toInt;\nexport const toBytes = Long.toBytes;\nexport const toNumber = Long.toNumber;\nexport const toString = Long.toString;\nexport const getLowBits = Long.getLowBits;\nexport const getHighBits = Long.getHighBits;\nexport const getLowBitsUnsigned = Long.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = Long.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && Long.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return Long.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return Long.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, Long.ZERO];\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(Long.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return Long.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = Long.compare(step, unsigned ? Long.UZERO : Long.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = Long.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Long.js.map","namespace Fable.Parsimmon\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\ntype ParseResult<'t> =\r\n    abstract status : bool\r\n    abstract value : 't\r\n\r\ntype IParserOffSet =\r\n    abstract offset : int\r\n    abstract line : int\r\n    abstract column : int\r\n\r\ntype TokenPosition =\r\n    { offset: int\r\n      line: int\r\n      column: int }\r\n\r\ntype NodeResult<'t> =\r\n    { name: string\r\n      value: 't\r\n      start: TokenPosition\r\n      ``end``: TokenPosition }\r\n\r\ntype IParser<'t> =\r\n    abstract map<'u> : ('t -> 'u) -> IParser<'u>\r\n    abstract parse : string -> ParseResult<'t>\r\n    abstract times : int -> IParser<'t []>\r\n    abstract times : int * int -> IParser<'t []>\r\n    abstract many : unit -> IParser<'t []>\r\n    [<Emit(\"$0.then($1)\")>]\r\n    abstract chain : IParser<'u> -> IParser<'u>\r\n    [<Emit(\"$0.chain($1)\")>]\r\n    abstract bind : ('t -> IParser<'u>) -> IParser<'u>\r\n    abstract skip : IParser<'u> -> IParser<'t>\r\n    abstract sepBy : IParser<'u> -> IParser<'t []>\r\n    abstract fallback : 't -> IParser<'t>\r\n    abstract trim : IParser<'u> -> IParser<'t>\r\n    abstract notFollowedBy : IParser<'u> -> IParser<'t>\r\n    abstract atMost : int -> IParser<'t[]>\r\n    abstract atLeast : int -> IParser<'t[]>\r\n    [<Emit(\"$0.or($1)\")>]\r\n    abstract orTry : IParser<'t> -> IParser<'t>\r\n    abstract sepBy1 : IParser<'u> -> IParser<'t []>\r\n    [<Emit(\"$0.node($1)\")>]\r\n    abstract node : string -> IParser<NodeResult<'t>>\r\n\r\nmodule Parsimmon =\r\n    let parseRaw (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n\r\n    let parse (input: string) (parser: IParser<'t>) =\r\n        parser.parse input\r\n        |> fun result ->\r\n            match result.status with\r\n            | true -> Some result.value\r\n            | false -> None\r\n\r\n    /// A parser that consumes no input and yields an object an object representing the current offset into the parse: it has a 0-based character offset property and 1-based line and column properties\r\n    let index : IParser<IParserOffSet> =\r\n        import \"index\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a new parser which tries parser, and if it fails uses otherParser. Example:\r\n    let orTry (otherParser: IParser<'t>) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.orTry(otherParser)\r\n\r\n    /// Returns a new parser that tries to parse the input exactly `n` times\r\n    let times<'t> (n: int) (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.times n\r\n\r\n    /// Expects parser at least n times. Yields an array of the results.\r\n    let atLeast (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atLeast n\r\n\r\n\r\n    /// Expects parser at most n times. Yields an array of the results.\r\n    let atMost (n: int) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.atMost n\r\n\r\n    let skip (skipped: IParser<'u>) (keep: IParser<'t>) : IParser<'t> =\r\n        keep.skip skipped\r\n\r\n    let many (parser : IParser<'t>) : IParser<'t[]> =\r\n        parser.many()\r\n\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1))\")>]\r\n    let regex (pattern: string) : IParser<string> = jsNative\r\n    /// Returns a parser that looks for a match to the regexp and yields the entire text matched. The regexp will always match starting at the current parse location.\r\n    [<Import(\"regexp\", \"./Parsimmon.js\"); Emit(\"$0(new RegExp($1), $2)\")>]\r\n    let regexGroupNumber (pattern: string) (groupNumber: int): IParser<string> = jsNative\r\n    let ofLazy (f: unit -> IParser<'t>) : IParser<'t> =\r\n        import \"lazy\" \"./Parsimmon.js\"\r\n\r\n    /// This is the same as Parsimmon.sepBy, but matches the parser at least once.\r\n    let seperateByAtLeastOne (seperator : IParser<'u>) (parser: IParser<'t>) : IParser<'t[]> =\r\n        parser.sepBy1(seperator)\r\n\r\n    /// Expects parser \"after\" to follow parser \"before\", and yields the result of \"before\".\r\n    let chain  (after: IParser<'u>) (before: IParser<'t>) : IParser<'u> =\r\n        before.chain after\r\n\r\n    /// Returns a new parser which tries parser \"p\", and on success calls the function \"f\" with the result of the parse, which is expected to return another parser, which will be tried next. This allows you to dynamically decide how to continue the parse, which is impossible with the other combinators.\r\n    let bind (f: 't -> IParser<'u>) (p: IParser<'t>) : IParser<'u> =\r\n        p.bind f\r\n\r\n    /// A parser that consumes one letter\r\n    let letter : IParser<string> =\r\n        import \"letter\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that tries `parser` and succeeds if `parser` is able to parse between `min` and `max` times\r\n    let timesBetween (min: int) (max: int) (parser: IParser<'u>) =\r\n        parser.times(min, max)\r\n\r\n    /// A parser that consumes one or more letters\r\n    let letters : IParser<string[]> =\r\n        import \"letters\" \"./Parsimmon.js\"\r\n\r\n    /// A parser that expects to be at the end of the input (zero characters left).\r\n    let endOfFile : IParser<string> =\r\n        import \"eof\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that looks for anything but whatever \"p\" wants to parse, and does not consume it. Yields the same result as \"before\".\r\n    let notFollowedBy (p: IParser<'u>) (before: IParser<'t>) : IParser<'t> =\r\n        before.notFollowedBy p\r\n\r\n    /// Returns a parser that doesn't consume any input, and yields the given value\r\n    let succeed (value: 't) : IParser<'t> =\r\n        import \"succeed\" \"./Parsimmon.js\"\r\n\r\n    /// Parses using parser, but does not consume what it parses. Yields an empty string.\r\n    let lookahead (parser: IParser<'t>) : IParser<string> =\r\n        import \"lookahead\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one digit\r\n    let digit : IParser<string> =\r\n        import \"digit\" \"./Parsimmon.js\"\r\n\r\n    // A parser that consumes one or more digits\r\n    let digits : IParser<string[]> =\r\n        digit\r\n        |> many\r\n\r\n    /// Returns a new parser which tries \"parser\" and, if it fails, yields value without consuming any input.\r\n    let fallback (value: 't) (parser: IParser<'t>) : IParser<'t> =\r\n        parser.fallback value\r\n\r\n    let seperateBy (content: IParser<'u>) (others: IParser<'t>) : IParser<'t[]> =\r\n        others.sepBy(content)\r\n\r\n    let between (left: IParser<'t>) (right: IParser<'u>) (middle: IParser<'v>) =\r\n        left\r\n        |> chain middle\r\n        |> skip right\r\n\r\n    /// Transforms the parsed value of the given parser.\r\n    let map (f: 't -> 'u) (parser: IParser<'t>) = parser.map f\r\n\r\n    /// Alias of Parsimmon.concat\r\n    let tie (parser: IParser<string[]>) : IParser<string> =\r\n        map (String.concat \"\") parser\r\n\r\n    /// A parser that consumes and yields the next character of the input.\r\n    let any : IParser<string> =\r\n        import \"any\" \"./Parsimmon.js\"\r\n\r\n    /// Accepts any number of parsers, yielding the value of the first one that succeeds, backtracking in between.\r\n    let choose (ps: IParser<'t> list) : IParser<'t> =\r\n        List.reduce (fun acc parser -> acc.orTry(parser)) ps\r\n\r\n    /// A parser that consumes and yields the entire remainder of the input.\r\n    let all : IParser<string> =\r\n        import \"all\"  \"./Parsimmon.js\"\r\n\r\n    /// Returns a failing parser with the given message.\r\n    let fail (input: string) : IParser<string> =\r\n        import \"fail\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that yield a single character if it passes the predicate function.\r\n    let satisfy (f: string -> bool) : IParser<string> =\r\n        import \"test\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser yield a string containing all the next characters that pass the predicate \"f\"\r\n    let takeWhile (f: string -> bool) : IParser<string> =\r\n        import \"takeWhile\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that can only parse the exact given input string\r\n    let str (input: string) : IParser<string> =\r\n        import \"string\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that parses any of the characters of the input string\r\n    let oneOf (input: string) : IParser<string> =\r\n        import \"oneOf\" \"./Parsimmon.js\"\r\n\r\n    let whitespace : IParser<string> =\r\n        import \"whitespace\" \"./Parsimmon.js\"\r\n\r\n    let optionalWhitespace : IParser<string> =\r\n        import \"optWhitespace\" \"./Parsimmon.js\"\r\n\r\n    /// Returns a parser that succeeds one or more times\r\n    let atLeastOneOrMany (parser: IParser<'t>) : IParser<'t[]> =\r\n        atLeast 1 parser\r\n\r\n    let stringReturn (input: string) (value: 't) : IParser<'t> =\r\n        str input\r\n        |> map (fun _ -> value)\r\n\r\n    /// Returns a parser that parses comsumes any character of a string other than the characters of the input string\r\n    let noneOf (input: string) : IParser<string> =\r\n        import \"noneOf\" \"./Parsimmon.js\"\r\n\r\n    let seq2 (p1: IParser<'t>) (p2:IParser<'u>) :  IParser<'t * 'u> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let trim (trimmed: IParser<'a>) (p: IParser<'t>) : IParser<'t> =\r\n        p.trim trimmed\r\n\r\n    /// Equivalent to `parser.map (String.concat \"\")`\r\n    let concat (parser: IParser<string[]>) : IParser<string> =\r\n        parser.map (String.concat \"\")\r\n\r\n    let seq3 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>) :  IParser<'t * 'u * 'v> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq4 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3:IParser<'v>)\r\n             (p4:IParser<'w>) :  IParser<'t * 'u * 'v * 'w> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    let seq5 (p1: IParser<'t>)\r\n             (p2: IParser<'u>)\r\n             (p3: IParser<'v>)\r\n             (p4: IParser<'w>)\r\n             (p5: IParser<'q>) : IParser<'t * 'u * 'v * 'w * 'q> =\r\n        import \"seq\" \"./Parsimmon.js\"\r\n\r\n    /// Equivalent to `parser.node(\"description\")`\r\n    let node<'t> description (p:IParser<'t>) = p.node(description)","namespace Fable.SimpleJson\r\n\r\nopen Fable.Parsimmon\r\n\r\n#nowarn \"40\"\r\n\r\nmodule Parser =\r\n\r\n    let digits = \r\n        Parsimmon.digit \r\n        |> Parsimmon.atLeastOneOrMany\r\n        |> Parsimmon.concat\r\n\r\n    let jint = digits |> Parsimmon.map float\r\n\r\n    let negJint = \r\n        Parsimmon.seq2 (Parsimmon.str \"-\") jint \r\n        |> Parsimmon.map (fun (sign, number) -> -number)\r\n\r\n    let jfloat =\r\n        let floatWithComma =\r\n            Parsimmon.regex \"-?(0|[1-9][0-9]*)?[.][0-9]+([eE][+-]?[0-9]+)?\"\r\n        let floatWithoutComma =\r\n            Parsimmon.regex \"-?[1-9][0-9]*[eE][+-]?[0-9]+\"\r\n\r\n        [ floatWithComma; floatWithoutComma ]\r\n        |> Parsimmon.choose\r\n        |> Parsimmon.map float\r\n\r\n    let jnumber = \r\n        [jfloat; jint; negJint] \r\n        |> Parsimmon.choose\r\n        |> Parsimmon.map JNumber\r\n\r\n    let jbool = \r\n        [ Parsimmon.stringReturn \"true\" (JBool true)\r\n          Parsimmon.stringReturn \"false\" (JBool false)]\r\n        |> Parsimmon.choose\r\n\r\n    let jnull = Parsimmon.stringReturn \"null\" JNull\r\n\r\n    let stringLiteral =\r\n        let escape =  \r\n            Parsimmon.oneOf \"\\\"\\\\/bfnrt\"\r\n            |> Parsimmon.map(function\r\n                | \"b\" -> \"\\b\"\r\n                | \"f\" -> \"\\u000C\"\r\n                | \"n\" -> \"\\n\"\r\n                | \"r\" -> \"\\r\"\r\n                | \"t\" -> \"\\t\"\r\n                | c   -> c) // every other char is mapped to itself\r\n\r\n        let escapedCharSnippet = \r\n            Parsimmon.seq2 (Parsimmon.str \"\\\\\") escape\r\n            |> Parsimmon.map snd\r\n\r\n        let normalCharSnippet = Parsimmon.satisfy (fun c -> c <> \"\\\"\" && c <> \"\\\\\")\r\n\r\n        let anyCharSnippet = \r\n            normalCharSnippet\r\n            |> Parsimmon.orTry escapedCharSnippet\r\n            |> Parsimmon.many\r\n            |> Parsimmon.concat\r\n\r\n        anyCharSnippet\r\n        |> Parsimmon.between (Parsimmon.str \"\\\"\") (Parsimmon.str \"\\\"\")\r\n        \r\n    let jstring = stringLiteral.map JString\r\n\r\n    let withWhitespace p = \r\n        Parsimmon.between (Parsimmon.optionalWhitespace) (Parsimmon.optionalWhitespace) p\r\n        \r\n    let jvalue = \r\n        [ jnull; jbool; jnumber; jstring ]\r\n        |> List.map withWhitespace\r\n        |> Parsimmon.choose\r\n    \r\n    let comma = withWhitespace (Parsimmon.str \",\")\r\n \r\n    let rec json = Parsimmon.ofLazy <| fun () ->\r\n        \r\n        let leftBracket = withWhitespace (Parsimmon.str \"[\")\r\n        let rightBracket = withWhitespace (Parsimmon.str \"]\")\r\n                    \r\n        let arrayValue = Parsimmon.seperateBy comma json\r\n        \r\n        let jarray = \r\n            arrayValue\r\n            |> Parsimmon.between leftBracket rightBracket\r\n            |> Parsimmon.map (List.ofArray >> JArray)\r\n\r\n        let leftBrace = withWhitespace (Parsimmon.str \"{\")\r\n        let rightBrace = withWhitespace (Parsimmon.str \"}\")\r\n            \r\n        let keyValues = \r\n            Parsimmon.seq3 \r\n                (withWhitespace stringLiteral)\r\n                (withWhitespace (Parsimmon.str \":\"))\r\n                (withWhitespace json)\r\n            |> Parsimmon.map (fun (key, _ , value) -> key,value)\r\n            |> Parsimmon.seperateBy comma\r\n\r\n        let jobject = \r\n            keyValues\r\n            |> Parsimmon.between leftBrace rightBrace\r\n            |> Parsimmon.map (List.ofArray >> Map.ofList >> JObject)\r\n\r\n        [jvalue; jarray; jobject]\r\n        |> Parsimmon.choose\r\n        \r\n    let jsonParser = withWhitespace json\r\n","namespace Fable.SimpleJson\r\n\r\nopen Fable.Core\r\nopen Fable.Parsimmon\r\nopen Parser\r\nopen Fable.Import\r\nopen System\r\nopen Fable.Core.JsInterop\r\n\r\n[<AutoOpen>]\r\nmodule InteropUtil =\r\n    [<Emit(\"Array.from($0)\")>]\r\n    let arrayFrom (xs: obj) : obj = jsNative\r\n    [<Emit(\"$1[$0]\")>]\r\n    let get<'a> (key: string) (x: obj) : 'a = jsNative\r\n    [<Emit(\"$0 instanceof Date\")>]\r\n    let isDate (x: obj) = jsNative\r\n    [<Emit(\"$0 in $1\")>]\r\n    let hasKey (key: string) (x: 'a) = jsNative\r\n    let isDateOffset (x: obj) = isDate x && hasKey \"offset\" x\r\n    [<Emit(\"typeof $0\")>]\r\n    let getTypeOf (x: obj) : string = jsNative\r\n    let isObjectLiteral (x: obj) = getTypeOf x = \"object\"\r\n    let isBigInt (x: obj) =\r\n        not (isNull x)\r\n        && isObjectLiteral x\r\n        && hasKey \"signInt\" x\r\n        && hasKey \"v\" x\r\n        && hasKey \"digits\" (get \"v\" x)\r\n        && hasKey \"bound\" (get \"v\" x)\r\n\r\n    [<Emit(\"console.log($0)\")>]\r\n    let log (x: 'a) : unit = jsNative\r\n\r\n    [<Emit \"({})\">]\r\n    let createEmptyObject() : obj = jsNative\r\n\r\nmodule SimpleJson =\r\n    /// Tries to parse a string into a Json structured JSON data.\r\n    let tryParse (input: string) : Option<Json> =\r\n        Parsimmon.parse input jsonParser\r\n\r\n    /// Parses the input string into a structured JSON data. Fails with an exception if parsing fails.\r\n    let parse (input: string) : Json =\r\n        match tryParse input with\r\n        | Some result -> result\r\n        | None -> failwithf \"Could not parse the JSON input: %s\" input\r\n\r\n    /// Stringifies a Json object back to string representation\r\n    let rec toString = function\r\n        | JNull -> \"null\"\r\n        | JBool true -> \"true\"\r\n        | JBool false -> \"false\"\r\n        | JNumber number -> string number\r\n        | JString text -> sprintf \"\\\"%s\\\"\" text\r\n        | JArray elements ->\r\n            elements\r\n            |> List.map toString\r\n            |> String.concat \",\"\r\n            |> sprintf \"[%s]\"\r\n        | JObject map ->\r\n            map\r\n            |> Map.toList\r\n            |> List.map (fun (key,value) -> sprintf \"\\\"%s\\\":%s\" key (toString value))\r\n            |> String.concat \",\"\r\n            |> sprintf \"{%s}\"\r\n\r\n    [<Emit \"$2[$0] = $1\">]\r\n    let private setValue (key: string) (value: obj) (destination: obj) = jsNative\r\n    let rec toPlainObject (input: Json) : obj =\r\n        match input with\r\n        | JNull -> unbox null\r\n        | JBool value -> unbox value\r\n        | JNumber value -> unbox value\r\n        | JString value -> unbox value\r\n        | JArray values ->\r\n            let array = new ResizeArray<obj>()\r\n            for value in values do array.Add(toPlainObject value)\r\n            unbox array\r\n        | JObject map ->\r\n            let jsObject = createEmptyObject()\r\n            for (key, value) in Map.toList map do\r\n                setValue key (toPlainObject value) jsObject\r\n            unbox jsObject\r\n\r\n    let stringify (value: 'a) : string =\r\n        if isNullOrUndefined value\r\n        then JS.JSON.stringify(null)\r\n        else JS.JSON.stringify(value, (fun key jsonValue ->\r\n            if isBigInt jsonValue then\r\n                let bigInt : bigint = unbox(jsonValue)\r\n                box (string (decimal bigInt))\r\n            elif isDate jsonValue then\r\n                let dateOffset : DateTimeOffset = unbox(jsonValue)\r\n                box (dateOffset.ToString(\"o\"))\r\n            else\r\n            match jsonValue with\r\n            | :? string -> jsonValue\r\n            | :? System.Collections.IEnumerable ->\r\n                if JS.Constructors.Array.isArray(jsonValue) then jsonValue\r\n                else arrayFrom jsonValue\r\n            | _ when isBigInt jsonValue -> box (string (decimal (unbox<bigint> jsonValue)))\r\n            | _ when isDateOffset jsonValue -> box ((unbox<DateTimeOffset> jsonValue).ToString(\"O\"))\r\n            | _ -> jsonValue\r\n        ), 0)\r\n\r\n    let rec internal parseNative' (x: obj) =\r\n        match x with\r\n        | TypeCheck.NativeString str -> JString str\r\n        | TypeCheck.NativeNumber number -> JNumber number\r\n        | TypeCheck.NativeBool value -> JBool value\r\n        | TypeCheck.Null _ -> JNull\r\n        | TypeCheck.NativeArray arr -> JArray (List.ofArray (Array.map parseNative' arr))\r\n        | TypeCheck.NativeObject object ->\r\n            [ for key in JS.Constructors.Object.keys object -> key, parseNative' (get<obj> key object)  ]\r\n            |> Map.ofList\r\n            |> JObject\r\n        | _ -> JNull\r\n\r\n    /// Parses and converts the input string to Json using Javascript's native parsing capabilities\r\n    let parseNative (input: string) =\r\n        let parsed = JS.JSON.parse input\r\n        parseNative' parsed\r\n\r\n    let tryParseNative (input: string) =\r\n        try Some (parseNative input)\r\n        with | ex -> None\r\n\r\n    /// Tries to convert an object literal to the Json by calling JSON.stringify on the object first\r\n    let fromObjectLiteral (x: 'a) =\r\n        try Some (parseNative' x)\r\n        with | _ -> None\r\n\r\n    /// Transforms all keys of the objects within the Json structure\r\n    let rec mapKeys f = function\r\n        | JObject dictionary ->\r\n            dictionary\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> f key, mapKeys f value)\r\n            |> Map.ofList\r\n            |> JObject\r\n        | JArray values ->\r\n            values\r\n            |> List.map (mapKeys f)\r\n            |> JArray\r\n        | otherJsonValue -> otherJsonValue\r\n\r\n    /// Transforms object values recursively using function `f` that takes the key and value of the object and returns a new value\r\n    let rec mapbyKey f = function\r\n        | JObject dictionary ->\r\n            dictionary\r\n            |> Map.toList\r\n            |> List.map (fun (key, value) -> key, f key value)\r\n            |> Map.ofList\r\n            |> JObject\r\n        | JArray values ->\r\n            values\r\n            |> List.map (mapbyKey f)\r\n            |> JArray\r\n        | otherJsonValue -> otherJsonValue\r\n\r\n    /// Transforms keys of object selectively by path segments\r\n    let mapKeysByPath f json =\r\n        let rec mapKey xs = function\r\n            | JObject dictionary ->\r\n                dictionary\r\n                |> Map.toList\r\n                |> List.map (fun (key, value) ->\r\n                    let keyPath = List.concat [xs; [key]]\r\n                    match f keyPath with\r\n                    | Some nextKey -> nextKey, mapKey keyPath value\r\n                    | None -> key, mapKey keyPath value)\r\n                |> Map.ofList\r\n                |> JObject\r\n            | JArray values ->\r\n                values\r\n                |> List.map (mapKey xs)\r\n                |> JArray\r\n            | otherJsonValue -> otherJsonValue\r\n        mapKey [] json\r\n\r\n    let rec readPath (keys: string list) (input: Json) =\r\n        match keys, input with\r\n        | [ ], _ -> None\r\n        | [ key ], JObject dict -> Map.tryFind key dict\r\n        | firstKey :: rest, JObject dict ->\r\n            match Map.tryFind firstKey dict with\r\n            | Some (JObject nextDict) -> readPath rest (JObject nextDict)\r\n            | _ -> None\r\n        | _ -> None","namespace Fable.SimpleJson\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nmodule TypeCheck =\r\n\r\n    [<Emit(\"typeof ($0) === 'string'\")>]\r\n    let typeofString (x: obj) : bool = jsNative\r\n\r\n    [<Emit(\"typeof ($0) === 'boolean'\")>]\r\n    let typeofBool (x: obj) : bool = jsNative\r\n\r\n    [<Emit(\"typeof ($0) === 'number'\")>]\r\n    let typeofNumber (x: obj) : bool = jsNative\r\n    [<Emit(\"typeof ($0) === 'object'\")>]\r\n    let typeofObject (x: obj) : bool = jsNative\r\n\r\n    let (|NativeString|_|) (x: obj) =\r\n        if typeofString x\r\n        then Some (unbox<string> x)\r\n        else None\r\n\r\n    let (|NativeBool|_|) (x: obj) =\r\n        if typeofBool x\r\n        then Some (unbox<bool> x)\r\n        else None\r\n\r\n    let (|NativeNumber|_|) (x: obj) =\r\n        if typeofNumber x\r\n        then Some (unbox<float> x)\r\n        else None\r\n\r\n    let (|NativeObject|_|) (x: obj) =\r\n        if typeofObject x\r\n        then Some x\r\n        else None\r\n\r\n    let (|Null|_|) (x: obj) =\r\n        if isNull x\r\n        then Some x\r\n        else None\r\n\r\n    let (|NativeArray|_|) (x: obj) =\r\n        if (JS.Constructors.Array.isArray x)\r\n        then Some (unbox<obj[]> x)\r\n        else None","namespace Fable.SimpleJson\r\n\r\nopen System\r\nopen FSharp.Reflection\r\nopen Fable.Core\r\nopen System.Reflection\r\nopen System.Collections.Generic\r\n\r\n[<AutoOpen>]\r\nmodule Converter =\r\n    let (|PrimitiveType|_|) (primType: Type) =\r\n        match primType.FullName with\r\n        | \"System.String\" -> Some TypeInfo.String\r\n        | \"System.Char\" -> Some TypeInfo.Char\r\n        | \"System.Int16\" -> Some TypeInfo.Short\r\n        | \"System.Int32\" -> Some TypeInfo.Int32\r\n        | \"Microsoft.FSharp.Core.int64`1\"\r\n        | \"System.Int64\" -> Some TypeInfo.Long\r\n        | \"System.UInt16\" -> Some TypeInfo.UInt16\r\n        | \"System.UInt32\" -> Some TypeInfo.UInt32\r\n        | \"System.UInt64\" -> Some TypeInfo.UInt64\r\n        | \"System.DateTime\" -> Some TypeInfo.DateTime\r\n        | \"System.DateOnly\" -> Some TypeInfo.DateOnly\r\n        | \"System.TimeOnly\" -> Some TypeInfo.TimeOnly\r\n        | \"System.TimeSpan\" -> Some TypeInfo.TimeSpan\r\n        | \"System.DateTimeOffset\" -> Some TypeInfo.DateTimeOffset\r\n        | \"System.Boolean\" -> Some  TypeInfo.Bool\r\n        | \"System.Single\" -> Some TypeInfo.Float32\r\n        | \"System.Double\" -> Some TypeInfo.Float\r\n        | \"Microsoft.FSharp.Core.decimal`1\"\r\n        | \"System.Decimal\" -> Some TypeInfo.Decimal\r\n        | \"System.Numerics.BigInteger\" -> Some TypeInfo.BigInt\r\n        | \"Microsoft.FSharp.Core.Unit\" -> Some TypeInfo.Unit\r\n        | \"System.Guid\" -> Some TypeInfo.Guid\r\n        | \"System.Byte\" -> Some TypeInfo.Byte\r\n        | \"System.SByte\" -> Some TypeInfo.SByte\r\n        | \"System.Object\" -> Some TypeInfo.Object\r\n        | \"System.Uri\" -> Some TypeInfo.Uri\r\n        | _ -> None\r\n\r\n    let (|RecordType|_|) (t: Type) =\r\n        if FSharpType.IsRecord t\r\n        then\r\n            FSharpType.GetRecordFields t\r\n            |> Array.map (fun field -> field, field.Name, field.PropertyType)\r\n            |> Some\r\n        else None\r\n\r\n    let (|SetType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpSet`1\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|Nullable|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Nullable`1\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|UnionType|_|) (t: Type) =\r\n        if FSharpType.IsUnion t\r\n        then\r\n            FSharpType.GetUnionCases t\r\n            |> Array.map (fun info ->\r\n                let caseName = info.Name\r\n                let caseTypes = info.GetFields() |> Array.map (fun prop -> prop.PropertyType)\r\n                caseName, info, caseTypes)\r\n            |> Some\r\n        else None\r\n\r\n    let (|MapType|_|) (t: Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpMap`2\")\r\n        then\r\n            let genArgs = t.GetGenericArguments()\r\n            Some (genArgs.[0], genArgs.[1])\r\n        else None\r\n\r\n    let (|ListType|_|) (t: Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Collections.FSharpList`1\")\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let rec flattenFuncTypes (typeDef: Type) =\r\n        [| if FSharpType.IsFunction typeDef\r\n           then let (domain, range) = FSharpType.GetFunctionElements typeDef\r\n                yield! flattenFuncTypes domain\r\n                yield! flattenFuncTypes range\r\n           else yield typeDef |]\r\n\r\n    let (|FuncType|_|) (t: Type) =\r\n        if FSharpType.IsFunction t\r\n        then flattenFuncTypes t |> Some\r\n        else None\r\n\r\n    let (|ArrayType|_|) (t:Type) =\r\n        if t.IsArray\r\n        then t.GetElementType() |> Some\r\n        else None\r\n\r\n    let (|OptionType|_|) (t:Type) =\r\n        if (t.FullName.StartsWith \"Microsoft.FSharp.Core.FSharpOption`1\")\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|TupleType|_|) (t: Type) =\r\n        if FSharpType.IsTuple t\r\n        then FSharpType.GetTupleElements(t) |> Some\r\n        else None\r\n\r\n    let (|SeqType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.IEnumerable`1\"\r\n        then  t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|DictionaryType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.Dictionary\"\r\n        then\r\n          let genArgs = t.GetGenericArguments()\r\n          Some (genArgs.[0], genArgs.[1])\r\n        else\r\n          None\r\n\r\n    let (|ResizeArrayType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.List\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|HashSetType|_|) (t: Type) =\r\n        if t.FullName.StartsWith \"System.Collections.Generic.HashSet\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|AsyncType|_|) (t:Type) =\r\n        if t.FullName.StartsWith \"Microsoft.FSharp.Control.FSharpAsync`1\"\r\n        then  t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let (|PromiseType|_|) (t:Type) =\r\n        if t.FullName.StartsWith \"Fable.Core.JS.Promise`1\"\r\n        then t.GetGenericArguments().[0] |> Some\r\n        else None\r\n\r\n    let private lazyToDelayed (l:Lazy<_>) = fun () -> l.Value\r\n\r\n    let (|EnumType|_|) (t: Type) =\r\n        if t.IsEnum\r\n        then Enum.GetUnderlyingType(t) |> Some\r\n        else None\r\n\r\n    let rec private _createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\r\n        match resolvedType with\r\n        | PrimitiveType typeInfo -> typeInfo\r\n        | FuncType (types) -> TypeInfo.Func <| lazyToDelayed (lazy (Array.map createTypeInfo types))\r\n        | RecordType fields ->\r\n            let l = lazy (\r\n                let fields =\r\n                    [| for (field, fieldName, fieldType) in fields ->\r\n                        { PropertyInfo = field\r\n                          FieldName = fieldName;\r\n                          FieldType = createTypeInfo fieldType } |]\r\n                fields, resolvedType)\r\n            TypeInfo.Record (lazyToDelayed l)\r\n\r\n        | UnionType cases ->\r\n            let l = lazy (\r\n                [| for (caseName, caseInfo, caseTypes) in cases ->\r\n                    { CaseName = caseName;\r\n                      Info = caseInfo;\r\n                      CaseTypes = Array.map createTypeInfo caseTypes } |], resolvedType)\r\n            TypeInfo.Union (lazyToDelayed l)\r\n\r\n        | EnumType elemType -> TypeInfo.Enum (lazyToDelayed <| lazy (createTypeInfo elemType, resolvedType))\r\n        | ListType elemType -> TypeInfo.List (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | ResizeArrayType elemType -> TypeInfo.ResizeArray (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | HashSetType elemType -> TypeInfo.HashSet (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | ArrayType elemType -> TypeInfo.Array (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        // Checking for tuples has to happen after checking for arrays\r\n        | TupleType types -> TypeInfo.Tuple (lazyToDelayed <| lazy (Array.map createTypeInfo types))\r\n        | OptionType elemType -> TypeInfo.Option (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | Nullable elemType -> TypeInfo.Option (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | SetType elemType -> TypeInfo.Set (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | MapType (keyType, valueType) -> TypeInfo.Map (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType))\r\n        | DictionaryType (keyType, valueType) -> TypeInfo.Dictionary (lazyToDelayed <| lazy (createTypeInfo keyType, createTypeInfo valueType, valueType))\r\n        | SeqType elemType -> TypeInfo.Seq (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | AsyncType elemType -> TypeInfo.Async (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | PromiseType elemType -> TypeInfo.Promise (lazyToDelayed <| lazy (createTypeInfo elemType))\r\n        | _ -> TypeInfo.Any (lazyToDelayed <| lazy (resolvedType))\r\n\r\n    and private typeInfoCache = Dictionary<Type,Fable.SimpleJson.TypeInfo>()\r\n\r\n    and createTypeInfo (resolvedType: Type) : Fable.SimpleJson.TypeInfo =\r\n        match typeInfoCache.TryGetValue resolvedType with\r\n        | true, ti -> ti\r\n        | false, _ ->\r\n            let ti = _createTypeInfo resolvedType\r\n            // see https://github.com/fable-compiler/Fable/issues/1871\r\n            // Type equality doesn't work for anonymous records - all anon records are considered equal.\r\n            // For anonymous records, the name is the empty string.\r\n            let notAnonymousRecord =\r\n                not (String.IsNullOrEmpty resolvedType.FullName)\r\n                && not (resolvedType.FullName.EndsWith(\"`1[]\"))\r\n                && not (resolvedType.FullName.EndsWith(\"`2[]\"))\r\n\r\n            if notAnonymousRecord then\r\n                typeInfoCache.[resolvedType] <- ti\r\n                ti\r\n            else\r\n                ti\r\n\r\n    type Fable.SimpleJson.TypeInfo with\r\n        static member inline createFrom<'t> () : Fable.SimpleJson.TypeInfo =\r\n            createTypeInfo typeof<'t>\r\n\r\n    /// returns whether a type is primitive\r\n    let isPrimitive = function\r\n        | TypeInfo.Unit\r\n        | TypeInfo.String\r\n        | TypeInfo.UInt16\r\n        | TypeInfo.UInt32\r\n        | TypeInfo.UInt64\r\n        | TypeInfo.Int32\r\n        | TypeInfo.Bool\r\n        | TypeInfo.Float32\r\n        | TypeInfo.Float\r\n        | TypeInfo.Decimal\r\n        | TypeInfo.Short\r\n        | TypeInfo.Long\r\n        | TypeInfo.Byte\r\n        | TypeInfo.DateTime\r\n        | TypeInfo.DateTimeOffset\r\n        | TypeInfo.DateOnly\r\n        | TypeInfo.TimeOnly\r\n        | TypeInfo.BigInt\r\n        | TypeInfo.Guid\r\n        | TypeInfo.Option _ -> true\r\n        | otherwise -> false\r\n\r\n    /// returns whether the discrimiated union type is like a enum\r\n    let enumUnion = function\r\n        | TypeInfo.Union getCases ->\r\n            getCases()\r\n            |> fst\r\n            |> Array.forall (fun case -> Array.isEmpty case.CaseTypes)\r\n        | otherwise -> false\r\n","export function create(pattern, options) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, (limit !== null && limit !== void 0 ? limit : 0));\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, (limit !== null && limit !== void 0 ? limit : 0));\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n//# sourceMappingURL=RegExp.js.map","import { toString as dateToString } from \"./Date\";\nimport Decimal from \"./Decimal\";\nimport Long, * as _Long from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        let sign = \"\";\n        if (isNumeric(rep)) {\n            if (format.toLowerCase() !== \"x\") {\n                if (isLessThan(rep, 0)) {\n                    rep = multiply(rep, -1);\n                    sign = \"-\";\n                }\n                else {\n                    if (flags.indexOf(\" \") >= 0) {\n                        sign = \" \";\n                    }\n                    else if (flags.indexOf(\"+\") >= 0) {\n                        sign = \"+\";\n                    }\n                }\n            }\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 6;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default: // AOid\n                    rep = String(rep);\n                    break;\n            }\n        }\n        padLength = parseInt(padLength, 10);\n        if (!isNaN(padLength)) {\n            const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n            const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n            const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n            if (ch === \"0\") {\n                rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n                rep = sign + rep;\n            }\n            else {\n                rep = padLeft(sign + rep, padLength, ch, minusFlag);\n            }\n        }\n        else {\n            rep = sign + rep;\n        }\n        const once = prefix + rep;\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n//# sourceMappingURL=String.js.map","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n//# sourceMappingURL=big.js.map","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Decimal.js.map","import { defaultArg, value as value$$14, some } from \"./Option.js\";\nimport { min as min$$1, compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\nconst indexNotFoundMsg = \"An index satisfying the predicate was not found in the collection.\";\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    let acc = state;\n    const res = new cons$$7(matchValue);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(matchValue$$1);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$4;\n  const arrays$$1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$4 = arrays$$1[0], ArrayBuffer.isView(arr$$4)) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$5 = arrays$$1[idx];\n            totalLength = totalLength + arr$$5.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$6 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$6.length - 1; j++) {\n              result$$4[totalIdx] = arr$$6[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], eq);\n  const keys = [];\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      const value$$3 = keys.push(key);\n      void value$$3;\n    }\n  }\n\n  const result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  const hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    const arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  const loop = function loop($i$$12$$79) {\n    loop: while (true) {\n      const i$$12 = $i$$12$$79;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$79 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], eq$$5);\n  const keys$$1 = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    const v = array$$26[idx$$3];\n    const key$$2 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      const value$$5 = keys$$1.push(key$$2);\n      void value$$5;\n    }\n  }\n\n  const result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), (array$$28.reverse()))];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$7 = new cons$$15(count$$8);\n\n  for (let i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$30.length - 1 | 0;\n    const result$$8 = new Array(count$$9);\n\n    for (let i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$9 = new cons$$16(count$$10);\n\n  for (let i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  const array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  const res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (let i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  const res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (let i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    const count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    const count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addRangeInPlace(range, array$$47) {\n  iterate$$1(function (x$$3) {\n    const value$$7 = array$$47.push(x$$3);\n    void value$$7;\n  }, range);\n}\nexport function removeInPlace(item$$4, array$$49) {\n  const i$$18 = array$$49.indexOf(item$$4);\n\n  if (i$$18 > -1) {\n    const value$$8 = array$$49.splice(i$$18, 1);\n    void value$$8;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$52) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$19 = array$$52.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      const value$$9 = array$$52.splice(i$$19, 1);\n      void value$$9;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  const len$$7 = source$$4.length | 0;\n  const res1 = new cons$$29(len$$7);\n  const res2 = new cons$$29(len$$7);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\nexport function find(predicate$$11, array$$57) {\n  const matchValue$$5 = array$$57.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    throw new Error(indexNotFoundMsg);\n  } else {\n    const res$$4 = value$$14(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$59) {\n  return array$$59.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$61) {\n  const matchValue$$6 = array$$61.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    throw new Error(indexNotFoundMsg);\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$63) {\n  const matchValue$$7 = array$$63.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$65) {\n  const loop$$1 = function loop$$1($i$$22$$147) {\n    loop$$1: while (true) {\n      const i$$22 = $i$$22$$147;\n\n      if (i$$22 >= array$$65.length) {\n        throw new Error(indexNotFoundMsg);\n      } else {\n        const matchValue$$8 = chooser(array$$65[i$$22]);\n\n        if (matchValue$$8 != null) {\n          const res$$5 = value$$14(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$147 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$66) {\n  const loop$$2 = function loop$$2($i$$23$$150) {\n    loop$$2: while (true) {\n      const i$$23 = $i$$23$$150;\n\n      if (i$$23 >= array$$66.length) {\n        return null;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$66[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$150 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$67) {\n  const loop$$3 = function loop$$3($i$$24$$153) {\n    loop$$3: while (true) {\n      const i$$24 = $i$$24$$153;\n\n      if (i$$24 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$19(array$$67[i$$24])) {\n        return array$$67[i$$24];\n      } else {\n        $i$$24$$153 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$67.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$68) {\n  const loop$$4 = function loop$$4($i$$25$$156) {\n    loop$$4: while (true) {\n      const i$$25 = $i$$25$$156;\n\n      if (i$$25 < 0) {\n        return null;\n      } else if (predicate$$20(array$$68[i$$25])) {\n        return some(array$$68[i$$25]);\n      } else {\n        $i$$25$$156 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$68.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$69) {\n  const loop$$5 = function loop$$5($i$$26$$159) {\n    loop$$5: while (true) {\n      const i$$26 = $i$$26$$159;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$69[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$159 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$69.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$70) {\n  const loop$$6 = function loop$$6($i$$27$$162) {\n    loop$$6: while (true) {\n      const i$$27 = $i$$27$$162;\n\n      if (i$$27 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$22(array$$70[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$162 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$70.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$71) {\n  const loop$$7 = function loop$$7($i$$28$$165) {\n    loop$$7: while (true) {\n      const i$$28 = $i$$28$$165;\n\n      if (i$$28 < 0) {\n        return null;\n      } else if (predicate$$23(array$$71[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$165 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$71.length - 1);\n}\nexport function choose(chooser$$2, array$$72, cons$$30) {\n  const arr$$7 = array$$72.filter(function f$$7(x$$4) {\n    const option = chooser$$2(x$$4);\n    return option != null;\n  });\n  return map(function g(x$$5) {\n    const option$$1 = chooser$$2(x$$5);\n    return value$$14(option$$1);\n  }, arr$$7, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$74) {\n  return array$$74.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$78) {\n  for (let i$$30 = 0; i$$30 <= array$$78.length - 1; i$$30++) {\n    action(array$$78[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$79) {\n  for (let i$$31 = 0; i$$31 <= array$$79.length - 1; i$$31++) {\n    action$$1(i$$31, array$$79[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$80) {\n  return array$$80.length === 0;\n}\nexport function forAll(predicate$$25, array$$81) {\n  return array$$81.every(predicate$$25);\n}\nexport function permute(f$$8, array$$83) {\n  const size = array$$83.length | 0;\n  const res$$7 = array$$83.slice();\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$34, x$$8) {\n    const j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$7[j$$1] = x$$8;\n    checkFlags[j$$1] = 1;\n  }, array$$83);\n  const isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  for (let i$$35 = 0; i$$35 <= length; i$$35++) {\n    target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$10, y$$1) {\n    return comparer.Compare(projection$$3(x$$10), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$11, y$$2) {\n    return comparer$$1.Compare(x$$11, y$$2);\n  });\n}\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = xs$$2.slice();\n  xs$$3.sort(function comparer$$3(x$$12, y$$3) {\n    return comparer$$2.Compare(x$$12, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = xs$$4.slice();\n  xs$$5.sort(function comparer$$5(x$$13, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$13), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = xs$$6.slice();\n  xs$$7.sort(function comparer$$7(x$$14, y$$5) {\n    return comparer$$6.Compare(x$$14, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = xs$$8.slice();\n  xs$$9.sort(function comparer$$9(x$$15, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$15), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = xs$$10.slice();\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$8 = [];\n\n  const loop$$8 = function loop$$8($state$$9$$223) {\n    loop$$8: while (true) {\n      const state$$9 = $state$$9$$223;\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$16 = matchValue$$10[0];\n        const s$0027$$2 = matchValue$$10[1];\n        const value$$10 = res$$8.push(x$$16);\n        void value$$10;\n        $state$$9$$223 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$91) {\n  const len$$9 = array$$91.length | 0;\n  const res1$$1 = new Array(len$$9);\n  const res2$$1 = new Array(len$$9);\n  iterateIndexed(function (i$$36, tupledArg) {\n    res1$$1[i$$36] = tupledArg[0];\n    res2$$1[i$$36] = tupledArg[1];\n  }, array$$91);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$92) {\n  const len$$12 = array$$92.length | 0;\n  const res1$$2 = new Array(len$$12);\n  const res2$$2 = new Array(len$$12);\n  const res3 = new Array(len$$12);\n  iterateIndexed(function (i$$37, tupledArg$$1) {\n    res1$$2[i$$37] = tupledArg$$1[0];\n    res2$$2[i$$37] = tupledArg$$1[1];\n    res3[i$$37] = tupledArg$$1[2];\n  }, array$$92);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  let result$$10;\n  const len$$16 = array1$$4.length | 0;\n  result$$10 = new Array(len$$16);\n\n  for (let i$$38 = 0; i$$38 <= array1$$4.length - 1; i$$38++) {\n    result$$10[i$$38] = [array1$$4[i$$38], array2$$4[i$$38]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  let result$$11;\n  const len$$17 = array1$$5.length | 0;\n  result$$11 = new Array(len$$17);\n\n  for (let i$$39 = 0; i$$39 <= array1$$5.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$5[i$$39], array2$$5[i$$39], array3[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$93) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$93.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$17 = 0; x$$17 <= ~~Math.ceil(array$$93.length / chunkSize) - 1; x$$17++) {\n      const start$$8 = x$$17 * chunkSize | 0;\n      const slice = array$$93.slice(start$$8, start$$8 + chunkSize);\n      const value$$11 = result$$12.push(slice);\n      void value$$11;\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$96) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$96.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$96.slice(0, 0 + index$$4), array$$96.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$40 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$40 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$40], array2$$6[i$$40]);\n        i$$40 = i$$40 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$99) {\n  if (array$$99.length === 1) {\n    return array$$99[0];\n  } else if (array$$99.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$100) {\n  if (array$$100.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$100[0];\n  }\n}\nexport function tryHead(array$$101) {\n  if (array$$101.length === 0) {\n    return null;\n  } else {\n    return some(array$$101[0]);\n  }\n}\nexport function tail(array$$102) {\n  if (array$$102.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$102.slice(1);\n}\nexport function item(index$$5, array$$104) {\n  return array$$104[index$$5];\n}\nexport function tryItem(index$$6, array$$105) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$105.length) {\n    return null;\n  } else {\n    return some(array$$105[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$106, state$$10) {\n  return array$$106.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$108, state$$12) {\n  return array$$108.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$42 = 0; i$$42 <= array1$$8.length - 1; i$$42++) {\n    acc$$6 = folder$$10(i$$42, acc$$6, array1$$8[i$$42], array2$$8[i$$42]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$20, y$$7) {\n    return folder$$11(acc$$7, x$$20, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$43 = 1; i$$43 <= size$$1; i$$43++) {\n    acc$$8 = folder$$12(i$$43 - 1, array1$$10[size$$1 - i$$43], array2$$10[size$$1 - i$$43], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$21, y$$8, acc$$9) {\n    return f$$9(x$$21, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$110) {\n  if (array$$110.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$110.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$112) {\n  if (array$$112.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$112.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$22, y$$9) {\n    return acc$$10 ? predicate$$27(x$$22, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$28$$278, $array$$114$$279, $index$$7$$280) {\n  existsOffset: while (true) {\n    const predicate$$28 = $predicate$$28$$278,\n          array$$114 = $array$$114$$279,\n          index$$7 = $index$$7$$280;\n\n    if (index$$7 === array$$114.length) {\n      return false;\n    } else if (predicate$$28(array$$114[index$$7])) {\n      return true;\n    } else {\n      $predicate$$28$$278 = predicate$$28;\n      $array$$114$$279 = array$$114;\n      $index$$7$$280 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$115) {\n  return existsOffset(predicate$$29, array$$115, 0);\n}\nexport function existsOffset2($predicate$$30$$283, $array1$$13$$284, $array2$$13$$285, $index$$8$$286) {\n  existsOffset2: while (true) {\n    const predicate$$30 = $predicate$$30$$283,\n          array1$$13 = $array1$$13$$284,\n          array2$$13 = $array2$$13$$285,\n          index$$8 = $index$$8$$286;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$30$$283 = predicate$$30;\n      $array1$$13$$284 = array1$$13;\n      $array2$$13$$285 = array2$$13;\n      $index$$8$$286 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$116, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$44 = 0; i$$44 <= array$$116.length - 1; i$$44++) {\n    acc$$11 = adder.Add(acc$$11, array$$116[i$$44]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$117, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$45 = 0; i$$45 <= array$$117.length - 1; i$$45++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$117[i$$45]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$23, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$23)) > 0 ? y$$10 : x$$23;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$24, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$24) > 0 ? y$$11 : x$$24;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$25, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$25)) > 0 ? x$$25 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$26, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$26) > 0 ? x$$26 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$118, averager) {\n  if (array$$118.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$46 = 0; i$$46 <= array$$118.length - 1; i$$46++) {\n    total = averager.Add(total, array$$118[i$$46]);\n  }\n\n  return averager.DivideByInt(total, array$$118.length);\n}\nexport function averageBy(projection$$9, array$$119, averager$$1) {\n  if (array$$119.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$119.length - 1; i$$47++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$119[i$$47]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$119.length);\n}\nexport function ofSeq(source$$6, cons$$31) {\n  return cons$$31.from(source$$6);\n}\nexport function ofList(source$$7, cons$$32) {\n  return cons$$32.from(source$$7);\n}\nexport function toList(source$$8) {\n  const len$$18 = source$$8.length | 0;\n  let target$$6 = new List();\n\n  for (let i$$48 = len$$18 - 1; i$$48 >= 0; i$$48--) {\n    target$$6 = new List(source$$8[i$$48], target$$6);\n  }\n\n  return target$$6;\n}\nexport function windowed(windowSize, source$$9) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$9;\n  const len$$19 = max$$1(comparePrimitives, 0, source$$9.length - windowSize) | 0;\n  res$$9 = new Array(len$$19);\n\n  for (let i$$49 = windowSize; i$$49 <= source$$9.length; i$$49++) {\n    res$$9[i$$49 - windowSize] = source$$9.slice(i$$49 - windowSize, i$$49 - 1 + 1);\n  }\n\n  return res$$9;\n}\nexport function splitInto(chunks, array$$120) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  }\n\n  if (array$$120.length === 0) {\n    return [[]];\n  } else {\n    const result$$14 = [];\n    const chunks$$1 = min$$1(comparePrimitives, chunks, array$$120.length) | 0;\n    const minChunkSize = ~~(array$$120.length / chunks$$1) | 0;\n    const chunksWithExtraItem = array$$120.length % chunks$$1 | 0;\n\n    for (let i$$50 = 0; i$$50 <= chunks$$1 - 1; i$$50++) {\n      const chunkSize$$1 = (i$$50 < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      const start$$11 = i$$50 * minChunkSize + min$$1(comparePrimitives, chunksWithExtraItem, i$$50) | 0;\n      const slice$$1 = array$$120.slice(start$$11, start$$11 + chunkSize$$1);\n      const value$$12 = result$$14.push(slice$$1);\n      void value$$12;\n    }\n\n    return result$$14;\n  }\n}\nexport function transpose(arrays$$2, cons$$33) {\n  var value$$13;\n  const arrays$$3 = Array.isArray(arrays$$2) ? arrays$$2 : Array.from(arrays$$2);\n  const len$$21 = arrays$$3.length | 0;\n\n  if (len$$21 === 0) {\n    return new Array(0);\n  } else {\n    const lenInner = arrays$$3[0].length | 0;\n\n    if (value$$13 = (forAll(function predicate$$32(a) {\n      return a.length === lenInner;\n    }, arrays$$3)), (!value$$13)) {\n      throw new Error(\"Arrays had different lengths\");\n    }\n\n    const result$$15 = new Array(lenInner);\n\n    for (let i$$51 = 0; i$$51 <= lenInner - 1; i$$51++) {\n      result$$15[i$$51] = new cons$$33(len$$21);\n\n      for (let j$$2 = 0; j$$2 <= len$$21 - 1; j$$2++) {\n        result$$15[i$$51][j$$2] = arrays$$3[j$$2][i$$51];\n      }\n    }\n\n    return result$$15;\n  }\n}","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport const MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    const value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    void value;\n  }, items);\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return type(\"Fable.Collections.MutableSet`1\", [$gen$$4]);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          const value$$1 = getItemFromDict(this$$$6.hashMap, matchValue$$2[1]).push(k$$2);\n          void null;\n          return true;\n        } else {\n          this$$$6.hashMap.set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  const matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  const matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  const this$$$10 = this;\n  const value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  void value$$3;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  const this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  const this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  const this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  const this$$$18 = this;\n  const value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  void value$$4;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  const this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  const this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  const this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  const this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  const this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]]);\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    const s = $s$$4,\n          acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          k$$5 = $k$$5$$36,\n          t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $f$$38,\n          t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $f$$1$$40,\n          m$$1 = $m$$1$$41,\n          x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $f$$2$$43,\n          x$$2 = $x$$2$$44,\n          m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          const x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $f$$3$$46,\n          m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $f$$4$$48,\n          m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$57,\n          f$$5 = $f$$5$$58,\n          s$$2 = $s$$2$$59,\n          acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    const comparer$$9 = $comparer$$9$$64,\n          m$$6 = $m$$6$$65,\n          acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    const comparer$$12 = $comparer$$12$$74,\n          b$$3 = $b$$3$$75,\n          m$$7 = $m$$7$$76,\n          acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $comparer$$15$$86,\n          f$$8 = $f$$8$$87,\n          s$$4 = $s$$4$$88,\n          acc_0 = $acc_0$$89,\n          acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    const s$$7 = $s$$7$$95,\n          n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    const s$$9 = $s$$9$$98,\n          n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list(SetTree$00601$reflection($gen$$103))], [\"started\", bool]]);\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const comparer$$17 = $comparer$$17$$112,\n          l1 = $l1$$113,\n          l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    const m$$8 = $m$$8$$120,\n          acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$19 = $comparer$$19$$126,\n          acc$$11 = $acc$$11$$127,\n          e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return type(\"Set.FSharpSet\", [$gen$$133]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  const matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  const matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  const matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    const matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  const matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    const matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  const matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    const matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    let copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const x$$22 = res | 0;\n    const y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    keys() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    entries() {\n      const source = SetTreeModule$$$toSeq(tree$$1);\n      return map$$1(function mapping(v) {\n        return [v, v];\n      }, source);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$1, comparer$$32) {\n  const set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source$$1, comparer$$32);\n  return set;\n}\nexport function distinct(xs, comparer$$33) {\n  return delay(function () {\n    const set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$37) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$37) ? singleton$$1(x$$37) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  return delay(function () {\n    const set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$34);\n    return collect(function (x$$38) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$38)) ? singleton$$1(x$$38) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$39) {\n    return acc$$14.add(x$$39);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$40) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$40)) {\n      const value = s1$$5.delete(x$$40);\n      void value;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$41) {\n    const value$$1 = s1$$6.delete(x$$41);\n    void value$$1;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => null, undefined);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : null, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return empty();\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return null;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), null), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), null), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f((i !== null && i !== void 0 ? i : 0), x), null), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f((i !== null && i !== void 0 ? i : 0), x, y), null), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    const res = Array.from(scan((last, next) => [last[1], next], [0, 0], xs));\n    return res.length < 2 ? [] : skip(2, res);\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return null;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return null;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return null;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            const iter = {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        const v = value(res);\n                        if (v != null) {\n                            acc = v[1];\n                            return { done: false, value: v[0] };\n                        }\n                    }\n                    return { done: true, value: undefined };\n                },\n            };\n            return iter;\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return {\n        [Symbol.iterator]: () => {\n            let window = [];\n            const iter = source[Symbol.iterator]();\n            const iter2 = {\n                next: () => {\n                    let cur;\n                    while (window.length < windowSize) {\n                        if ((cur = iter.next()).done) {\n                            return { done: true, value: undefined };\n                        }\n                        window.push(cur.value);\n                    }\n                    const value = window;\n                    window = window.slice(1);\n                    return { done: false, value };\n                },\n            };\n            return iter2;\n        },\n    };\n}\nexport function transpose(source) {\n    return {\n        [Symbol.iterator]: () => {\n            const iters = Array.from(source, (x) => x[Symbol.iterator]());\n            const iter = {\n                next: () => {\n                    if (iters.length === 0) {\n                        return { done: true, value: undefined }; // empty sequence\n                    }\n                    const results = Array.from(iters, (iter) => iter.next());\n                    if (results[0].done) {\n                        if (!results.every((x) => x.done)) {\n                            throw new Error(\"Sequences have different lengths\");\n                        }\n                        return { done: true, value: undefined };\n                    }\n                    else {\n                        if (!results.every((x) => !x.done)) {\n                            throw new Error(\"Sequences have different lengths\");\n                        }\n                        const values = results.map((x) => x.value);\n                        return { done: false, value: values };\n                    }\n                },\n            };\n            return iter;\n        },\n    };\n}\n//# sourceMappingURL=Seq.js.map","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","module Blockhead.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\nopen Common\r\nopen Global\r\n\r\nlet root (model :Model option) dispatch =\r\n    match model with\r\n    | None -> div [] [str \"Blockhead not found\"]\r\n    | Some pageModel ->\r\n        match pageModel.blockhead with\r\n        | None ->\r\n            div [ClassName \"notification has-text-centered mt8\"]\r\n                [div [ClassName \"lds-dual-ring\"] []]\r\n        | Some blockhead ->\r\n            let image = \"\"\"data:image/svg+xml, \"\"\" + JS.encodeURIComponent blockhead.svg\r\n            let image = blockhead.svg\r\n            let breadCrumb =\r\n                match pageModel.previousPage with\r\n                | None -> ofOption None\r\n                | Some prevPage ->\r\n                   let text =\r\n                       match prevPage with\r\n                       | Page.Blockball -> \"Back to Blockheads\"\r\n                       | Page.Gallery -> \"Back to Gallery\"\r\n                   section [ClassName \"back-breadcrumb\"]\r\n                        [a [Href <| toHash prevPage]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-chevron-left\"] []]\r\n                             span [] [b [] [str text]]]]\r\n            div []\r\n                [\r\n                 yield\r\n                     section [ClassName \"section\"] [\r\n                        div [ClassName \"box blockhead\"]\r\n                            [breadCrumb\r\n                             div [ClassName \"has-text-centered\"] [img [ClassName \"mb4\"; Src image]]\r\n                             ViewComponents.blockheadDetail blockhead]]]\r\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n//# sourceMappingURL=AsyncBuilder.js.map","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n//# sourceMappingURL=Async.js.map","namespace Fable.SimpleHttp\r\n\r\nopen System\r\nopen Browser\r\nopen Browser.Types\r\nopen Fable.Core\r\n\r\n#if !FABLE_COMPILER\r\nopen System.Net.Http\r\n#endif\r\n\r\nmodule Blob =\r\n    /// Creates a Blob from the given input string\r\n    [<Emit(\"new Blob([$0], { 'type':'text/plain' })\")>]\r\n    let fromText (value: string) : Blob = jsNative\r\n\r\n\r\nmodule File =\r\n    /// Creates a File from the given input string and file name\r\n    [<Emit(\"new File([$0], $1, { 'type':'text/plain' })\")>]\r\n    let fromText (value: string) (fileName: string) : File = jsNative\r\n\r\n\r\n/// Utility functions to work with blob and file APIs.\r\nmodule FileReader =\r\n    /// Asynchronously reads the blob data content as string\r\n    let readBlobAsText (blob: Blob) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(blob)\r\n\r\n    /// Asynchronously reads the blob data content as string\r\n    let readFileAsText (file: File) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(file)\r\n\r\nmodule FormData =\r\n\r\n    [<Emit(\"new FormData()\")>]\r\n    /// Creates a new FormData object\r\n    let create() : FormData = jsNative\r\n\r\n    /// Appends a key-value pair to the form data\r\n    let append (key:string) (value:string) (form : FormData) : FormData =\r\n        form.append(key, value)\r\n        form\r\n\r\n    /// Appends a file to the form data\r\n    let appendFile (key: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file)\r\n        form\r\n\r\n    /// Appends a named file to the form data\r\n    let appendNamedFile (key: string) (fileName: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file, fileName)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendBlob (key: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendNamedBlob (key: string) (fileName: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob, fileName)\r\n        form\r\n\r\nmodule Headers =\r\n    let contentType value = Header(\"Content-Type\", value)\r\n    let accept value = Header(\"Accept\", value)\r\n    let acceptCharset value = Header(\"Accept-Charset\", value)\r\n    let acceptEncoding value = Header(\"Accept-Encoding\", value)\r\n    let acceptLanguage value = Header(\"Accept-Language\", value)\r\n    let acceptDateTime value = Header(\"Accept-Datetime\", value)\r\n    let authorization value = Header(\"Authorization\", value)\r\n    let cacheControl value = Header(\"Cache-Control\", value)\r\n    let connection value = Header(\"Connection\", value)\r\n    let cookie value = Header(\"Cookie\", value)\r\n    let contentMD5 value = Header(\"Content-MD5\", value)\r\n    let date value = Header(\"Date\", value)\r\n    let expect value = Header(\"Expect\", value)\r\n    let ifMatch value = Header(\"If-Match\", value)\r\n    let ifModifiedSince value = Header(\"If-Modified-Since\", value)\r\n    let ifNoneMatch value = Header(\"If-None-Match\", value)\r\n    let ifRange value = Header(\"If-Range\", value)\r\n    let IfUnmodifiedSince value = Header(\"If-Unmodified-Since\", value)\r\n    let maxForwards value = Header(\"Max-Forwards\", value)\r\n    let origin value = Header (\"Origin\", value)\r\n    let pragma value = Header(\"Pragma\", value)\r\n    let proxyAuthorization value = Header(\"Proxy-Authorization\", value)\r\n    let range value = Header(\"Range\", value)\r\n    let referer value = Header(\"Referer\", value)\r\n    let userAgent value = Header(\"User-Agent\", value)\r\n    let create key value = Header(key, value)\r\n\r\nmodule Http =\r\n\r\n    let private defaultRequest =\r\n        { url = \"\";\r\n          method = HttpMethod.GET\r\n          headers = []\r\n          withCredentials = false\r\n          overridenMimeType = None\r\n          overridenResponseType = None\r\n          timeout = None\r\n          content = BodyContent.Empty }\r\n\r\n    let private emptyResponse =\r\n        { statusCode = 0\r\n          responseText = \"\"\r\n          responseType = \"\"\r\n          responseHeaders = Map.empty\r\n          content = ResponseContent.Text \"\" }\r\n\r\n    let private splitAt (delimiter: string) (input: string) : string [] =\r\n        if String.IsNullOrEmpty input then [| input |]\r\n        else input.Split([| delimiter |], StringSplitOptions.None)\r\n\r\n    let private serializeMethod = function\r\n        | HttpMethod.GET -> \"GET\"\r\n        | HttpMethod.POST -> \"POST\"\r\n        | HttpMethod.PATCH -> \"PATCH\"\r\n        | HttpMethod.PUT -> \"PUT\"\r\n        | HttpMethod.DELETE -> \"DELETE\"\r\n        | HttpMethod.OPTIONS -> \"OPTIONS\"\r\n        | HttpMethod.HEAD -> \"HEAD\"\r\n\r\n    /// Starts the configuration of the request with the specified url\r\n    let request (url: string) : HttpRequest =\r\n        { defaultRequest with url = url }\r\n\r\n    /// Sets the Http method of the request\r\n    let method httpVerb (req: HttpRequest) =\r\n        { req with method = httpVerb }\r\n\r\n    /// Appends a header to the request configuration\r\n    let header (singleHeader: Header) (req: HttpRequest) =\r\n        { req with headers = List.append req.headers [singleHeader] }\r\n\r\n    /// Appends a list of headers to the request configuration\r\n    let headers (values: Header list) (req: HttpRequest)  =\r\n        { req with headers = List.append req.headers values }\r\n\r\n    /// Enables cross-site credentials such as cookies\r\n    let withCredentials (enabled: bool) (req: HttpRequest) =\r\n        { req with withCredentials = enabled }\r\n\r\n    /// Enabeles Http request timeout\r\n    let withTimeout (timeoutInMilliseconds: int) (req: HttpRequest) =\r\n        { req with timeout = Some timeoutInMilliseconds}\r\n\r\n    /// Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as \"text/xml\", even if the server does not report it as such.\r\n    let overrideMimeType (value: string) (req: HttpRequest) =\r\n        { req with overridenMimeType = Some value }\r\n\r\n    /// Change the expected response type from the server\r\n    let overrideResponseType (value: ResponseTypes) (req: HttpRequest) =\r\n        { req with overridenResponseType = Some value }\r\n\r\n    /// Sets the body content of the request\r\n    let content (bodyContent: BodyContent) (req: HttpRequest) : HttpRequest =\r\n        { req with content = bodyContent }\r\n\r\n    /// Sends the request to the server, this function does not throw\r\n    let send (req: HttpRequest) : Async<HttpResponse> =\r\n#if FABLE_COMPILER\r\n        Async.FromContinuations <| fun (resolve, reject, _) ->\r\n            let xhr = XMLHttpRequest.Create()\r\n            xhr.``open``(serializeMethod req.method, req.url)\r\n            xhr.onreadystatechange <- fun _ ->\r\n                if xhr.readyState = ReadyState.Done\r\n                then resolve {\r\n                    responseText =\r\n                        match xhr.responseType with\r\n                        | \"\" -> xhr.responseText\r\n                        | \"text\" -> xhr.responseText\r\n                        | _ -> \"\"\r\n\r\n                    statusCode = int xhr.status\r\n                    responseType = xhr.responseType\r\n                    content =\r\n                        match xhr.responseType with\r\n                        | (\"\" | \"text\") -> ResponseContent.Text xhr.responseText\r\n                        | \"arraybuffer\" -> ResponseContent.ArrayBuffer (unbox xhr.response)\r\n                        | \"blob\" -> ResponseContent.Blob (unbox xhr.response)\r\n                        | _ -> ResponseContent.Unknown xhr.response\r\n\r\n                    responseHeaders =\r\n                        xhr.getAllResponseHeaders()\r\n                        |> splitAt \"\\r\\n\"\r\n                        |> Array.choose (fun headerLine ->\r\n                            let parts = splitAt \":\" headerLine\r\n                            match List.ofArray parts with\r\n                            | key :: rest ->  Some (key.ToLower(), (String.concat \":\" rest).Trim())\r\n                            | otherwise -> None)\r\n                        |> Map.ofArray\r\n                }\r\n\r\n            for (Header(key, value)) in req.headers do\r\n                xhr.setRequestHeader(key, value)\r\n\r\n            xhr.withCredentials <- req.withCredentials\r\n\r\n            match req.overridenMimeType with\r\n            | Some mimeType -> xhr.overrideMimeType(mimeType)\r\n            | None -> ()\r\n\r\n            match req.overridenResponseType with\r\n            | Some ResponseTypes.Text -> xhr.responseType <- \"text\"\r\n            | Some ResponseTypes.Blob -> xhr.responseType <- \"blob\"\r\n            | Some ResponseTypes.ArrayBuffer -> xhr.responseType <- \"arraybuffer\"\r\n            | None -> ()\r\n\r\n            match req.timeout with\r\n            | Some timeout -> xhr.timeout <- timeout\r\n            | None -> ()\r\n\r\n            match req.method, req.content with\r\n            | GET, _ -> xhr.send(None)\r\n            | _, BodyContent.Empty -> xhr.send(None)\r\n            | _, BodyContent.Text value -> xhr.send(value)\r\n            | _, BodyContent.Form formData -> xhr.send(formData)\r\n            | _, BodyContent.Binary blob -> xhr.send(blob)\r\n#else\r\n        async {\r\n            try\r\n                use requestMessage = new HttpRequestMessage()\r\n                requestMessage.RequestUri <- Uri(req.url)\r\n                requestMessage.Method <-\r\n                    match req.method with\r\n                    | HttpMethod.GET     -> HttpMethod.Get\r\n                    | HttpMethod.POST    -> HttpMethod.Post\r\n                    | HttpMethod.PUT     -> HttpMethod.Put\r\n                    | HttpMethod.PATCH   -> HttpMethod \"PATCH\"\r\n                    | HttpMethod.DELETE  -> HttpMethod.Delete\r\n                    | HttpMethod.HEAD    -> HttpMethod.Head\r\n                    | HttpMethod.OPTIONS -> HttpMethod.Options\r\n                req.headers\r\n                |> Seq.iter (fun (Header (key, value)) ->\r\n                    requestMessage.Headers.Add(key, value))\r\n                use content =\r\n                    match req.content with\r\n                    | BodyContent.Text text -> new StringContent(text)\r\n                    | BodyContent.Empty -> null\r\n                    | _ -> failwith \"Only BodyContent.Text is supported in the dotnet implementation\"\r\n                requestMessage.Content <- content\r\n\r\n                use client = new HttpClient()\r\n\r\n                match req.timeout with\r\n                | Some timeout -> client.Timeout <- TimeSpan.FromMilliseconds(timeout)\r\n                | None -> ()\r\n\r\n                let! response = client.SendAsync requestMessage |> Async.AwaitTask\r\n                let! responseBody = response.Content.ReadAsStringAsync() |> Async.AwaitTask\r\n\r\n                let headers =\r\n                    response.Headers\r\n                    |> Seq.choose (fun kv ->\r\n                        kv.Value\r\n                        |> Seq.tryLast\r\n                        |> Option.map (fun value -> kv.Key, value))\r\n                    |> Map.ofSeq\r\n\r\n                return\r\n                    { statusCode = int response.StatusCode\r\n                      responseText = responseBody\r\n                      responseType = \"text\"\r\n                      responseHeaders = headers\r\n                      content = ResponseContent.Text responseBody }\r\n            with\r\n            // We're catching a lot here to mimic the behaviour of the JS\r\n            // implementation, which isn't able to expose the kind of error.\r\n            | :? ArgumentException ->\r\n                return emptyResponse // invalid uri\r\n            | :? HttpRequestException\r\n            | :? AggregateException as aggrEx when (aggrEx.InnerException :? HttpRequestException) ->\r\n                return emptyResponse // connection errors\r\n        }\r\n#endif\r\n\r\n    /// Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.\r\n    let get url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.GET\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let put url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PUT\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.\r\n    let delete url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.DELETE\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PATCH request and returns a tuple(status code * response text). This function does not throw.\r\n    let patch url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PATCH\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.\r\n    let post url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.POST\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n","module Common\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\ntype ChainConfig =\r\n    { infuraUrl: string\r\n      infuraWsUrl: string\r\n      chainId: int\r\n      chainName: string\r\n      moralisChainName: string\r\n      moralisApiKey: string\r\n      blockheadsContractAddress: string}\r\n\r\ntype Contracts =\r\n    { blockheadsContract: obj\r\n      blockmintingContract: obj\r\n      blockletsContract: obj\r\n      blockballContract: obj\r\n      blocktrophiesContract: obj }\r\n\r\nmodule Config =\r\n\r\n    let private kovan =\r\n      { infuraUrl = \"https://kovan.infura.io/v3/2ba89d75124a4e0baf363346d70820fb\"\r\n        infuraWsUrl = \"wss://kovan.infura.io/ws/v3/2ba89d75124a4e0baf363346d70820fb\"\r\n        chainId = 42\r\n        chainName = \"Kovan\"\r\n        moralisChainName = \"kovan\"\r\n        moralisApiKey = \"jpdexOGpbd1eIulwVUTz5Y1LB1dJow8ApkDhv6YukusfUIFLmVfCzagT4Dv8buWg\"\r\n        blockheadsContractAddress = \"0x9B4Fb76887ef09EB6B77F3988e19bD4606C95664\" }\r\n\r\n    let network = kovan\r\n\r\nmodule Moralis =\r\n\r\n    open Fable.SimpleHttp\r\n    open Fable.SimpleJson\r\n\r\n    type PagedResult<'t> =\r\n        { total: int\r\n          page: int\r\n          page_size: int\r\n          cursor: string\r\n          result: 't[] }\r\n\r\n    type NFT =\r\n        { token_id: int\r\n          owner_of: string\r\n          token_uri: string\r\n          symbol: string }\r\n\r\n    let getNFTs tokenAddress account =\r\n        let url = sprintf \"https://deep-index.moralis.io/api/v2/%s/nft?chain=kovan&format=decimal&token_addresses=%s\" account tokenAddress\r\n        let rec getNFTs cursor =\r\n            let url =\r\n                match cursor with\r\n                | Some cursor ->\r\n                    url + \"&cursor=\" + cursor\r\n                | None -> url\r\n            async {\r\n                let! response =\r\n                    Http.request url\r\n                        |> Http.method GET\r\n                        |> Http.header (Headers.accept \"application/json\")\r\n                        |> Http.header (Headers.create \"X-API-Key\" Config.network.moralisApiKey)\r\n                        |> Http.send\r\n                let nfts :PagedResult<NFT> = Json.parseAs response.responseText\r\n                if nfts.total = nfts.result.Length then\r\n                    return nfts.result\r\n                else\r\n                    let! rest = getNFTs (Some nfts.cursor)\r\n                    return Array.append nfts.result rest\r\n            }\r\n        getNFTs None\r\n\r\nmodule Server =\r\n\r\n    open Fable.SimpleHttp\r\n    open Fable.SimpleJson\r\n\r\n    type TokenCache =\r\n        { date: System.DateTime\r\n          user: string\r\n          tokenIndex: int\r\n          tokenUri: string }\r\n\r\n    type Nft =\r\n        { index: int\r\n          tokenUri: string\r\n          name: string }\r\n\r\n    type Team =\r\n        { date: System.DateTime\r\n          account: string\r\n          team: int[]\r\n          teamHash: string\r\n          salt: string }\r\n\r\n    type Result =\r\n        { userB: string\r\n          userR: string\r\n          scoreB: int\r\n          scoreR: int\r\n          teamB: int[]\r\n          teamR: int[]\r\n          trophyIndex: int\r\n          blockletIndex: int\r\n          date: System.DateTime }\r\n\r\n    let private baseUrl = \"https://cubeheadsserver.azurewebsites.net/api\"\r\n\r\n    let getResults account =\r\n        let url = sprintf \"%s/results?account=%s\" baseUrl account\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let results :Result[] = Json.parseAs responseTxt\r\n                return results\r\n            | _ -> return failwith <| \"an error occurred fetching results: \" + responseTxt\r\n        }\r\n\r\n    let getTeam (signedMessage, account) =\r\n        let url = sprintf \"%s/team?message=%s&account=%s\" baseUrl signedMessage account\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let team :Team = Json.parseAs responseTxt\r\n                if team.team.Length >= 6 then\r\n                    return team.team |> Array.take 4 |> Array.mapi (fun i ci -> ci, team.team.[4] = i || team.team.[5] = i)\r\n                else return [||]\r\n            | 404 -> return [||]\r\n            | _ ->\r\n                return failwith <| \"an error occurred fetching team: \" + responseTxt\r\n        }\r\n\r\n    let getTrophies account =\r\n        let url = sprintf \"%s/trophies?account=%s\" baseUrl account\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let results :TokenCache[] = Json.parseAs responseTxt\r\n                return results\r\n            | _ -> return failwith <| \"an error occurred fetching results: \" + responseTxt\r\n        }\r\n\r\n    let getBlocklets account =\r\n        let url = sprintf \"%s/blocklets?account=%s\" baseUrl account\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let results :TokenCache[] = Json.parseAs responseTxt\r\n                return results\r\n            | _ -> return failwith <| \"an error occurred fetching results: \" + responseTxt\r\n        }\r\n\r\n    let getTrophy index :Async<Nft option> =\r\n        let url = sprintf \"%s/trophy?index=%i\" baseUrl index\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let result :obj = Json.parseAs responseTxt\r\n                if result = null then return None else return Some !!result\r\n            | _ -> return failwith <| \"an error occurred fetching results: \" + responseTxt\r\n        }\r\n\r\n    let getBlocklet index :Async<Nft option> =\r\n        let url = sprintf \"%s/blocklet?index=%i\" baseUrl index\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 ->\r\n                let result :obj = Json.parseAs responseTxt\r\n                if result = null then return None else return Some !!result\r\n            | _ -> return failwith <| \"an error occurred fetching results: \" + responseTxt\r\n        }\r\n\r\n    let getAuthenticationMessage account =\r\n        let url = sprintf \"%s/authenticationMessage?account=%s\" baseUrl account\r\n        async {\r\n            let! statusCode, responseTxt = Http.get url\r\n            match statusCode with\r\n            | 200 -> return responseTxt\r\n            | _ -> return failwith <| \"an error occurred fetching authentication message: \" + responseTxt\r\n        }\r\n\r\n    let saveTeam signedMessage account (team :Team) =\r\n        let url = sprintf \"%s/team?message=%s&account=%s\" baseUrl signedMessage account\r\n        async {\r\n            let! statusCode, responseTxt = Http.post url (Json.stringify team)\r\n            match statusCode with\r\n            | 200 -> return ()\r\n            | _ -> return failwith <| \"an error occurred saving team: \" + responseTxt\r\n        }\r\n\r\ntype AccountData =\r\n    { selectedAccount: string\r\n      chainId: int\r\n      signedMessage: string option }\r\n\r\ntype BlockheadAttribute =\r\n    { trait_type: string\r\n      value: string }\r\n\r\ntype BlockheadData =\r\n    { name: string\r\n      description: string\r\n      external_url: string\r\n      attributes: BlockheadAttribute[]\r\n      data: string\r\n      image: string }\r\n\r\nlet blockheadsData : BlockheadData[] = import \"blockheads\" \"./data.js\"\r\n\r\nlet blockheadsDataByIndex =\r\n    let arr :BlockheadData[] = Array.zeroCreate blockheadsData.Length\r\n    blockheadsData |> Array.iter (fun blockhead ->\r\n        let index = blockhead.name.Substring(11) |> System.Int32.Parse\r\n        arr.[index] <- blockhead)\r\n    arr\r\n\r\nlet buildBlockheadsMerkleTree web3 =\r\n    let blockheads =\r\n        blockheadsData |> Array.choose (fun c ->\r\n           let index = c.name.Substring(11) |> System.Int32.Parse\r\n           if index > 1991 then None\r\n           else Some (index, c.data))\r\n           |> Array.sortBy fst\r\n           |> Array.map snd\r\n    let rec create (l::ls) =\r\n        match l |> Array.length with\r\n        | 1 -> l::ls\r\n        | n ->\r\n            let n2 = n / 2 + n % 2\r\n            (Array.init n2 (fun i ->\r\n                let h1 = l.[i * 2]\r\n                let h2 = let index = i * 2 + 1 in if index >= n then \"0x0\" else l.[index]\r\n                let hash :string = web3?utils?soliditySha3(createObj [\"type\", !!\"bytes32\"; \"value\", !!h1], createObj [\"type\", !!\"bytes32\"; \"value\", !!h2])\r\n                hash))::(l::ls) |> create\r\n    create [blockheads] |> List.skip 1 |> List.rev |> List.toArray\r\n\r\nlet getMerklePath (tree :string[][]) index =\r\n    tree |> Array.mapi (fun i hashes ->\r\n        let i2 = index / (1 <<< i)\r\n        let i3 = if i2 % 2 = 0 then i2 + 1 else i2 - 1\r\n        hashes.[i3])\r\n\r\nlet traitsData :obj = import \"traits\" \"./data.js\"\r\n\r\nlet traits :Map<string, Map<string, int>> =\r\n    [\"Type\", traitsData?Type |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray\r\n     \"Face\", traitsData?Face |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray\r\n     \"Side\", traitsData?Side |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray\r\n     \"Top\", traitsData?Top |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray\r\n     \"Eyes\", traitsData?Eyes |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray\r\n     \"Mouth\", traitsData?Mouth |> Array.map (fun vc -> vc?value, vc?count) |> Map.ofArray]\r\n        |> Map.ofList\r\n\r\n[<Emit(\"parseInt($0, 16)\")>]\r\nlet parseHex (str: string) : int = jsNative\r\n\r\nlet rnd = new System.Random()\r\n\r\nlet inline refEquals a b = obj.ReferenceEquals(unbox a, unbox b)\r\n\r\ntype date = System.DateTime\r\n\r\ntype KeyedItem<'t> =\r\n    { Key: string; Item: 't }\r\n\r\ntype VisualTrait = string * string\r\n\r\ntype StrategyWeighingType =\r\n    | DistanceGoal\r\n    | DistanceBall\r\n    | NumAttackers\r\n    | NumDefenders\r\n    | InvPossStrength\r\n    | InvPassStrength\r\n    | PassNotRequested\r\n\r\ntype StrategyType =\r\n    | WithBallMove\r\n    | WithBallPass\r\n    | InPoss\r\n    | OutPoss\r\n\r\ntype ShootingStrategy =\r\n    | ShootAlways\r\n    | WaitForOpportunity\r\n\r\ntype Strategy =\r\n    { weightings: Map<StrategyType, Map<StrategyWeighingType, float>>\r\n      shooting: ShootingStrategy\r\n      score: float }\r\n\r\nmodule Strategy =\r\n\r\n    let getNormalised weightings =\r\n        let sumwb =\r\n            (weightings |> Map.find WithBallMove |> Map.toSeq |> Seq.sumBy (fun (_, w) -> float <| 8 - w)) +\r\n            (weightings |> Map.find WithBallPass |> Map.toSeq |> Seq.sumBy (fun (_, w) -> float <| 8 - w))\r\n        let sumip = weightings |> Map.find InPoss |> Map.toSeq |> Seq.sumBy (fun (_, w) -> float <| 4 - w)\r\n        let sumop = weightings |> Map.find OutPoss |> Map.toSeq |> Seq.sumBy (fun (_, w) -> float <| 4 - w)\r\n        weightings\r\n            |> Map.map (fun st ws ->\r\n                let sum, max =\r\n                    match st with\r\n                    | WithBallPass | WithBallMove -> sumwb, 8\r\n                    | InPoss -> sumip, 4\r\n                    | OutPoss -> sumop, 4\r\n                ws |> Map.map (fun _ w -> (float <| max - w) / sum))\r\n\r\n    let getFromHexString (str :string) =\r\n        let i = parseHex (str.Substring(50, 16))\r\n        let wbmDistGoal = (i >>> 8) &&& 7\r\n        let wbmNumAtck = (i >>> 11) &&& 7\r\n        let wbmNumDef = (i >>> 14) &&& 7\r\n        let wbpDistGoal = (i >>> 17) &&& 7\r\n        let wbpNumAtck = (i >>> 20) &&& 7\r\n        let wbpNumDef = (i >>> 23) &&& 7\r\n        let wbpInvPos = (i >>> 26) &&& 7\r\n        let wbpInvPas = (i >>> 29) &&& 7\r\n        let wbpNotReq = (i >>> 32) &&& 7\r\n        let ipDistBall = (i >>> 35) &&& 3\r\n        let ipDistGoal = (i >>> 37) &&& 3\r\n        let ipNumAtck = (i >>> 39) &&& 3\r\n        let ipNumDef = (i >>> 41) &&& 3\r\n        let opDistBall = (i >>> 43) &&& 3\r\n        let opDistGoal = (i >>> 45) &&& 3\r\n        let opNumAtck = (i >>> 47) &&& 3\r\n        let opNumDef = (i >>> 49) &&& 3\r\n        let shoot = (i >>> 51) &&& 1\r\n        { score = 0.0\r\n          shooting = match shoot with | 0 -> ShootAlways | 1 -> WaitForOpportunity\r\n          weightings =\r\n              [WithBallMove,\r\n                  [DistanceGoal, wbmDistGoal\r\n                   NumAttackers, wbmNumAtck\r\n                   NumDefenders, wbmNumDef] |> Map.ofList\r\n               WithBallPass,\r\n                  [DistanceGoal, wbpDistGoal\r\n                   NumAttackers, wbpNumAtck\r\n                   NumDefenders, wbpNumDef\r\n                   InvPossStrength, wbpInvPos\r\n                   InvPassStrength, wbpInvPas\r\n                   PassNotRequested, wbpNotReq] |> Map.ofList\r\n               InPoss,\r\n                  [DistanceGoal, ipDistGoal\r\n                   DistanceBall, ipDistBall\r\n                   NumAttackers, ipNumAtck\r\n                   NumDefenders, ipNumDef] |> Map.ofList\r\n               OutPoss,\r\n                  [DistanceGoal, opDistGoal\r\n                   DistanceBall, opDistBall\r\n                   NumAttackers, opNumAtck\r\n                   NumDefenders, opNumDef] |> Map.ofList]\r\n                  |> Map.ofList |> getNormalised }\r\n\r\ntype Blockhead =\r\n    { svg: string\r\n      name: string\r\n      index: int\r\n      visualTraits: VisualTrait list\r\n      strategy: Strategy\r\n      strength: int\r\n      speed: int\r\n      agility: int\r\n      accuracy: int }\r\n\r\ntype TeamStatus =\r\n    | NotInTeam\r\n    | InTeam\r\n    | InTeamBreeding\r\n\r\ntype WalletBlockhead =\r\n    { blockhead: Blockhead\r\n      teamStatus: TeamStatus }\r\n\r\ntype TeamColour =\r\n    | Blue\r\n    | Red\r\n\r\ntype WalletResult =\r\n    { userTeam: Blockhead[]\r\n      oppTeam: Blockhead[]\r\n      userTeamColour: TeamColour\r\n      trophyType: string\r\n      score: int * int\r\n      date: date\r\n      childBlock: Blockhead\r\n      trophySrc: string }\r\n\r\nmodule Blockhead =\r\n\r\n    open System\r\n    open Fable.SimpleHttp\r\n\r\n    let getTrophyColour trophyType teamColour =\r\n        match trophyType, teamColour with\r\n        | \"Ice\", Blue -> \"#0C1DA3\"\r\n        | \"Ice\", Red -> \"#FF4B14\"\r\n        | \"Nature\", Blue -> \"#248DCA\"\r\n        | \"Nature\", Red -> \"#A81717\"\r\n        | \"Sand\", Blue -> \"#21449C\"\r\n        | \"Sand\", Red -> \"#8B1114\"\r\n        | \"Urban\", Blue -> \"#3B6ED4\"\r\n        | \"Urban\", Red -> \"#E70808\"\r\n        | \"Night\", Blue -> \"#78C5E2\"\r\n        | \"Night\", Red -> \"#FF5B9A\"\r\n        | \"Pink\", Blue -> \"#59C0EC\"\r\n        | \"Pink\", Red -> \"#F84B06\"\r\n\r\n    let fromBlockheadData (data :BlockheadData) =\r\n        let i = parseHex (data.data.Substring(50, 16))\r\n        let index = let start = data.name.IndexOf('#') in data.name.Substring(start + 1) |> System.Int32.Parse\r\n        { name = data.name\r\n          index = index\r\n          visualTraits =\r\n            data.attributes\r\n                |> Array.map (fun a -> a.trait_type, a.value)\r\n                |> Array.toList\r\n                |> List.filter (fun (t, _) ->\r\n                    match t with\r\n                    | \"Accuracy\" -> false\r\n                    | \"Agility\" -> false\r\n                    | \"Speed\" -> false\r\n                    | \"Strength\" -> false\r\n                    | _ -> true)\r\n          strategy = Strategy.getFromHexString data.data\r\n          strength = i &&& 3\r\n          speed = (i >>> 2) &&& 3\r\n          agility = (i >>> 4) &&& 3\r\n          accuracy = (i >>> 6) &&& 3\r\n          svg = if index >= 65536 then data.image else \"/img/blockhead-svgs/\" + data.data.Substring(24, 10).ToUpper() + \".svg\" }\r\n\r\n    //let getRndBlockhead (rnd :Random) =\r\n    //    let index = rnd.Next(1998)\r\n    //    { svg = ExampleBlockhead.svg\r\n    //      name = sprintf \"Blockhead #%i\"index\r\n    //      index = index\r\n    //      visualTraits =\r\n    //        traits |> Map.toList |> List.map (fun (trait, values) ->\r\n    //            let vs = values |> Map.toArray\r\n    //            let v, _ = vs.[rnd.Next(vs.Length)]\r\n    //            trait, v)\r\n    //      strategy =\r\n    //        { score = rnd.NextDouble()\r\n    //          shooting = match rnd.Next(2) with | 0 -> ShootAlways | 1 -> WaitForOpportunity\r\n    //          weightings =\r\n    //            [WithBallMove,\r\n    //                [DistanceGoal, rnd.Next(8)\r\n    //                 NumAttackers, rnd.Next(8)\r\n    //                 NumDefenders, rnd.Next(8)] |> Map.ofList\r\n    //             WithBallPass,\r\n    //                [DistanceGoal, rnd.Next(8)\r\n    //                 NumAttackers, rnd.Next(8)\r\n    //                 NumDefenders, rnd.Next(8)\r\n    //                 InvPossStrength, rnd.Next(8)\r\n    //                 InvPassStrength, rnd.Next(8)\r\n    //                 PassNotRequested, rnd.Next(8)] |> Map.ofList\r\n    //             InPoss,\r\n    //                [DistanceGoal, rnd.Next(4)\r\n    //                 DistanceBall, rnd.Next(4)\r\n    //                 NumAttackers, rnd.Next(4)\r\n    //                 NumDefenders, rnd.Next(4)] |> Map.ofList\r\n    //             OutPoss,\r\n    //                [DistanceGoal, rnd.Next(4)\r\n    //                 DistanceBall, rnd.Next(4)\r\n    //                 NumAttackers, rnd.Next(4)\r\n    //                 NumDefenders, rnd.Next(4)] |> Map.ofList]\r\n    //                |> Map.ofList |> Strategy.getNormalised }\r\n    //      strength = rnd.Next(4)\r\n    //      speed = rnd.Next(4)\r\n    //      agility = rnd.Next(4)\r\n    //      accuracy = rnd.Next(4) }\r\n\r\n    let getRarity (trait, value) =\r\n        match traits |> Map.tryFind trait with\r\n        | Some values ->\r\n            match values |> Map.tryFind value with\r\n            | Some count -> (float count) / 1992.0\r\n            | None -> -1.0\r\n        | None -> -1.0\r\n\r\n    let getTraitTypeName (t, _) = t\r\n\r\n    let getTraitName (_, v) = v\r\n\r\n    let allBlockheads = blockheadsData |> Array.map fromBlockheadData |> Array.filter (fun c -> c.index < 1995) |> Array.toList |> List.sortBy (fun c -> c.index)\r\n    \r\n    let allBlockheadsByIndex = allBlockheads |> List.map (fun c -> c.index, c) |> Map.ofList\r\n    \r\n    let getAllBlockheads filter search =\r\n        allBlockheads |> List.filter (fun blockhead ->\r\n            (match search with None -> true | Some sindex -> blockhead.index = sindex) && (filter |> List.forall (fun f -> blockhead.visualTraits |> List.contains f)))\r\n    \r\n    let getAllBlockheadsPaged filter search =\r\n        getAllBlockheads filter search |> List.chunkBySize 27\r\n\r\n    let getBlockheadByIndex index = allBlockheadsByIndex |> Map.find index\r\n    \r\n    let getBlockletByIndex contracts index =\r\n        async {\r\n            let! stokenUri = Server.getBlocklet index\r\n            let! tokenUri =\r\n                match stokenUri with\r\n                | None ->\r\n                    contracts.blockletsContract?methods?tokenURIhidden(index)?call() |> Async.AwaitPromise\r\n                | Some nft ->\r\n                    async { return nft.tokenUri }\r\n            let! statusCode, responseTxt = Http.get tokenUri\r\n            return fromBlockheadData <| !!JS.JSON.parse responseTxt\r\n        }\r\n\r\n    let getBlockheadGenericByIndex contracts index =\r\n        async {\r\n            if index < 65536 then\r\n                return getBlockheadByIndex index\r\n            else\r\n                return! getBlockletByIndex contracts index\r\n        }\r\n    \r\n    let getBlockheadsForAccount contracts account =\r\n        async {\r\n            let blockletsTokenAddress = contracts.blockletsContract?_address\r\n            let! blockheadNfts = Moralis.getNFTs Config.network.blockheadsContractAddress account\r\n            let! blockletNfts = Moralis.getNFTs blockletsTokenAddress account\r\n\r\n            let! blocklets = Server.getBlocklets account\r\n            let blockletByIndex = blocklets |> Array.map (fun t -> t.tokenIndex, t.tokenUri) |> Map.ofArray\r\n    \r\n            let blockheads = blockheadNfts |> Array.map (fun c -> getBlockheadByIndex c.token_id)\r\n            let! blocklets =\r\n                blockletNfts\r\n                    |> Array.map (fun c ->\r\n                        async {\r\n                            match blockletByIndex |> Map.tryFind c.token_id with\r\n                            | None -> return! getBlockletByIndex contracts c.token_id\r\n                            | Some uri ->\r\n                                let! _, responseTxt = Http.get uri\r\n                                return fromBlockheadData <| !!JS.JSON.parse responseTxt }) |> Async.Parallel\r\n    \r\n            return Array.append blockheads blocklets        }\r\n\r\n    let getResultsForAccount contracts account =\r\n        async {\r\n            let! resultsRaw = Server.getResults account\r\n            let! trophies = Server.getTrophies account\r\n            let! blocklets = Server.getBlocklets account\r\n            let trophyByIndex = trophies |> Array.map (fun t -> t.tokenIndex, t.tokenUri) |> Map.ofArray\r\n            let blockletByIndex = blocklets |> Array.map (fun t -> t.tokenIndex, t.tokenUri) |> Map.ofArray\r\n            let! results =\r\n                resultsRaw |> Array.map (fun result ->\r\n                    async {\r\n                        let! trophyUri =\r\n                            match trophyByIndex |> Map.tryFind result.trophyIndex with\r\n                            | None ->\r\n                                contracts.blocktrophiesContract?methods?tokenURIhidden(result.trophyIndex)?call() |> Async.AwaitPromise\r\n                            | Some uri -> async { return uri }\r\n                        let! statusCode, responseTxt = Http.get trophyUri\r\n                        let trophy = JS.JSON.parse responseTxt\r\n                        let trophyType = !!(trophy?attributes |> Array.find (fun attribute -> attribute?trait_type = \"Color\"))?value\r\n                        let! teamB =\r\n                            result.teamB\r\n                                |> Array.map (getBlockheadGenericByIndex contracts)\r\n                                |> Async.Parallel\r\n                        let! teamR =\r\n                            result.teamR\r\n                                |> Array.map (getBlockheadGenericByIndex contracts)\r\n                                |> Async.Parallel\r\n                        let! childBlock =\r\n                            match blockletByIndex |> Map.tryFind result.blockletIndex with\r\n                            | None ->\r\n                                getBlockletByIndex contracts result.blockletIndex\r\n                            | Some uri ->\r\n                                async {\r\n                                    let! _, responseTxt = Http.get uri\r\n                                    return fromBlockheadData <| !!JS.JSON.parse responseTxt\r\n                                }\r\n                        return\r\n                            { trophySrc = !!trophy?image\r\n                              userTeam = if result.userR = account.ToLower() then teamR else teamB\r\n                              oppTeam = if result.userR = account.ToLower() then teamB else teamR\r\n                              userTeamColour = if result.userR = account.ToLower() then Red else Blue\r\n                              trophyType = trophyType\r\n                              score = result.scoreB, result.scoreR\r\n                              date = result.date\r\n                              childBlock = childBlock\r\n                               }\r\n                    }) |> Async.Parallel\r\n            return results\r\n        }\r\n        //let n = rnd.Next(32)\r\n        //List.init n (fun _ ->\r\n        //    let trophyIndex = rnd.Next(6) + 1\r\n        //    { trophySrc = \"/img/trophies/trophy\" + (trophyIndex.ToString()) + \".svg\"\r\n        //      userTeam = [| getRndBlockhead rnd; getRndBlockhead rnd; getRndBlockhead rnd; getRndBlockhead rnd |]\r\n        //      oppTeam = [| getRndBlockhead rnd; getRndBlockhead rnd; getRndBlockhead rnd; getRndBlockhead rnd |]\r\n        //      score = rnd.Next(5), rnd.Next(5)\r\n        //      date = date.Now.AddDays(float <| -rnd.Next(60))\r\n        //      childBlock = getRndBlockhead rnd })\r\n        //      |> List.sortByDescending (fun r -> r.date)\r\n\r\n    \r\n\r\n    \r\n","module Navbar.View\r\n\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\nopen Global\r\nopen Common\r\n\r\nlet navButton name =\r\n    a [ClassName \"navbar-item\"] [str name]\r\n\r\nlet navButtons =\r\n    []\r\n\r\nlet connectButton dispatch =\r\n    div [ClassName \"navbar-item\"]\r\n        [div [ClassName \"buttons\"]\r\n            [a [ClassName \"button is-primary\"; OnClick <| fun _ -> dispatch ConnectWallet]\r\n                [str \"Connect Wallet\"]]]\r\n\r\nlet connectedAccount (selectedAccount :string) =\r\n    div [ClassName \"navbar-item\"]\r\n        [span [ClassName \"tag is-info is-medium\"]\r\n            [str (selectedAccount.Substring(0, 4).ToUpper() + \"...\" + selectedAccount.Substring(12, 4).ToUpper())]]\r\n\r\nlet wrongChain =\r\n    div [ClassName \"navbar-item\"]\r\n        [span [ClassName \"tag is-danger is-medium\"]\r\n            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-alert-outline\"] []]; span [] [str <| \"Connect to \" + Common.Config.network.chainName]]]\r\n\r\nlet root model navbarMenuActive dispatch =\r\n    nav\r\n        [ ClassName \"navbar is-dark is-fixed-top\" ]\r\n        [ div\r\n            [ ClassName \"container\" ]\r\n            [ div\r\n                [ ClassName \"navbar-brand\" ]\r\n                [ a\r\n                    [ ClassName \"navbar-item is-1 brand\"; Href (toHash Home) ]\r\n                    [ str \"BLOCKHEADS\" ]\r\n                  a\r\n                    [ classBaseList \"navbar-burger\" [\"is-active\", navbarMenuActive]; AriaLabel \"Menu\"; Role \"button\"; AriaExpanded false; HTMLAttr.Custom(\"data-target\", \"navbarMenu\"); OnClick (fun _ -> dispatch ToggleNavbarMenu) ]\r\n                    [ span [AriaHidden true] []\r\n                      span [AriaHidden true] []\r\n                      span [AriaHidden true] [] ]]\r\n              div\r\n                [ Id \"navbarMenu\"; classBaseList \"navbar-menu\" [\"is-active\", navbarMenuActive] ]\r\n                [ div [ClassName \"navbar-start\"]\r\n                    []\r\n                  div [ClassName \"navbar-end\"]\r\n                    [\r\n                     a [ClassName \"navbar-item\"; Href <| toHash Gallery]\r\n                        [span [ClassName \"icon has-text-success\"]\r\n                            [i [ClassName \"mdi mdi-view-grid-outline\"] []]\r\n                         span [] [str \"Gallery\"]]\r\n                      ] ] ] ]\r\n","module Info.View\r\n\r\nopen Fable.React\r\nopen Fable.React.Props\r\n\r\nlet root =\r\n  let bullet icon content =\r\n    article [ClassName \"media\"]\r\n        [figure [ClassName \"media-left\"] [span [ClassName \"icon is-medium\"] [i [ClassName <| \"mdi mdi-36px \" + icon] []]]\r\n         div [ClassName \"media-content\"]\r\n            [div [ClassName \"content\"]\r\n                content]]\r\n\r\n  let roadmapLabel title sub statusTxt isComplete =\r\n    let status =\r\n        match isComplete with\r\n        | true -> p [ClassName \"has-text-success\"] [span [] [str \"Complete\"]; span [ClassName \"icon\"] [i [ClassName \"mdi mdi-check-bold\"] []]]\r\n        | false -> p [ClassName \"has-text-primary\"] [str statusTxt]\r\n    div [ClassName \"roadmap-label\"]\r\n        [p [] [str title]\r\n         p [ClassName \"is-size-6\"] [i [] [str sub]]\r\n         status]\r\n  let rmlabel1 = roadmapLabel \"Blockheads Launch\" \"Pushing NFT on-chain to the limits\" \"Complete\" true\r\n  let rmlabel2 = roadmapLabel \"Blockball Upgrades\" \"Training camp, personalization, full 3D\" \"Q2 2022\" false\r\n  let rmlabel3 = roadmapLabel \"Blockheads Chapter 2\" \"Discovery\" \"Q3 2022\" false\r\n  let rmlabel4 = roadmapLabel \"Blockheads Chapter 3\" \"Governance\" \"Q4 2022\" false\r\n  let rmlabel5 = roadmapLabel \"Blockheads Chapter 4\" \"Voxel Metaverse\" \"2023\" false\r\n  div []\r\n      [div [ClassName \"block section content about\"]\r\n          [div [ClassName \"box\"]\r\n            [section [ClassName \"has-text-centered section content\"]\r\n                [h1 [] [str \"CUBEHEADS\"]\r\n                 p [] [b [] [str \"Welcome to the Blockverse.\"]]]\r\n             div [ClassName \"hero\"] [div [ClassName \"blockheads-hero\"] []]\r\n             section [ClassName \"section content has-text-centered container\"]\r\n                [h2 [] [str \"0xBlocko & 0xBlockd\"]\r\n                 p [] [str \"Blockheads hails from the imagination of two passionate blockchain enthusiasts who had a desire to push the limits of what was possible with an on-chain NFT collection and form a lasting community with strong crypto values and an ambitious roadmap.\"]\r\n                 img [Src \"/img/teamblocks.png\"]]\r\n             div [ClassName \"hero2 content section has-text-centered\"]\r\n                [h2 [] [str \"Our Values\"]\r\n                 div [ClassName \"container has-text-white\"]\r\n                    [bullet \"mdi-check-decagram-outline\"\r\n                        [p [] [b [] [str \"No royalty fees on sales\"]]\r\n                         p [] [str \"NFTs should be free to exchange\"]]\r\n                     bullet \"mdi-check-decagram-outline\"\r\n                        [p [] [b [] [str \"No profits from minting\"]]\r\n                         p [] [str \"Minting fees go into a gas pool to pay for gaming\"]]\r\n                     bullet \"mdi-check-decagram-outline\"\r\n                        [p [] [b [] [str \"No marketing BS\"]]\r\n                         p [] [str \"We're coders and our code does the talking\"]]]]\r\n             div [ClassName \"hero3 content section has-text-centered\"]\r\n                [h2 [] [str \"The Collection\"]\r\n                 div [ClassName \"container\"]\r\n                    [bullet \"mdi-cube-outline\"\r\n                        [p [] [b [] [str \"First fully on-chain 3D voxel based artwork\"]]\r\n                         p [] [str \"No IPFS or external storage\"]]\r\n                     bullet \"mdi-cube-outline\"\r\n                        [p [] [b [] [str \"First fully on-chain animated artwork\"]]\r\n                         p [] [str \"Pushing the limits of what's possible on-chain\"]]\r\n                     bullet \"mdi-cube-outline\"\r\n                        [p [] [b [] [str \"First on-chain game with complex emergent behavior\"]]\r\n                         p [] [str \"Enter 4 Blockheads in the team game of Blockball\"]]\r\n                     bullet \"mdi-cube-outline\"\r\n                        [p [] [b [] [str \"First on-chain game with evolvable AI strategies\"]]\r\n                         p [] [str \"Improve your chances of winning by breeding Blockheads\"]]]]\r\n             div [ClassName \"hero4 content section has-text-centered\"]\r\n                [h2 [] [str \"The Roadmap\"]\r\n                 div [ClassName \"container\"]\r\n                    [div [ClassName \"columns roadmap is-hidden-mobile\"]\r\n                        [div [ClassName \"column\"]\r\n                            [rmlabel1\r\n                             rmlabel3\r\n                             rmlabel5]\r\n                         div [ClassName \"column\"]\r\n                            [svg [ViewBox \"-2 0 104 300\"]\r\n                                [path [D \"M 50 0 L 0 28.87 L 100 86.61 L 0 144.35 L 100 202.09 0 259.85\"; SVGAttr.Stroke \"white\"; SVGAttr.Fill \"none\"] []\r\n                                 path [D \"M 50 0 L 0 28.87 L 50 57.75 Z\"; SVGAttr.Stroke \"none\"; SVGAttr.Fill \"rgba(255, 255, 255, 0.15)\"] []\r\n                                 path [D \"M 0 28.87 L 0 144.35 L 100 86.61\"; SVGAttr.Stroke \"none\"; SVGAttr.Fill \"rgba(0, 0, 0, 0.35)\"] []\r\n                                 path [D \"M 100 86.61 L 0 144.35 L 100 202.09\"; SVGAttr.Stroke \"none\"; SVGAttr.Fill \"rgba(255, 255, 255, 0.15)\"] []\r\n                                 path [D \"M 0 144.35 L 0 259.85 L 100 202.09\"; SVGAttr.Stroke \"none\"; SVGAttr.Fill \"rgba(0, 0, 0, 0.35)\"] []\r\n                                 path [D \"M 50 0 L 0 28.87 L 100 86.61 L 0 144.35 L 100 202.09 0 259.85\"; SVGAttr.Stroke \"white\"; SVGAttr.Fill \"none\"] []\r\n                                 circle [Cx \"0\"; Cy \"28.87\"; R \"2\"; SVGAttr.Fill \"white\"; SVGAttr.Stroke \"none\" ] []\r\n                                 circle [Cx \"100\"; Cy \"86.61\"; R \"2\"; SVGAttr.Fill \"white\"; SVGAttr.Stroke \"none\" ] []\r\n                                 circle [Cx \"0\"; Cy \"144.35\"; R \"2\"; SVGAttr.Fill \"white\"; SVGAttr.Stroke \"none\" ] []\r\n                                 circle [Cx \"100\"; Cy \"202.09\"; R \"2\"; SVGAttr.Fill \"white\"; SVGAttr.Stroke \"none\" ] []\r\n                                 circle [Cx \"0\"; Cy \"259.85\"; R \"2\"; SVGAttr.Fill \"white\"; SVGAttr.Stroke \"none\" ] []]]\r\n                         div [ClassName \"column\"]\r\n                            [rmlabel2\r\n                             rmlabel4 ]]\r\n                     div [ClassName \"is-hidden-tablet roadmap\"]\r\n                        [span [ClassName \"icon is-large\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline mdi-36px\"] []]\r\n                         rmlabel1\r\n                         span [ClassName \"icon is-large\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline mdi-36px\"] []]\r\n                         rmlabel2\r\n                         span [ClassName \"icon is-large\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline mdi-36px\"] []]\r\n                         rmlabel3\r\n                         span [ClassName \"icon is-large\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline mdi-36px\"] []]\r\n                         rmlabel4\r\n                         span [ClassName \"icon is-large\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline mdi-36px\"] []]\r\n                         rmlabel5]]]]]]\r\n","module Counter.View\r\n\r\nopen Fable.Core\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\n\r\nlet simpleButton txt action dispatch =\r\n  div\r\n    [ ClassName \"column is-narrow\" ]\r\n    [ a\r\n        [ ClassName \"button\"\r\n          OnClick (fun _ -> action |> dispatch) ]\r\n        [ str txt ] ]\r\n\r\nlet root model dispatch =\r\n  div\r\n    [ ClassName \"columns is-vcentered\" ]\r\n    [ div [ ClassName \"column\" ] [ ]\r\n      div\r\n        [ ClassName \"column is-narrow\"\r\n          Style\r\n            [ CSSProp.Width \"170px\" ] ]\r\n        [ str (sprintf \"Counter value: %i\" model) ]\r\n      simpleButton \"+1\" Increment dispatch\r\n      simpleButton \"-1\" Decrement dispatch\r\n      simpleButton \"Reset\" Reset dispatch\r\n      div [ ClassName \"column\" ] [ ] ]\r\n","module ViewComponents\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Common\r\nopen System.Globalization\r\n\r\nlet emphasise s = span [ClassName \"emphasis\"] [str s]\r\n\r\nlet elikely = 0.21\r\nlet wvlikely = 0.18\r\nlet wlikely = 0.14\r\n\r\nlet getProbStr strategy strategyType strategyWeightType str =\r\n    let weighting = strategy.weightings |> Map.find strategyType |> Map.find strategyWeightType\r\n    let s =\r\n        match weighting with\r\n        | x when x > elikely -> \"Extremely likely\" + str\r\n        | x when x > wvlikely -> \"Very likely\" + str\r\n        | x when x > wlikely -> \"Likely\" + str\r\n        | _ -> \"\"\r\n    let icon =\r\n        match strategyType with\r\n        | WithBallPass | WithBallMove -> \"mdi mdi-soccer\"\r\n        | InPoss -> \"mdi mdi-transfer-up\"\r\n        | OutPoss -> \"mdi mdi-transfer-down\"\r\n    s, icon\r\n\r\nlet withBallTags strategy =\r\n    [getProbStr strategy WithBallMove DistanceGoal \" to move forward\"\r\n     getProbStr strategy WithBallMove NumAttackers \" to run into space\"\r\n     getProbStr strategy WithBallMove NumDefenders \" to avoid defenders\"\r\n     getProbStr strategy WithBallPass DistanceGoal \" to pass forward\"\r\n     getProbStr strategy WithBallPass NumAttackers \" to pass to a player in space\"\r\n     getProbStr strategy WithBallPass NumDefenders \" to pass to an unmarked player\"\r\n     getProbStr strategy WithBallPass InvPossStrength \" to pass to an agile player\"\r\n     getProbStr strategy WithBallPass InvPassStrength \" to pass to an accurate player\"\r\n     getProbStr strategy WithBallPass PassNotRequested \" to pass to a request\"]\r\n\r\nlet attackTags strategy =\r\n    [getProbStr strategy InPoss DistanceGoal \" to move forward\"\r\n     getProbStr strategy InPoss DistanceBall \" to follow the ball\"\r\n     getProbStr strategy InPoss NumAttackers \" to move into space\"\r\n     getProbStr strategy InPoss NumDefenders \" to avoid defenders\"]\r\n\r\nlet defendTags strategy =\r\n    [getProbStr strategy OutPoss DistanceGoal \" to move back\"\r\n     getProbStr strategy OutPoss DistanceBall \" to chase the ball\"\r\n     getProbStr strategy OutPoss NumAttackers \" to mark attackers\"\r\n     getProbStr strategy OutPoss NumDefenders \" to cover space\"]\r\n\r\nlet strategy tags =\r\n        //weighting.ToString()\r\n    let tags =\r\n        tags\r\n            |> List.filter (fun (s, _) -> s |> String.length > 0)\r\n            |> List.map (fun (s, icon) ->\r\n                div [Class \"control\"]\r\n                    [div [Class \"tags has-addons strategy\"]\r\n                        [span [ClassName \"tag\"] [str s]\r\n                         span [ClassName \"tag is-dark\"]\r\n                            [span [ClassName \"icon is-small\"]\r\n                                [i [ClassName icon] []]]]])\r\n    div [Class \"field is-grouped is-grouped-multiline\"] tags\r\n\r\nlet strengths blockhead =\r\n    let row name value =\r\n        [td []\r\n            [str name]\r\n         td [Class <| if value >= 0 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 1 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 2 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 3 then \"bar-on\" else \"bar-off\"] []]\r\n    table [Class \"strengths\"]\r\n        [tr [] (row \"Strength\" blockhead.strength)\r\n         tr [] (row \"Speed\" blockhead.speed)\r\n         tr [] (row \"Agility\" blockhead.agility)\r\n         tr [] (row \"Accuracy\" blockhead.accuracy)]\r\n\r\nlet visualTrait vtrait =\r\n    let rarity = Blockhead.getRarity vtrait\r\n    div [Class \"control\"] \r\n        [div [Class \"tags has-addons visual-trait\"]\r\n            [span [Class \"tag\"] [b [] [str <| sprintf \"%s:\" (Blockhead.getTraitTypeName vtrait)]; str <| Blockhead.getTraitName vtrait]\r\n             span [Class \"tag is-primary\"] [str <| sprintf \"%.0f%%\" (rarity * 100.0) ]]]\r\n\r\nlet visualTraits vtraits =\r\n    div [Class \"field is-grouped is-grouped-multiline\"] (vtraits |> List.map visualTrait)\r\n\r\nlet blockheadDetailCustomName blockhead name =\r\n    let scoreStr = sprintf \"%.1f%%\" (System.Math.Round(blockhead.strategy.score * 100.0, 1))\r\n    div [ClassName \"content\"]\r\n        [name\r\n         p [] [b [] [str \"Visual Traits\"]]\r\n         visualTraits blockhead.visualTraits\r\n         p [] [b [] [str \"Physical Traits\"]]\r\n         strengths blockhead\r\n         p [] [b [] [str \"Blockball Strategy Score\"]]\r\n         p [ClassName \"is-size-3 has-text-info\"] [b [] [str scoreStr]]\r\n         p [] [b [] [str \"Blockball Behavior Traits\"]]\r\n         p [ClassName \"is-size-7\"] [b [] [str \"With the ball:\"]]\r\n         (strategy (withBallTags blockhead.strategy))\r\n         p [ClassName \"is-size-7\"] [b [] [str \"When Attacking:\"]]\r\n         (strategy (attackTags blockhead.strategy))\r\n         p [ClassName \"is-size-7\"] [b [] [str \"When Defending:\"]]\r\n         (strategy (defendTags blockhead.strategy))]\r\n\r\nlet blockheadDetail blockhead = blockheadDetailCustomName blockhead (h1 [] [str blockhead.name])\r\n\r\ntype BlockheadCompactComponent(initialProps) =\r\n    inherit PureStatelessComponent<KeyedItem<Blockhead>>(initialProps)\r\n\r\n    override this.render() =\r\n        let image = JS.encodeURIComponent this.props.Item.svg\r\n        //let imageSrc = \"\"\"data:image/svg+xml, \"\"\" + image\r\n        let imageSrc = this.props.Item.svg\r\n        article [ClassName \"box blockhead-tile\"]\r\n            [a [Href <| \"blockhead/\" + this.props.Item.index.ToString()] [img [Src imageSrc]]\r\n             h1 [] [str this.props.Item.name]]\r\n\r\nlet blockheadsCompact blockhead dispatch =\r\n    ofType<BlockheadCompactComponent, _, _> { Key = blockhead.name; Item = blockhead } []\r\n\r\nlet blockheadsMini blockhead dispatch =\r\n    let image = JS.encodeURIComponent blockhead.svg\r\n    let imageSrc = (\"\"\"data:image/svg+xml, \"\"\" + image)\r\n    let imageSrc = blockhead.svg\r\n    article [ClassName \"blockhead-mini\"]\r\n        [a [Href <| \"blockhead/\" + blockhead.index.ToString()] [img [Style []; Src imageSrc ]]\r\n         h1 [] [str blockhead.name]]\r\n\r\nlet blockheadsGrid blockheadElements =\r\n    div [ClassName \"blockhead-grid\"] blockheadElements\r\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\") {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, 0];\n    }\n}\n//# sourceMappingURL=TimeSpan.js.map","module Home.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Types\r\nopen Common\r\nopen System.Globalization\r\nopen ViewComponents\r\n\r\nlet carouselImgs =\r\n    [  \"2C29473968.svg\"\r\n       \"C7E318B909.svg\"\r\n       \"A000EF309E.svg\"\r\n       \"A5B28A1541.svg\"\r\n       \"EDA1EFEE48.svg\"\r\n       \"16BBC20B53.svg\"\r\n       \"33BC003B0D.svg\"\r\n       \"4C2CB82A2D.svg\"\r\n       \"00F6E1010A.svg\"\r\n       \"075243C90A.svg\" ]\r\n\r\nlet bullet icon content =\r\n   article [ClassName \"media\"]\r\n       [figure [ClassName \"media-left\"] [span [ClassName \"icon is-medium\"] [i [ClassName <| \"mdi mdi-36px \" + icon] []]]\r\n        div [ClassName \"media-content\"]\r\n           [div [ClassName \"content\"]\r\n               content]]\r\n\r\nlet carousel index =\r\n    let index = index % carouselImgs.Length\r\n    let prev = if index = 0 then carouselImgs.Length - 1 else index - 1\r\n    let next = if index = carouselImgs.Length - 1 then 0 else index + 1\r\n    div [ClassName \"carousel-wrapper\"]\r\n        [div [ClassName \"carousel\"]\r\n            (carouselImgs |> List.mapi (fun i src -> img [classList [\"active\", i = index; \"prev\", i = prev; \"next\", i = next];Src <| \"/img/blockhead-svgs/\" + src]))]\r\n\r\nlet countdown (days, hours, mins, secs) =\r\n    nav [ClassName \"level countdown\"]\r\n        [div [ClassName \"level-item has-text-centered\"]\r\n            [div []\r\n                [p [ClassName \"heading\"] [str \"Days\"]\r\n                 p [ClassName \"title\"] [str <| days.ToString() ]]]\r\n         div [ClassName \"level-item has-text-centered\"]\r\n             [div []\r\n                 [p [ClassName \"heading\"] [str \"Hours\"]\r\n                  p [ClassName \"title\"] [str <| hours.ToString() ]]]\r\n         div [ClassName \"level-item has-text-centered\"]\r\n             [div []\r\n                 [p [ClassName \"heading\"] [str \"Minutes\"]\r\n                  p [ClassName \"title\"] [str <| mins.ToString() ]]]\r\n         div [ClassName \"level-item has-text-centered\"]\r\n             [div []\r\n                 [p [ClassName \"heading\"] [str \"Seconds\"]\r\n                  p [ClassName \"title\"] [str <| secs.ToString() ]]]]\r\n\r\nlet introTxt timeToLaunch carouselIndex =\r\n    ofList\r\n        [//h1 [ClassName \"title\"] [str \"BLOCKHEADS\"]\r\n         img [ClassName \"header-logo\"; Src \"/img/blockheadslogo.png\"] \r\n         p [ClassName \"has-text-centered section content is-size-5\"] [b [] [str \"What happens onchain, stays onchain.\"]]\r\n         div [ClassName \"hero\"] [div [ClassName \"blockheads-hero home\"] []]\r\n         div [ClassName \"section container\"]\r\n            [div [ClassName \"launch-date\"] [p [] [str \"Mint from 10th July 2022, 16:00 UTC\"]]\r\n             countdown timeToLaunch]\r\n         carousel carouselIndex\r\n         div [ClassName \"hero3 content section has-text-centered\"]\r\n             [div [ClassName \"container\"]\r\n                 [bullet \"mdi-cube-outline\"\r\n                     [p [] [b [] [str \"First fully on-chain 3D voxel based artwork\"]]\r\n                      p [] [str \"No IPFS or external storage\"]]\r\n                  bullet \"mdi-cube-outline\"\r\n                     [p [] [b [] [str \"First fully on-chain animated artwork\"]]\r\n                      p [] [str \"Pushing the limits of what's possible on-chain\"]]\r\n                  bullet \"mdi-cube-outline\"\r\n                     [p [] [b [] [str \"First on-chain game with complex emergent behavior\"]]\r\n                      p [] [str \"Enter 4 Blockheads in the team game of Blockball\"]]\r\n                  bullet \"mdi-cube-outline\"\r\n                     [p [] [b [] [str \"First on-chain game with evolvable AI strategies\"]]\r\n                      p [] [str \"Improve your chances of winning by breeding Blockheads\"]]]]\r\n         div [ClassName \"hero2 content section has-text-centered\"]\r\n             [div [ClassName \"container has-text-white\"]\r\n                 [bullet \"mdi-check-decagram-outline\"\r\n                     [p [] [b [] [str \"No royalty fees on sales\"]]\r\n                      p [] [str \"NFTs should be free to exchange\"]]\r\n                  bullet \"mdi-check-decagram-outline\"\r\n                     [p [] [b [] [str \"No profits from minting\"]]\r\n                      p [] [str \"Minting fees go into a gas pool to pay for gaming\"]]\r\n                  bullet \"mdi-check-decagram-outline\"\r\n                     [p [] [b [] [str \"No marketing BS\"]]\r\n                      p [] [str \"We're coders and our code does the talking\"]]]]]\r\n\r\nlet intro =\r\n    introTxt\r\n\r\nlet strategy strategy =\r\n    let elikely = 0.21\r\n    let wvlikely = 0.18\r\n    let wlikely = 0.14\r\n    let getProbStr strategyType strategyWeightType str =\r\n        let weighting = strategy.weightings |> Map.find strategyType |> Map.find strategyWeightType\r\n        let s =\r\n            match weighting with\r\n            | x when x > elikely -> \"Extremely likely\" + str\r\n            | x when x > wvlikely -> \"Very likely\" + str\r\n            | x when x > wlikely -> \"Likely\" + str\r\n            | _ -> \"\"\r\n        let icon =\r\n            match strategyType with\r\n            | WithBallPass | WithBallMove -> \"mdi mdi-soccer\"\r\n            | InPoss -> \"mdi mdi-transfer-up\"\r\n            | OutPoss -> \"mdi mdi-transfer-down\"\r\n        s, icon\r\n        //weighting.ToString()\r\n    let tags =\r\n        [getProbStr WithBallMove DistanceGoal \" to move forward with the ball\"\r\n         getProbStr WithBallMove NumAttackers \" to run into space with the ball\"\r\n         getProbStr WithBallMove NumDefenders \" to avoid defenders with the ball\"\r\n         getProbStr WithBallPass DistanceGoal \" to pass forward\"\r\n         getProbStr WithBallPass NumAttackers \" to pass to a player in space\"\r\n         getProbStr WithBallPass NumDefenders \" to pass to an unmarked player\"\r\n         getProbStr WithBallPass InvPossStrength \" to pass to an agile player\"\r\n         getProbStr WithBallPass InvPassStrength \" to pass to an accurate player\"\r\n         getProbStr WithBallPass PassNotRequested \" to pass to a request for ball\"\r\n         getProbStr InPoss DistanceGoal \" to move forward when attacking\"\r\n         getProbStr InPoss DistanceBall \" to follow the ball when attacking\"\r\n         getProbStr InPoss NumAttackers \" to move into space when attacking\"\r\n         getProbStr InPoss NumDefenders \" to avoid defenders when attacking\"\r\n         getProbStr OutPoss DistanceGoal \" to move back when defending\"\r\n         getProbStr OutPoss DistanceBall \" to chase the ball when defending\"\r\n         getProbStr OutPoss NumAttackers \" to mark attackers when defending\"\r\n         getProbStr OutPoss NumDefenders \" to cover space when defending\"]\r\n            |> List.filter (fun (s, _) -> s |> String.length > 0)\r\n            |> List.map (fun (s, icon) ->\r\n                div [Class \"control\"]\r\n                    [div [Class \"tags has-addons strategy\"]\r\n                        [span [ClassName \"tag\"] [str s]\r\n                         span [ClassName \"tag is-dark\"]\r\n                            [span [ClassName \"icon is-small\"]\r\n                                [i [ClassName icon] []]]]])\r\n    div [Class \"field is-grouped is-grouped-multiline\"] tags\r\n\r\nlet strengths blockhead =\r\n    let row name value =\r\n        [td []\r\n            [str name]\r\n         td [Class <| if value >= 0 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 1 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 2 then \"bar-on\" else \"bar-off\"] []\r\n         td [Class <| if value >= 3 then \"bar-on\" else \"bar-off\"] []]\r\n    table [Class \"strengths\"]\r\n        [tr [] (row \"Strength\" blockhead.strength)\r\n         tr [] (row \"Speed\" blockhead.speed)\r\n         tr [] (row \"Agility\" blockhead.agility)\r\n         tr [] (row \"Accuracy\" blockhead.accuracy)]\r\n\r\nlet visualTrait vtrait =\r\n    let rarity = Blockhead.getRarity vtrait\r\n    div [Class \"control\"] \r\n        [div [Class \"tags has-addons visual-trait\"]\r\n            [span [Class \"tag\"] [b [] [str <| sprintf \"%s:\" (Blockhead.getTraitTypeName vtrait)]; str <| Blockhead.getTraitName vtrait]\r\n             span [Class \"tag is-primary\"] [str <| sprintf \"%.0f%%\" (rarity * 100.0) ]]]\r\n\r\nlet visualTraits vtraits =\r\n    div [Class \"field is-grouped is-grouped-multiline\"] (vtraits |> List.map visualTrait)\r\n\r\nlet buyButton accountData auctionBatch auction dispatch =\r\n    match accountData with\r\n    | None ->\r\n        a [ClassName \"button is-primary\"; Disabled true] [str \"Connect Account\"]\r\n    | Some _ ->\r\n        match auction.priceSold, auctionBatch with\r\n        | None, Some auctionBatch ->\r\n            match auction.minting with\r\n            | None ->\r\n                let price = sprintf \"%.4f\" auctionBatch.price \r\n                a [ClassName \"button is-primary\"; OnClick (fun _ -> dispatch <| MintBlockhead auction.blockhead.index)] [\r\n                    b[] [str (\"Buy for \" + price + \" ETH\")]]\r\n            | Some _ ->\r\n                div [ClassName \"lds-dual-ring\"] []\r\n        | Some price, _ ->\r\n            a [ClassName \"button\"; Disabled true] [\r\n                b[] [str <| sprintf \"Sold\"]]\r\n\r\nlet auctionView accountData auctionBatch dispatch (auction :Auction) =\r\n    let image = JS.encodeURIComponent auction.blockhead.svg\r\n    let imageSrc = \"\"\"data:image/svg+xml, \"\"\" + image\r\n    let imageIndex = auction.blockhead.index % 305\r\n    let imageSrc = auction.blockhead.svg\r\n    let name =\r\n        match auction.priceSold with\r\n        | Some _ -> h1 [] [span [Style [TextDecoration \"line-through\"]] [str auction.blockhead.name]; str \" - \"; span [ClassName \"has-text-danger\"] [str \"SOLD\"]]\r\n        | None -> h1 [] [str auction.blockhead.name]\r\n    article [ClassName \"media auction-blockhead\"]\r\n        [figure [ClassName \"media-left\"]\r\n            [img [Src imageSrc]]\r\n         div [ClassName \"media-content\"]\r\n            [div [ClassName \"content\"]\r\n                [div [ClassName \"mb4\"] [ViewComponents.blockheadDetailCustomName auction.blockhead name]\r\n                 nav [ClassName \"level\"]\r\n                     [div [ClassName \"level-left\"] []\r\n                      div [ClassName \"level-right\"]\r\n                         [div [ClassName \"level-item\"]\r\n                            [buyButton accountData auctionBatch auction dispatch]]]]]]\r\n\r\n\r\nlet auctions model =\r\n    match model.currentAuction with\r\n    | None ->\r\n        div [ClassName \"has-text-centered\"] [div [ClassName \"lds-dual-ring\"] []]\r\n    | Some auction ->\r\n        let hours = int <| auction.timeRemaining.TotalHours\r\n        let mins = int <| auction.timeRemaining.TotalMinutes\r\n        let secs = int <| auction.timeRemaining.Seconds\r\n        let priceStr = auction.price.ToString()\r\n        let price = priceStr.Substring(0, min 10 (priceStr.Length))\r\n        div []\r\n            [nav [ClassName \"level auction-countdown\"]\r\n                [div [ClassName \"level-item has-text-centered\"]\r\n                    [div [] \r\n                        [p [ClassName \"heading\"] [str \"Current Price (ETH)\"]\r\n                         h1 [ClassName \"title\"] [str price]]]\r\n                 div [ClassName \"level-item has-text-centered\"]\r\n                    [div []\r\n                        [p [ClassName \"heading\"] [str \"Time Remaining\"]\r\n                         h1 [ClassName \"title\"] [str <| sprintf \"%02i:%02i:%02i\" hours mins secs] ]]]]\r\n\r\nlet blockheads model =\r\n    match model.currentAuction with\r\n    | None -> div [] []\r\n    | Some auction ->\r\n        nav [ClassName \"level is-hidden-mobile\"]\r\n            (auction.auctions |> List.map (fun auction ->\r\n                let imageIndex = auction.blockhead.index % 305\r\n                let imageSrc = auction.blockhead.svg\r\n                div [ClassName \"level-item\"] [img [Src imageSrc]]))\r\n\r\nlet root timeToLaunch carouselIndex dispatch =\r\n    div []\r\n        [div [ClassName \"block section intro\"]\r\n            [div [ClassName \"box has-text-centered\"] [intro timeToLaunch carouselIndex]]\r\n         ]\r\n","\r\n[<RequireQualifiedAccess>]\r\nmodule Promise\r\n\r\n#nowarn \"1182\" // Unused values\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nlet inline private (!!) (x:obj): 'T = unbox x\r\n\r\n[<Emit(\"new Promise($0)\")>]\r\n/// The promise function receives two other function parameters: success and fail\r\nlet create (f: ('T->unit)->(Exception->unit)->unit): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\r\nlet sleep (ms: int): JS.Promise<unit> = jsNative\r\n\r\n[<Emit(\"Promise.resolve($0)\")>]\r\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\r\n\r\n/// Creates promise (in rejected state) with supplied reason.\r\nlet reject<'T> reason : JS.Promise<'T> = JS.Constructors.Promise.reject<'T> reason\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet bind (a: 'T->JS.Promise<'R>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet map (a: 'T->'R) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet iter (a: 'T->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This version of `catch` fakes a function returning just 'T, as opposed to `Promise<'T>`. If you need to return `Promise<'T>`, use `catchBind`.\r\nlet catch (fail: Exception->'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This is a version of `catch` that fakes a function returning Promise<'T> as opposed to just 'T. If you need to return just 'T, use `catch`.\r\nlet catchBind (fail: Exception->JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// Used to catch errors at the end of a promise chain.\r\nlet catchEnd (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\n/// A combination of `map/bind` and `catch/catchBind`, this function applies the `success` continuation when the input promise resolves successfully, or `fail` continuation when the input promise fails. Both continuations may return either naked value `'R` or another promise `Promise<'R>`. Use the erased-cast operator `!^` to cast values when returning, for example:\r\n/// ```\r\n/// somePromise |> Promise.either (fun x -> !^(string x)) (fun err -> ^!(Promise.lift err.Message))\r\n/// ```\r\nlet either (success: 'T->U2<'R, JS.Promise<'R>>) (fail: 'E->U2<'R, JS.Promise<'R>>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\nlet eitherEnd (success: 'T->unit) (fail: 'E->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$0.then()\")>]\r\nlet start (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\nlet tryStart (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\nlet result (a: JS.Promise<'A>): JS.Promise<Result<'A, 'E>> =\r\n    either (U2.Case1 << Ok) (U2.Case1 << Error) a\r\n\r\nlet mapResult (fn: 'A -> 'B) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> map (Result.map fn)\r\n\r\nlet bindResult (fn: 'A -> JS.Promise<'B>) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> bind (fun a ->\r\n        match a with\r\n        | Ok a ->\r\n            result (fn a)\r\n        | Error e ->\r\n            lift (Error e))\r\n\r\nlet mapResultError (fn: 'B -> 'C) (a: JS.Promise<Result<'A,'B>>): JS.Promise<Result<'A,'C>> =\r\n    a |> map (Result.mapError fn)\r\n\r\nlet tap (fn: 'A -> unit) (a: JS.Promise<'A>): JS.Promise<'A> =\r\n    a |> map (fun x -> fn x; x)\r\n\r\ntype PromiseBuilder() =\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.Bind(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    [<Emit(\"$1.then(() => $2)\")>]\r\n    member x.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.For(seq: seq<'T>, body: 'T->JS.Promise<unit>): JS.Promise<unit> =\r\n        // (lift (), seq)\r\n        // ||> Seq.fold (fun p a ->\r\n        //     bind (fun () -> body a) p)\r\n        let mutable p = lift ()\r\n        for a in seq do\r\n            p <- !!p?``then``(fun () -> body a)\r\n        p\r\n\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.For(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    member x.While(guard, p): JS.Promise<unit> =\r\n        if guard()\r\n        then bind (fun () -> x.While(guard, p)) p\r\n        else lift()\r\n\r\n    [<Emit(\"Promise.resolve($1)\")>]\r\n    member x.Return(a: 'T): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"$1\")>]\r\n    member x.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"Promise.resolve()\")>]\r\n    member x.Zero(): JS.Promise<unit> = jsNative\r\n\r\n    member x.TryFinally(p: JS.Promise<'T>, compensation: unit->unit): JS.Promise<'T> =\r\n        either (fun (x: 'T) -> compensation(); U2.Case1 x) (fun er -> compensation(); raise !!er) p\r\n\r\n    [<Emit(\"$1.catch($2)\")>]\r\n    member x.TryWith(p: JS.Promise<'T>, catchHandler: Exception->JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.Delay(generator: unit->JS.Promise<'T>): JS.Promise<'T> =\r\n        !!createObj[\r\n            \"then\" ==> fun f1 f2 ->\r\n                try generator()?``then``(f1,f2)\r\n                with er ->\r\n                    if box f2 = null\r\n                    then !!JS.Constructors.Promise.reject(er)\r\n                    else\r\n                        try !!JS.Constructors.Promise.resolve(f2(er))\r\n                        with er -> !!JS.Constructors.Promise.reject(er)\r\n            \"catch\" ==> fun f ->\r\n                try generator()?catch(f)\r\n                with er ->\r\n                    try !!JS.Constructors.Promise.resolve(f(er))\r\n                    with er -> !!JS.Constructors.Promise.reject(er)\r\n        ]\r\n\r\n    member x.Run(p:JS.Promise<'T>): JS.Promise<'T> =\r\n        create (fun success fail ->\r\n            try\r\n                let p : JS.Promise<'T> = !!JS.Constructors.Promise.resolve(p)\r\n                p?``then``(success, fail)\r\n            with\r\n              er -> fail(er)\r\n        )\r\n\r\n    member x.Using<'T, 'R when 'T :> IDisposable>(resource: 'T, binder: 'T->JS.Promise<'R>): JS.Promise<'R> =\r\n        x.TryFinally(binder(resource), fun () -> resource.Dispose())\r\n\r\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\r\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\r\n    member x.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\r\n","module Blockball.View\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Elmish\r\nopen Types\r\nopen Common\r\n\r\nlet connectNotification =\r\n    div [ClassName \"notification\"]\r\n        [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-alert-circle\"] []]\r\n         span [] [str \"Connect your wallet\"]]\r\n\r\nlet loadingNotification =\r\n    div [ClassName \"notification has-text-centered\"]\r\n        [div [ClassName \"lds-dual-ring\"] []]\r\n\r\nlet noBlockheadsNotification =\r\n    div [ClassName \"notification has-text-centered\"]\r\n        [h2 [] [b [] [str \"Your wallet contains no Blockheads\"]]]\r\n\r\nlet noResultsNotification =\r\n    div [ClassName \"notification has-text-centered\"]\r\n        [h2 [] [b [] [str \"No games have been played yet. Check back soon\"]]]\r\n\r\nlet notEnoughBlockheadsNotification =\r\n    div [ClassName \"notification has-text-centered\"]\r\n        [h2 [] [b [] [str \"You need at least four Blockheads or Blocklets to form a team, including at least one Blockhead\"]]]\r\n\r\nlet signMsgNotification dispatch =\r\n    div [ClassName \"notification\"]\r\n        [h2 [] [b [] [str \"You need to prove your account ownership before we can fetch your team. Click the button below to sign a message that will prove ownership.\"]]\r\n         div [ClassName \"has-text-centered pt4\"]\r\n            [button [ClassName \"button\"; OnClick (fun _ -> dispatch SignMessage)]\r\n                [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-file-sign\"] []]; b [] [str \"Sign Message\"]]]]\r\n\r\nlet teamPositions position =\r\n    let getCls pos = if pos = position then \"team-position active\" else \"team-position\"\r\n    table [ClassName \"team-diagram\"]\r\n        [tr [] [td [ColSpan 3; ClassName \"is-size-7\"] [i [] [b [] [str \"Attacking\"]]]]\r\n         tr []\r\n            [td [] []\r\n             td [] [div [ClassName <| getCls 1] []]\r\n             td [] []]\r\n         tr []\r\n             [td [] [div [ClassName <| getCls 2] []]\r\n              td [] []\r\n              td [] [div [ClassName <| getCls 3] []]]\r\n         tr []\r\n            [td [] []\r\n             td [] [div [ClassName <| getCls 4] []]\r\n             td [] []]\r\n         tr [] [td [ColSpan 3; ClassName \"is-size-7\"] [i [] [b [] [str \"Defending\"]]]]]\r\n\r\nlet team model dispatch =\r\n    let getBlockheadByIndex i =\r\n        (model.blockheads.Value |> Array.find (fun c -> c.blockhead.index = i)).blockhead\r\n    let nteam =\r\n        match model.team with\r\n        | None | Some [||] ->\r\n            let dt = model.draftTeam |> Array.choose id\r\n            if dt.Length = 4 && dt |> Array.filter snd |> Array.length = 2 then Some dt else None\r\n        | Some team ->\r\n            let dt = Array.zip team model.draftTeam |> Array.map (function | (_, Some (i, c)) -> i, c | (i, c), _ -> i, c)\r\n            if dt |> Array.filter snd |> Array.length = 2 then Some dt else None\r\n    let saveRevertBtn =\r\n        let btns =\r\n            div [ClassName \"buttons\"]\r\n                [button [OnClick (fun _ -> dispatch SaveTeamChanges);ClassName \"button is-primary\"]\r\n                    [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-check-circle-outline mdi-24px\"] []]\r\n                     span [] [b [] [str \"Save\"]]]\r\n                 button [OnClick (fun _ -> dispatch CancelTeamChanges); ClassName \"button is-light\"]\r\n                    [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-cancel mdi-24px\"] []]\r\n                     span [] [b [] [str \"Cancel Changes\"]]]]\r\n        match model.team, nteam with\r\n        | _, None -> ofOption None\r\n        | Some team, Some nteam when team = nteam -> ofOption None\r\n        | _, Some _ -> btns\r\n    let rowContent n =\r\n        let btn =\r\n            let txt =\r\n                match model.team, model.draftTeam.[n] with\r\n                | Some [||], None -> \"Select Blockhead\"\r\n                | _, Some _ -> \"Change Blockhead\"\r\n                | Some _, None -> \"Change Blockhead\"\r\n            button [Disabled model.saving; OnClick (fun _ -> dispatch <| SelectingBlockhead n); ClassName \"button is-primary is-rounded is-normal is-responsive\"]\r\n                [span [] [b [] [str txt]]\r\n                 span [ClassName \"icon\"] [i [ClassName \"mdi mdi-arrow-right-bold-hexagon-outline mdi-24px\"] []]]\r\n        let title =\r\n            match model.team, model.draftTeam.[n] with\r\n            | Some [||], None ->\r\n                h1 [ClassName \"has-text-grey-light\"] [i [] [str \"No Blockhead Selected\"]]\r\n            | _, Some (ci, _) ->\r\n                let blockhead = getBlockheadByIndex ci\r\n                h1 [] [str blockhead.name]\r\n            | Some t, None ->\r\n                let blockhead = getBlockheadByIndex (t.[n] |> fst)\r\n                h1 [] [str blockhead.name]\r\n        let parentSelect =\r\n            let ps checked disableUnchecked =\r\n                div [ClassName \"parent-select\"]\r\n                    [label [ClassName <| if ((not checked) && disableUnchecked) then \"disabled\" else \"\"]\r\n                        [input [Disabled ((not checked) && disableUnchecked);Type \"checkbox\"; Checked checked; OnChange (fun _ -> dispatch <| SetCaptainState (n, not checked))]\r\n                         span [ClassName \"icon\"] [i [ClassName \"mdi mdi-check-bold\"] []]]\r\n                     span [] [b [] [str \"Parent\"]]]\r\n            match model.team, model.draftTeam.[n] with\r\n            | Some [||], None -> ofOption None\r\n            | _, Some (_, checked) ->\r\n                let disableUnchecked = match nteam with | Some _ -> true | _ -> false\r\n                ps checked disableUnchecked\r\n            | Some t, None ->\r\n                let disableUnchecked = match nteam with | Some _ -> true | _ -> false\r\n                ps (t.[n] |> snd) disableUnchecked\r\n        let img =\r\n            match model.team, model.draftTeam.[n] with\r\n            | Some [||], None ->\r\n                span [ClassName \"icon blockhead-not-selected\"] [i [ClassName \"mdi mdi-block-off-outline\"] []]\r\n            | _, Some (ci, _) ->\r\n                let blockhead = getBlockheadByIndex ci\r\n                let image = blockhead.svg\r\n                img [Src (image)]\r\n            | Some t, None ->\r\n                let blockhead = getBlockheadByIndex (t.[n] |> fst)\r\n                let image = blockhead.svg\r\n                img [Src (image)]\r\n        match model.team with\r\n        | Some _ ->\r\n            article [ClassName \"media\"]\r\n                [figure [ClassName \"media-left\"] [img]\r\n                 div [ClassName \"media-content\"]\r\n                    [div [ClassName \"content\"] [title]\r\n                     btn\r\n                     parentSelect]]\r\n            \r\n    let row i =\r\n        tr []\r\n            [td [] [teamPositions (i + 1)]\r\n             td []\r\n                [rowContent i]]\r\n    section [ClassName \"section box\"]\r\n        [saveRevertBtn\r\n         table [ClassName \"table is-fullwidth team-table\"]\r\n            [thead []\r\n                [tr []\r\n                    [th [] [str \"Position\"]\r\n                     th [] [str \"Blockhead\"]]]\r\n             tbody [] (List.init 4 row)]]\r\n\r\nlet results model accountData dispatch =\r\n    match accountData with\r\n    | None -> connectNotification\r\n    | Some _ ->\r\n        match model.results with\r\n        | None -> loadingNotification\r\n        | Some _ when model.team = Some [||] -> notEnoughBlockheadsNotification\r\n        | Some [] ->\r\n            noResultsNotification\r\n        | Some results ->\r\n            results |> List.map (fun result ->\r\n                let resultTxt, resultCls =\r\n                    match result.score, result.userTeamColour with\r\n                    | (a, b), Blue when a > b -> \"WIN\", \"has-text-success\"\r\n                    | (a, b), Blue when a < b -> \"LOSE\", \"has-text-danger\"\r\n                    | (a, b), Red when b > a -> \"WIN\", \"has-text-success\"\r\n                    | (a, b), Red when b < a -> \"LOSE\", \"has-text-danger\"\r\n                    | _ -> \"DRAW\", \"has-text-dark\"\r\n                let dateTxt = result.date.ToLongDateString()\r\n                let redColour = Blockhead.getTrophyColour result.trophyType Red\r\n                let blueColour = Blockhead.getTrophyColour result.trophyType Blue\r\n                let redTeam = if result.userTeamColour = Red then result.userTeam else result.oppTeam\r\n                let blueTeam = if result.userTeamColour = Blue then result.userTeam else result.oppTeam\r\n                let redteamName = if result.userTeamColour = Red then \"YOUR TEAM\" else \"OPPOSITION TEAM\"\r\n                let blueTeamName = if result.userTeamColour = Blue then \"YOUR TEAM\" else \"OPPOSITION TEAM\"\r\n                let child =\r\n                    match resultTxt with\r\n                    | \"WIN\" ->\r\n                       [div [ClassName \"child-block\"]\r\n                           [div [ClassName \"has-text-centered\"] [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-arrow-down-bold-hexagon-outline\"] []]]\r\n                            ViewComponents.blockheadsMini result.childBlock dispatch]]\r\n                            |> ofList\r\n                    | _ -> ofOption None\r\n                div [ClassName \"box result\"]\r\n                    [h1 [ClassName resultCls] [b [] [str resultTxt]]\r\n                     h2 [] [b [] [str dateTxt]]\r\n                     div [ClassName \"columns\"]\r\n                        [div [ClassName \"column is-4\"]\r\n                            [div [ClassName \"has-text-centered mb4\"] [b [Style [BackgroundColor blueColour; BorderRadius \"0.5rem\"; Padding \"0 0.5rem\"; Color \"white\"]] [str blueTeamName]]\r\n                             div [ClassName \"result-team\"] (blueTeam |> Array.map (fun c -> ViewComponents.blockheadsMini c dispatch) |> Array.toList)\r\n                             ]\r\n                         div [ClassName \"column is-4 has-text-centered\"]\r\n                            [div [ClassName \"game\"]\r\n                                [img [ClassName (match resultTxt with | \"WIN\" -> \"win\" | _ -> \"\"); Src result.trophySrc]]\r\n                             div [ClassName \"score\"]\r\n                                [div [] [span [Style [BackgroundColor blueColour]] [str <| (fst result.score).ToString()]; span [Style [BackgroundColor redColour]] [str <| (snd result.score).ToString()]]]\r\n                             child]\r\n                         div [ClassName \"column is-4\"]\r\n                            [div [ClassName \"has-text-centered mb4\"] [b [Style [BackgroundColor redColour; BorderRadius \"0.5rem\"; Padding \"0 0.5rem\"; Color \"white\"]] [str redteamName]]\r\n                             div [ClassName \"result-team\"] (redTeam |> Array.map (fun c -> ViewComponents.blockheadsMini c dispatch) |> Array.toList)]]\r\n                     ]) |> ofList\r\n\r\nlet blockheadsTab model accountData dispatch =\r\n    match accountData with\r\n    | None -> connectNotification\r\n    | Some _ ->\r\n        match model.blockheads with\r\n        | None -> loadingNotification\r\n        | Some [||] -> noBlockheadsNotification\r\n        | Some blockheads ->\r\n            Elmish.React.Common.lazyView2With refEquals (fun blockheads dispatch ->\r\n                let elements = blockheads |> Array.map (fun wc -> ViewComponents.blockheadsCompact wc.blockhead dispatch) |> Array.toList\r\n                ViewComponents.blockheadsGrid elements) blockheads dispatch\r\n\r\nlet teamTab model accountData dispatch =\r\n    let savingTxt =\r\n        match model.saving with\r\n        | true ->\r\n            div [ClassName \"notification has-text-centered\"]\r\n                [div [ClassName \"lds-dual-ring\"] []\r\n                 div [ClassName \"is-size-4 has-text-white\"] [b [] [str \"Saving team to blockchain\"]]]\r\n        | false -> ofOption None\r\n    match accountData with\r\n    | None -> connectNotification\r\n    | Some { signedMessage = None } ->\r\n        signMsgNotification dispatch\r\n    | Some _ ->\r\n        match model.team with\r\n        | None -> loadingNotification\r\n        | Some _ ->\r\n            match model.blockheads with\r\n            | None -> loadingNotification\r\n            | Some [||] -> noBlockheadsNotification\r\n            | Some x when x.Length < 4 -> notEnoughBlockheadsNotification\r\n            | Some _ ->\r\n                div [] \r\n                    [savingTxt\r\n                     team model dispatch]\r\n            \r\n\r\nlet resultsTab model accountData dispatch =\r\n    match accountData with\r\n    | None -> connectNotification\r\n    | Some _ ->\r\n        results model accountData dispatch\r\n\r\nlet selectBlockhead n model accountData dispatch =\r\n    match accountData with\r\n    | None -> failwith \"ni\"\r\n    | Some _ ->\r\n        match model.blockheads with\r\n        | None -> failwith \"ni\"\r\n        | Some [||] -> failwith \"ni\"\r\n        | Some blockheads ->\r\n            let alreadyIncluded =\r\n                match model.team with\r\n                | None | Some [||] -> model.draftTeam |> Array.choose id |> Array.map fst\r\n                | Some team -> Array.zip team model.draftTeam |> Array.map (fun (t, dt) -> match dt with Some (i, _) -> i | _ -> fst t)\r\n            div [] \r\n               [section [ClassName \"section\"]\r\n                    [div [ClassName \"box\"]\r\n                       [section [ClassName \"back-breadcrumb mb8\"]\r\n                            [a [OnClick (fun _ -> dispatch CancelSelectBlockhead)]\r\n                                [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-chevron-left\"] []]\r\n                                 span [] [b [] [str \"Back to Team\"]]]\r\n                             span [Style [MarginLeft \"1rem\"]; ClassName \"icon\"] [i [ClassName \"mdi mdi-circle-medium\"] []]\r\n                             span [Style [MarginLeft \"1rem\"]] [b [] [str <| \"Select for Pos \" + (n + 1).ToString()]]]\r\n                        div [] (blockheads\r\n                            |> Array.toList\r\n                            |> List.filter (fun wc-> not (alreadyIncluded |> Array.contains (wc.blockhead.index)))\r\n                            |> List.map (fun wc ->\r\n                        let image = wc.blockhead.svg\r\n                        article [ClassName \"media\"]\r\n                            [figure [ClassName \"media-left\"]\r\n                                [img [Style [Height \"12rem\"; Width \"12rem\"]; Src (image)]]\r\n                             div [ClassName \"media-content\"]\r\n                                [div [ClassName \"content\"]\r\n                                    [div [ClassName \"mb4\"] [ViewComponents.blockheadDetail wc.blockhead]\r\n                                     nav [ClassName \"level\"]\r\n                                         [div [ClassName \"level-left\"] []\r\n                                          div [ClassName \"level-right\"]\r\n                                             [div [ClassName \"level-item\"]\r\n                                                [button\r\n                                                    [Disabled model.saving\r\n                                                     OnClick (fun _ -> dispatch <| SelectBlockhead (n, wc.blockhead.index)); ClassName \"button is-primary\"]\r\n                                                        [b [] [str <| \"Select\"]]]]]]]]))]]]\r\n\r\nlet root model accountData dispatch =\r\n    match model.selectingBlockhead with\r\n    | None ->\r\n        div []\r\n            [div [ClassName \"tabs is-centered is-toggle is-toggle-rounded blockball-tabs is-hidden-desktop is-small\"]\r\n                [ul []\r\n                    [li [ClassName (if model.activeTab = AllBlockheads then \"is-active\" else \"\")]\r\n                        [a  [OnClick (fun _ -> dispatch <| SelectTab AllBlockheads)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-cube-scan mdi-24px\"] []]\r\n                             ]]\r\n                     li [ClassName (if model.activeTab = Team then \"is-active\" else \"\")]\r\n                        [a [OnClick (fun _ -> dispatch <| SelectTab Team)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-soccer-field mdi-24px\"] []]\r\n                             ]]\r\n                     li [ClassName (if model.activeTab = Results then \"is-active\" else \"\")]\r\n                        [a [OnClick (fun _ -> dispatch <| SelectTab Results)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-trophy mdi-24px\"] []]\r\n                             ]]]]\r\n             div [ClassName \"tabs is-centered is-toggle is-toggle-rounded blockball-tabs is-hidden-touch\"] \r\n                [ul []\r\n                    [li [ClassName (if model.activeTab = AllBlockheads then \"is-active\" else \"\")]\r\n                        [a  [OnClick (fun _ -> dispatch <| SelectTab AllBlockheads)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-cube-scan mdi-24px\"] []]\r\n                             span [] [str \"Blockheads\"]]]\r\n                     li [ClassName (if model.activeTab = Team then \"is-active\" else \"\")]\r\n                        [a [OnClick (fun _ -> dispatch <| SelectTab Team)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-soccer-field mdi-24px\"] []]\r\n                             span [] [str \"Team\"]]]\r\n                     li [ClassName (if model.activeTab = Results then \"is-active\" else \"\")]\r\n                        [a [OnClick (fun _ -> dispatch <| SelectTab Results)]\r\n                            [span [ClassName \"icon\"] [i [ClassName \"mdi mdi-trophy mdi-24px\"] []]\r\n                             span [] [str \"Results\"]]]]]\r\n             match model.activeTab with\r\n             | AllBlockheads -> blockheadsTab model accountData dispatch\r\n             | Team -> teamTab model accountData dispatch\r\n             | Results -> resultsTab model accountData dispatch]\r\n    | Some n ->\r\n        selectBlockhead n model accountData dispatch\r\n","module Gallery.View\r\n\r\nopen Fable.React\r\nopen Fable.React.Props\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Types\r\nopen Global\r\nopen Common\r\nopen Imports.InfiniteScroll\r\n\r\nlet filters =\r\n    traits\r\n        |> Map.toList\r\n        |> List.map (fun (trait, values) -> trait, values |> Map.toList |> List.map (fun (v, _) -> trait, v))\r\n\r\nlet filter selectedTrait traitName traitOptions dispatch =\r\n    let selectedValue =\r\n        match selectedTrait with\r\n        | None -> -1\r\n        | Some trait ->\r\n            filters |> List.find (fun (n, _) -> n = traitName) |> snd |> List.findIndex (fun t -> t = trait)\r\n    div [ClassName \"field\"]\r\n        [label [ClassName \"label\"] [str traitName]\r\n         div [ClassName \"control\"]\r\n            [div [ClassName \"select is-fullwidth\"] [\r\n                select [Value selectedValue; OnChange (fun e ->\r\n                    let trait = \r\n                        match e.target?value with\r\n                        | -1 -> None\r\n                        | i ->\r\n                            filters |> List.find (fun (n, _) -> n = traitName) |> snd |> List.item i |> Some\r\n                    dispatch (SelectTrait (traitName, trait)))]\r\n                    [option [Value -1] []\r\n                     ofList <| (traitOptions |> List.mapi (fun i opt ->\r\n                        option [Value i] [str <| Blockhead.getTraitName opt]))]]]]\r\n\r\nlet search model dispatch =\r\n    div [ClassName \"field\"]\r\n        [label [ClassName \"label\"] [str \"ID\"]\r\n         div [ClassName \"control\"]\r\n            [input [Value model.idSearch; OnChange(fun e -> dispatch <| SetSearch e.Value); ClassName \"input\"; Type \"text\"; Placeholder \"#ID\"]]]\r\n\r\nlet reset dispatch =\r\n    div [ClassName \"field\"]\r\n        [div [ClassName \"control reset\"]\r\n            [button [OnClick (fun _ -> dispatch ResetFilters); ClassName \"button is-primary is-fullwidth\"] [str \"Reset Filters\"]]]\r\n\r\nlet root model accountData dispatch =\r\n    infiniteScroll [LoadMore (fun _ -> dispatch LoadPage); HasMore (Some true)]\r\n        [div [ClassName \"columns\"]\r\n            [div [ClassName \"column is-3\"]\r\n                [section [ClassName \"box section gallery-filter\"]\r\n                    [ofList <| (filters |> List.map (fun (name, options) -> filter (model.filter |> Map.tryFind name) name options dispatch))\r\n                     search model dispatch\r\n                     reset dispatch]]\r\n             div [ClassName \"column is-9\"]\r\n                [section [ClassName \"section\"] [Elmish.React.Common.lazyView2With refEquals (fun model dispatch ->\r\n                    model.blockheads |> List.map (fun blockheads ->\r\n                        let elements = blockheads |> List.map (fun c -> ViewComponents.blockheadsCompact c dispatch)\r\n                        div [ClassName \"gallery-page\"] [ViewComponents.blockheadsGrid elements]) |> ofList) model dispatch]]]]\r\n","namespace Elmish\n\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule internal Option =\n\n    let tuple a b =\n        match (a,b) with\n        | Some a, Some b -> Some (a,b)\n        | _ -> None\n\n    let ofFunc f arg =\n        try\n            Some (f arg)\n        with _ ->\n            None","module UserGuide.View\r\n\r\nopen Fable.React\r\nopen Fable.React.Props\r\n\r\nlet midnightLocalStr = System.DateTime(2022, 1, 1, 0, 0, 0, System.DateTimeKind.Utc).ToLocalTime().ToShortTimeString()\r\n\r\nlet middayLocalStr = System.DateTime(2022, 1, 1, 12, 0, 0, System.DateTimeKind.Utc).ToLocalTime().ToShortTimeString()\r\n\r\nlet drawBlockballDiag (squares: (int * int * bool) list[][]) =\r\n    let mapPlayer (p, t, b) =\r\n        span [classList [\"blue\", t = 0; \"red\", t = 1]] [str <| p.ToString(); ofOption <| if b then Some <| span [ClassName \"ball\"] [] else None]\r\n    let pitchSquare r c =\r\n        td [ClassName \"pitch\"] [div [] (squares.[r].[c] |> List.map mapPlayer)]\r\n    div [ClassName \"blockball-diagram-container\"]\r\n        [table [ClassName \"blockball-diagram\"]\r\n            [tbody []\r\n                [tr []\r\n                    [td [] []; pitchSquare 0 1; td [] []]\r\n                 tr [] [pitchSquare 1 0; pitchSquare 1 1; pitchSquare 1 2]\r\n                 tr [] [pitchSquare 2 0; pitchSquare 2 1; pitchSquare 2 2]\r\n                 tr [] [td [] []; pitchSquare 3 1; td [] []]]]]\r\n\r\nlet startingPositionsDiag =\r\n    [| [| []; [(1, 0, true)]; [] |]\r\n       [| [(4, 0, false)]; [(3, 0, false)]; [(2, 0, false)] |]\r\n       [| [(2, 1, false)]; [(3, 1, false)]; [(4, 1, false)] |]\r\n       [| []; [(1, 1, false)]; [] |] |]\r\n            |> drawBlockballDiag\r\n\r\nlet root =\r\n    div []\r\n        [div [ClassName \"block section content\"]\r\n            [div [ClassName \"box\"]\r\n                [div [ClassName \"section content\"]\r\n                    [h1 [ClassName \"title\"] [str \"How to get a Blockhead\"]\r\n                     p [] [b [] [str \"The Minting Process\"]] \r\n                     p [] [str \"Blockheads will be minted in batches of 6 in a Dutch auction. Minting fees will start at 0.2ETH and gradually get lower until each Blockhead has sold. Once the entire batch has sold, another batch will be released at the starting price and the process will repeat for all 1995 available Blockheads.\"]\r\n                     p [ClassName \"has-text-centered\"]\r\n                        [img [ClassName \"guide\"; Src \"/img/mintingprocess.png\"]]\r\n                     p [] [b [] [str \"Secondary Markets\"]]\r\n                     p [] [str \"Blockheads will also be available on NFT marketplaces. This is the only place to get one after all 1995 of them have been minted.\"]\r\n                     p [] []]]]\r\n         div [ClassName \"block section content\"]\r\n            [div [ClassName \"box\"] [div [ClassName \"section content\"]\r\n                [h1 [ClassName \"title\"] [str \"How to Play Blockball\"]\r\n                 p [] [b [] [str \"Create a Team\"]]\r\n                 p [] [str \"Blockball is an AI powered, soccer inspired team game that runs entirely on the Ethereum blockchain. To play, you need to own at least 4 Blockheads or Blocklets (Blocklets are mini Blockheads that are awarded as prizes to winning teams) with each team having at least one proper Blockhead.\"]\r\n                 p [ClassName \"has-text-centered\"]\r\n                    [img [ClassName \"guide\"; Src \"/img/chooseteam.png\"]]\r\n                 p [] [str \"Go to the \"; b [] [str \"Team\"]; str \" tab of the Blockball page to select your team. You may have to sign a message using your wallet provider (for example Metamask) to verify your identity for when we fetch your team later.\"]\r\n                 p [] [str \"After selecting your 4 Blockheads for the different starting positions, choose 2 of them to be 'parents' should your team win. These blockheads will be bred together using an evolutionary algorithm to create a Blocklet with a combination of their physical and strategy traits. In this way you can evolve better players to increase your chances of winning.\"]\r\n                 p [] [str \"Once your have your chosen team, click \"; b [] [str \"Save\"]; str \" in order to finalise it on the blockchain. You will need to sign a transaction with your wallet provider. \"]\r\n                 p [ClassName \"has-text-centered\"]\r\n                    [img [Style [Width \"unset\"];ClassName \"guide\"; Src \"/img/confirmteam.png\"]]\r\n                 p [] [b [] [str \"The Match Schedule\"]]\r\n                 p [] [str <| \"Matches are automatically played every day at midnight GMT (\" + midnightLocalStr + \" your local time). Your opposing team will be selected at random. Changes to teams should be submitted by midday GMT (\" + middayLocalStr + \" your local time) for matches that evening. If changes are submitted after this time (but before that day's game) they will be reflected in the game the following day. \"]\r\n                 p [] [str \"If you have already chosen your team and do not wish to change it then you do not have to do anything. Your team will play a match every day until the end of the game period.\"]\r\n                 ]]]\r\n         div [ClassName \"block section content\"]\r\n            [div [ClassName \"box\"] [div [ClassName \"section content\"]\r\n                [h1 [ClassName \"title\"] [str \"Blockball Results\"]\r\n                 p [] [b [] [str \"Viewing your Results\"]]\r\n                 p [] [str \"To view your results go to the \"; b [] [str \"Results\"]; str \" tab of the Blockball page.\"]\r\n                 p [ClassName \"has-text-centered\"]\r\n                    [img [ClassName \"guide\"; Src \"/img/result.png\"]]\r\n                 p [] [b [] [str \"NFT Trophy\"]]\r\n                 p [] [str \"The winner of the match receives an NFT trophy that contains a unique animated replay of the blockball game that was played. Like Blockheads themselves, this NFT is entirely generated on the Blockchain itself.\"]\r\n                 p [] [b [] [str \"Blocklet Prize\"]]\r\n                 p [] [str \"The winner of the match also receives a Blocklet NFT. This blocklet is bred from the selected parents of the winning team and contains a genetic combination of those parents' physical and strategy traits. \"]]]]\r\n         div [ClassName \"block section content\"]\r\n             [div [ClassName \"box\"] [div [ClassName \"section content\"]\r\n                 [h1 [ClassName \"title\"] [str \"Blockball Game Logic\"]\r\n                  p [] [b [] [str \"The Pitch\"]]\r\n                  p [] [str \"Blockball is played on a pitch arranged into 8 squares. There are 4 players per team, with each player starting in a fixed position as depicted below. At the first kickoff a random team is chosen to start with the ball.\"]\r\n                  startingPositionsDiag\r\n                  p [] [b [] [str \"Player Actions\"]]]]]\r\n         div [ClassName \"block section content\"]\r\n             [div [ClassName \"box\"] [div [ClassName \"section content\"]\r\n                 [h1 [ClassName \"title\"] [str \"Blockhead Traits\"]]]]\r\n         ]\r\n","import { tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nexport class Observer {\n    constructor(onNext, onError, onCompleted) {\n        this.OnNext = onNext;\n        this.OnError = onError || ((_e) => { return; });\n        this.OnCompleted = onCompleted || (() => { return; });\n    }\n}\nclass Observable {\n    constructor(subscribe) {\n        this.Subscribe = subscribe;\n    }\n}\nexport function protect(f, succeed, fail) {\n    try {\n        return succeed(f());\n    }\n    catch (e) {\n        fail(e);\n    }\n}\nexport function add(callback, source) {\n    source.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)));\n}\nexport function filter(predicate, source) {\n    return choose((x) => predicate(x) ? x : null, source);\n}\nexport function map(mapping, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => {\n        protect(() => mapping(t), observer.OnNext, observer.OnError);\n    }, observer.OnError, observer.OnCompleted)));\n}\nexport function merge(source1, source2) {\n    return new Observable((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    });\n}\nexport function pairwise(source) {\n    return new Observable((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function partition(predicate, source) {\n    return [filter(predicate, source), filter((x) => !predicate(x), source)];\n}\nexport function scan(collector, state, source) {\n    return new Observable((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function split(splitter, source) {\n    return [choose((v) => tryValueIfChoice1(splitter(v)), source), choose((v) => tryValueIfChoice2(splitter(v)), source)];\n}\nexport function subscribe(callback, source) {\n    return source.Subscribe(new Observer(callback));\n}\n//# sourceMappingURL=Observable.js.map","import { Observer, protect } from \"./Observable\";\nimport { some, tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nimport { iterate as seqIterate } from \"./Seq\";\nexport default class Event {\n    constructor(_subscriber, delegates) {\n        this._subscriber = _subscriber;\n        this.delegates = delegates || new Array();\n    }\n    Add(f) {\n        this._addHandler(f);\n    }\n    // IEvent<T> methods\n    get Publish() {\n        return this;\n    }\n    Trigger(value) {\n        seqIterate((f) => f(value), this.delegates);\n    }\n    // IDelegateEvent<T> methods\n    AddHandler(handler) {\n        if (this._dotnetDelegates == null) {\n            this._dotnetDelegates = new Map();\n        }\n        const f = (x) => handler(null, x);\n        this._dotnetDelegates.set(handler, f);\n        this._addHandler(f);\n    }\n    RemoveHandler(handler) {\n        if (this._dotnetDelegates != null) {\n            const f = this._dotnetDelegates.get(handler);\n            if (f != null) {\n                this._dotnetDelegates.delete(handler);\n                this._removeHandler(f);\n            }\n        }\n    }\n    // IObservable<T> methods\n    Subscribe(arg) {\n        return typeof arg === \"function\"\n            ? this._subscribeFromCallback(arg)\n            : this._subscribeFromObserver(arg);\n    }\n    _addHandler(f) {\n        this.delegates.push(f);\n    }\n    _removeHandler(f) {\n        const index = this.delegates.indexOf(f);\n        if (index > -1) {\n            this.delegates.splice(index, 1);\n        }\n    }\n    _subscribeFromObserver(observer) {\n        if (this._subscriber) {\n            return this._subscriber(observer);\n        }\n        const callback = observer.OnNext;\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n    _subscribeFromCallback(callback) {\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n}\nexport function add(callback, sourceEvent) {\n    sourceEvent.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function filter(predicate, sourceEvent) {\n    return choose((x) => predicate(x) ? some(x) : null, sourceEvent);\n}\nexport function map(mapping, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => mapping(t), observer.OnNext, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function merge(event1, event2) {\n    const source1 = event1;\n    const source2 = event2;\n    return new Event((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    }, source1.delegates.concat(source2.delegates));\n}\nexport function pairwise(sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function partition(predicate, sourceEvent) {\n    return [filter(predicate, sourceEvent), filter((x) => !predicate(x), sourceEvent)];\n}\nexport function scan(collector, state, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function split(splitter, sourceEvent) {\n    return [\n        choose((v) => tryValueIfChoice1(splitter(v)), sourceEvent),\n        choose((v) => tryValueIfChoice2(splitter(v)), sourceEvent),\n    ];\n}\n//# sourceMappingURL=Event.js.map","import Event from \"./Event\";\nexport default class Timer {\n    constructor(interval) {\n        this._enabled = false;\n        this._isDisposed = false;\n        this._intervalId = 0;\n        this._timeoutId = 0;\n        this.Interval = interval && interval > 0 ? interval : 100;\n        this.AutoReset = true;\n        this._elapsed = new Event();\n    }\n    get Elapsed() {\n        return this._elapsed;\n    }\n    get Enabled() {\n        return this._enabled;\n    }\n    set Enabled(x) {\n        if (!this._isDisposed && this._enabled !== x) {\n            this._enabled = x;\n            if (this._enabled) {\n                if (this.AutoReset) {\n                    this._intervalId = setInterval(() => {\n                        if (!this.AutoReset) {\n                            this.Enabled = false;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n                else {\n                    this._timeoutId = setTimeout(() => {\n                        this.Enabled = false;\n                        this._timeoutId = 0;\n                        if (this.AutoReset) {\n                            this.Enabled = true;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n            }\n            else {\n                if (this._timeoutId) {\n                    clearTimeout(this._timeoutId);\n                    this._timeoutId = 0;\n                }\n                if (this._intervalId) {\n                    clearInterval(this._intervalId);\n                    this._intervalId = 0;\n                }\n            }\n        }\n    }\n    Dispose() {\n        this.Enabled = false;\n        this._isDisposed = true;\n    }\n    Close() {\n        this.Dispose();\n    }\n    Start() {\n        this.Enabled = true;\n    }\n    Stop() {\n        this.Enabled = false;\n    }\n}\n//# sourceMappingURL=Timer.js.map","module Gallery.State\r\n\r\nopen Elmish\r\nopen Types\r\nopen Fable.Core\r\nopen Common\r\n\r\nlet update msg model : Model * Cmd<Msg> =\r\n    let apply model =\r\n        let cs, fcs =\r\n            let sindex =\r\n                match System.Int32.TryParse model.idSearch with\r\n                | true, i -> Some i\r\n                | _ -> None\r\n            match Blockhead.getAllBlockheadsPaged (model.filter |> Map.toList |> List.map snd) sindex with\r\n            | [] -> [], []\r\n            | (cs1::cs) ->\r\n                [cs1], cs\r\n        { model with blockheads = cs; filteredBlockheads = fcs }\r\n    match msg with\r\n    | SetSearch search ->\r\n        apply { model with idSearch = search }, Cmd.none\r\n    | SelectTrait (name, Some trait) ->\r\n        apply { model with filter = model.filter |> Map.add name trait }, Cmd.none\r\n    | SelectTrait (name, None) ->\r\n        apply { model with filter = model.filter |> Map.remove name }, Cmd.none\r\n    | LoadPage ->\r\n        match model.filteredBlockheads with\r\n        | [] -> model, Cmd.none\r\n        | c::cs -> { model with blockheads = model.blockheads @ [c]; filteredBlockheads = cs }, Cmd.none\r\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","(** UrlParser\n------\nThis port of the Elm library helps you turn URLs into nicely structured data.\nIt is designed to be used with `Navigation` module to help folks create\nsingle-page applications (SPAs) where you manage browser navigation yourself.\n*)\n\nmodule Elmish.UrlParser\n\n\n(**\n#### Types\n*)\n\ntype State<'v> =\n  { visited : string list\n    unvisited : string list\n    args : Map<string,string>\n    value : 'v }\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule internal State =\n  let mkState visited unvisited args value =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = value }\n\n  let map f { visited = visited; unvisited = unvisited; args = args; value = value } =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = f value }\n\n\n/// Turn URLs like `/blog/42/cat-herding-techniques` into nice data.\ntype Parser<'a,'b> = State<'a> -> State<'b> list\n\n\n(**\n#### Parse segments\nCreate a custom path segment parser. You can use it to define something like “only CSS files” like this:\n```\n    let css =\n      custom \"CSS_FILE\" <| fun segment ->\n        if String.EndsWith \".css\" then\n          Ok segment\n        else\n          Error \"Does not end with .css\"\n```\n*)\nlet custom tipe (stringToSomething: string->Result<_,_>) : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            match stringToSomething next with\n            | Ok nextValue ->\n                [ State.mkState (next :: visited) rest args (value nextValue) ]\n\n            | Error msg ->\n                []\n    inner\n\n\n(** Parse a segment of the path as a `string`.\n```\n    parse str location\n```\n<pre>\n    /alice/  ==>  Some \"alice\"\n    /bob     ==>  Some \"bob\"\n    /42/     ==>  Some \"42\"\n</pre>\n*)\nlet str state =\n    custom \"string\" Ok state\n\n\n(** Parse a segment of the path as an `int`.\n```\n    parse i32 location\n```\n<pre>\n    /alice/  ==>  None\n    /bob     ==>  None\n    /42/     ==>  Some 42\n</pre>\n*)\nlet i32 state =\n    custom \"i32\" (System.Int32.TryParse >> function true, value -> Ok value | _ -> Error \"Can't parse int\" ) state\n\n\n(** Parse a segment of the path if it matches a given string.\n```\n    s \"blog\"  // can parse /blog/\n              // but not /glob/ or /42/ or anything else\n```\n*)\nlet s str : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            if next = str then\n                [ State.mkState (next :: visited) rest args value ]\n            else\n                []\n    inner\n\n\n\n(**\n#### Combining parsers\nParse a path with multiple segments.\n\n```\n    parse (s \"blog\" </> i32) location\n```\n<pre>\n    /blog/35/  ==>  Some 35\n    /blog/42   ==>  Some 42\n    /blog/     ==>  None\n    /42/       ==>  None\n</pre>\n```\n    parse (s \"search\" </> str) location\n```\n<pre>\n    /search/cats/  ==>  Some \"cats\"\n    /search/frog   ==>  Some \"frog\"\n    /search/       ==>  None\n    /cats/         ==>  None\n</pre>\n*)\nlet inline (</>) (parseBefore: Parser<_,_>) (parseAfter: Parser<_,_>) =\n  fun state ->\n    List.collect parseAfter (parseBefore state)\n\n\n(** Transform a path parser.\n```\n    type Comment = { author : string; id : int }\n    rawComment =\n      s \"user\" </> str </> s \"comments\" </> i32\n    comment =\n      map (fun a id -> { author = a; id = id }) rawComment\n    parse comment location\n```\n<pre>\n    /user/bob/comments/42  ==>  Some { author = \"bob\"; id = 42 }\n    /user/tom/comments/35  ==>  Some { author = \"tom\"; id = 35 }\n    /user/sam/             ==>  None\n</pre>\n*)\nlet map (subValue: 'a) (parse: Parser<'a,'b>) : Parser<'b->'c,'c> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        List.map (State.map value)\n        <| parse { visited = visited\n                   unvisited = unvisited\n                   args = args\n                   value = subValue }\n    inner\n\n\n\n(** Try a bunch of different path parsers.\n```\n    type Route\n      = Search of string\n      | Blog of int\n      | User of string\n      | Comment of string*int\n    route =\n      oneOf\n        [ map Search  (s \"search\" </> str)\n          map Blog    (s \"blog\" </> i32)\n          map User    (s \"user\" </> str)\n          map (fun u c -> Comment (u,c)) (s \"user\" </> str </> \"comments\" </> i32) ]\n    parse route location\n```\n<pre>\n    /search/cats           ==>  Some (Search \"cats\")\n    /search/               ==>  None\n    /blog/42               ==>  Some (Blog 42)\n    /blog/cats             ==>  None\n    /user/sam/             ==>  Some (User \"sam\")\n    /user/bob/comments/42  ==>  Some (Comment \"bob\" 42)\n    /user/tom/comments/35  ==>  Some (Comment \"tom\" 35)\n    /user/                 ==>  None\n</pre>\n*)\nlet oneOf parsers state =\n    List.collect (fun parser -> parser state) parsers\n\n\n(** A parser that does not consume any path segments.\n```\n    type BlogRoute = Overview | Post of int\n    blogRoute =\n      oneOf\n        [ map Overview top\n          map Post  (s \"post\" </> i32) ]\n    parse (s \"blog\" </> blogRoute) location\n```\n<pre>\n    /blog/         ==>  Some Overview\n    /blog/post/42  ==>  Some (Post 42)\n</pre>\n*)\nlet top state=\n    [state]\n\n\n\n(**\n#### Query parameters\nTurn query parameters like `?name=tom&age=42` into nice data.\n\n*)\n\ntype QueryParser<'a,'b> = State<'a> -> State<'b> list\n\n\n(** Parse some query parameters.\n```\n    type Route = BlogList (Option string) | BlogPost Int\n    route =\n      oneOf\n        [ map BlogList (s \"blog\" <?> stringParam \"search\")\n          map BlogPost (s \"blog\" </> i32) ]\n    parse route location\n```\n<pre>\n    /blog/              ==>  Some (BlogList None)\n    /blog/?search=cats  ==>  Some (BlogList (Some \"cats\"))\n    /blog/42            ==>  Some (BlogPost 42)\n</pre>\n*)\nlet inline (<?>) (parser: Parser<_,_>) (queryParser:QueryParser<_,_>) : Parser<_,_> =\n    fun state ->\n        List.collect queryParser (parser state)\n\n(** Create a custom query parser. You could create parsers like these:\n```\n    val jsonParam : string -> Decoder a -> QueryParser (Option a -> b) b\n    val enumParam : string -> Map<string,a> -> QueryParser (Option a -> b) b\n```\n*)\nlet customParam (key: string) (func: string option -> _) : QueryParser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        [ State.mkState visited unvisited args (value (func (Map.tryFind key args))) ]\n    inner\n\n\n(** Parse a query parameter as a `string`.\n```\n    parse (s \"blog\" <?> stringParam \"search\") location\n```\n<pre>\n    /blog/              ==>  Some (Overview None)\n    /blog/?search=cats  ==>  Some (Overview (Some \"cats\"))\n</pre>\n*)\nlet stringParam name =\n    customParam name id\n\nlet internal intParamHelp =\n    Option.bind\n        (fun (value: string) ->\n            match System.Int32.TryParse value with\n            | (true,x) -> Some x\n            | _ -> None)\n\n(** Parse a query parameter as an `int`. Option you want to show paginated\nsearch results. You could have a `start` query parameter to say which result\nshould appear first.\n```\n    parse (s \"results\" <?> intParam \"start\") location\n```\n<pre>\n    /results           ==>  Some None\n    /results?start=10  ==>  Some (Some 10)\n</pre>\n*)\nlet intParam name =\n    customParam name intParamHelp\n\n\n// PARSER HELPERS\n\nlet rec internal parseHelp states =\n    match states with\n    | [] ->\n        None\n    | state :: rest ->\n        match state.unvisited with\n        | [] ->\n            Some state.value\n        | [\"\"] ->\n            Some state.value\n        | _ ->\n            parseHelp rest\n\nlet internal splitUrl (url: string) =\n    match List.ofArray <| url.Split([|'/'|]) with\n    | \"\" :: segments ->\n        segments\n    | segments ->\n        segments\n\n/// parse a given part of the location\nlet parse (parser: Parser<'a->'a,'a>) url args =\n    { visited = []\n      unvisited = splitUrl url\n      args = args\n      value = id }\n    |> parser\n    |> parseHelp\n\nopen Fable.Core\n\nlet internal toKeyValuePair (segment: string) =\n    match segment.Split('=') with\n    | [| key; value |] ->\n        Option.tuple (Option.ofFunc JS.decodeURIComponent key) (Option.ofFunc JS.decodeURIComponent value)\n    | _ -> None\n\n\nlet internal parseParams (querystring: string) =\n    if querystring.Length > 1 then\n        querystring.Substring(1).Split('&')\n        |> Seq.map toKeyValuePair\n        |> Seq.choose id\n        |> Map.ofSeq\n    else Map.empty\n\nopen Browser.Types\n\n(**\n#### Parsers\nParse based on `location.pathname` and `location.search`. This parser\nignores the hash entirely.\n*)\nlet parsePath (parser: Parser<_,_>) (location: Location) =\n    parse parser location.pathname (parseParams location.search)\n\n(** Parse based on `location.hash`. This parser ignores the normal\npath entirely.\n*)\nlet parseHash (parser: Parser<_,_>) (location: Location) =\n    let hash, search =\n        let hash =\n            if location.hash.Length > 1 then location.hash.Substring 1\n            else \"\"\n        if hash.Contains(\"?\") then\n            let h = hash.Substring(0, hash.IndexOf(\"?\"))\n            h, hash.Substring(h.Length)\n        else\n            hash, \"?\"\n\n    parse parser hash (parseParams search)\n","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","(** Custom navigation\n------\nThis port of the Elm library is about treating the address bar as an input to your program.\nIt converts changes in the address bar into messages and provides functions for manipulation of the browser history.\n*)\nnamespace Elmish.Navigation\n\nopen Browser\nopen Browser.Types\nopen Elmish\n\n(**\n#### Parser\nA function to turn the string in the address bar into data that is easier for your app to handle.\n*)\ntype Parser<'a> = Location -> 'a\n\ntype Navigable<'msg> =\n    | Change of Location\n    | UserMsg of 'msg\n\n(**\n#### Direct history manipulation\n*)\n[<RequireQualifiedAccess>]\nmodule Navigation =\n    let [<Literal>] internal NavigatedEvent = \"NavigatedEvent\"\n\n    /// Modify current location\n    let modifyUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.replaceState((), \"\", newUrl)]\n\n    /// Push new location into history and navigate there\n    let newUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.pushState((), \"\", newUrl)\n                  let ev = CustomEvent.Create(NavigatedEvent)\n                  window.dispatchEvent ev\n                  |> ignore ]\n\n    /// Jump to some point in history (positve=forward, nagative=backward)\n    let jump (n:int):Cmd<_> =\n        [fun _ -> history.go n]\n\n\n(**\n#### Program extensions\nTreat user's program as a child component, by wrapping it and handling navigation events.\n*)\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n        let mutable private onChangeRef : obj -> obj =\n            fun _ ->\n                failwith \"`onChangeRef` has not been initialized.\\nPlease make sure you used Elmish.Navigation.Program.Internal.subscribe\"\n\n        let subscribe (dispatch:Dispatch<_ Navigable>) =\n            let mutable lastLocation = None\n            let onChange _ =\n                match lastLocation with\n                | Some href when href = window.location.href -> ()\n                | _ ->\n                    lastLocation <- Some window.location.href\n                    Change window.location |> dispatch\n                |> box\n\n            onChangeRef <- onChange\n\n            window.addEventListener(\"popstate\", unbox onChangeRef)\n            window.addEventListener(\"hashchange\", unbox onChangeRef)\n            window.addEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let unsubscribe () =\n            window.removeEventListener(\"popstate\", unbox onChangeRef)\n            window.removeEventListener(\"hashchange\", unbox onChangeRef)\n            window.removeEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let toNavigableWith (parser : Parser<'a>)\n                            (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                            (program : Program<'a,'model,'msg,'view>)\n                            (onLocationChange : Dispatch<Navigable<'msg>> -> unit) =\n\n            let map (model, cmd) =\n                model, cmd |> Cmd.map UserMsg\n\n            let update userUpdate msg model =\n                match msg with\n                | Change location ->\n                    urlUpdate (parser location) model\n                | UserMsg userMsg ->\n                    userUpdate userMsg model\n                |> map\n\n            let subs userSubscribe model =\n                Cmd.batch\n                  [ [ onLocationChange ]\n                    userSubscribe model |> Cmd.map UserMsg ]\n\n            let init userInit () =\n                userInit (parser window.location) |> map\n\n            let setState userSetState model dispatch =\n                userSetState model (UserMsg >> dispatch)\n\n            let view userView model dispatch =\n                userView model (UserMsg >> dispatch)\n            \n            program\n            |> Program.map init update view setState subs\n\n    /// Add the navigation to a program made with `mkProgram` or `mkSimple`.\n    /// urlUpdate: similar to `update` function, but receives parsed url instead of message as an input.\n    let toNavigable (parser : Parser<'a>)\n                    (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                    (program : Program<'a,'model,'msg,'view>) =\n\n        Internal.toNavigableWith parser urlUpdate program Internal.subscribe\n","module App.State\r\n\r\nopen Elmish\r\nopen Elmish.Navigation\r\nopen Elmish.UrlParser\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser\r\nopen Global\r\nopen Types\r\nopen Imports\r\nopen Common\r\nopen System\r\n\r\nlet launchTime = new System.DateTime(2022, 7, 10, 16, 0, 0)\r\n\r\nlet blockheadsAbi : obj = import \"default\" \"./NFT-Blockheads-abi.js\"\r\nlet blockletsAbi : obj = import \"default\" \"./NFT-Blocklets-abi.js\"\r\nlet blocktrophiesAbi : obj = import \"default\" \"./NFT-Blocktrophies-abi.js\"\r\nlet blockballAbi : obj = import \"default\" \"./Game-Blockball-abi.js\"\r\nlet blockmintingAbi : obj = import \"default\" \"./Minting-Blockheads-abi.js\"\r\n\r\nlet pageParser: Parser<Page->Page,Page> =\r\n    oneOf [\r\n        map Blockhead (s \"blockhead\" </> i32)\r\n        map Home (s \"\")\r\n        map About (s \"about\")\r\n        map Counter (s \"counter\")\r\n        map Home (s \"home\")\r\n        map Blockball (s \"blockball\")\r\n        map Gallery (s \"gallery\")\r\n        map UserGuide (s \"guide\")\r\n    ]\r\n\r\nlet urlUpdate gbl (result : Page option) model =\r\n    match result with\r\n    | None ->\r\n        console.error(\"Error parsing url\")\r\n        model, Navigation.modifyUrl (toHash model.CurrentPage)\r\n    | Some (Blockhead index) ->\r\n        let prevPage =\r\n            match model.CurrentPage with\r\n            | Home -> None\r\n            | page -> Some page\r\n        { model with\r\n            CurrentPage = Blockhead index\r\n            blockhead = Some { previousPage = prevPage; blockhead = None } }, Cmd.none\r\n    | Some page ->\r\n        { model with CurrentPage = page }, []\r\n\r\nlet createContracts (web3 :Web3) =\r\n    // create contracts\r\n    promise {\r\n        let blockheadsContract =  web3.NewContract(blockheadsAbi, Config.network.blockheadsContractAddress)\r\n        let! blockletsContractAddr = blockheadsContract?methods?blockletsContractAddress()?call()\r\n        let blockletsContract = web3.NewContract(blockletsAbi, blockletsContractAddr)\r\n        let! blockballContractAddr = blockheadsContract?methods?blockballContractAddress()?call()\r\n        let blockballContract = web3.NewContract(blockballAbi, blockballContractAddr)\r\n        let! blocktrophiesContractAddr = blockheadsContract?methods?blocktrophiesContractAddress()?call()\r\n        let blocktrophiesContract = web3.NewContract(blocktrophiesAbi, blocktrophiesContractAddr)\r\n        let! blockmintingContractAddr = blockheadsContract?methods?blockmintingContractAddress()?call()\r\n        let blockmintingContract = web3.NewContract(blockmintingAbi, blockmintingContractAddr)\r\n        console.log (\"blockheads contract: \" + Config.network.blockheadsContractAddress)\r\n        console.log (\"blocklets contract: \" + blockletsContractAddr)\r\n        console.log (\"blockball contract: \" + blockballContractAddr)\r\n        console.log (\"blocktrophies contract: \" + blocktrophiesContractAddr)\r\n        console.log (\"blockheads minting contract: \" + blockmintingContractAddr)\r\n        return {\r\n            blockheadsContract = blockheadsContract\r\n            blockmintingContract = blockmintingContract\r\n            blockletsContract = blockletsContract\r\n            blockballContract = blockballContract\r\n            blocktrophiesContract = blocktrophiesContract\r\n        } }\r\n\r\nlet getAuctionBatchFromEvent contracts (web3 :obj) (currentAuction :obj) =\r\n    promise {\r\n        // load auction\r\n        let origindate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);\r\n    \r\n        let startTimeUx = currentAuction?returnValues?startTime\r\n        let repeatTime = currentAuction?returnValues?repeatTime\r\n        let t0 = currentAuction?returnValues?token0\r\n        let t1 = currentAuction?returnValues?token1\r\n        let t2 = currentAuction?returnValues?token2\r\n        let t3 = currentAuction?returnValues?token3\r\n        let t4 = currentAuction?returnValues?token4\r\n        let t5 = currentAuction?returnValues?token5\r\n\r\n        let tokenIds = [|t0; t1; t2; t3; t4; t5 |]\r\n\r\n        let startTime = origindate.AddSeconds( startTimeUx )\r\n        let now = DateTime.UtcNow\r\n        let totalDur = (now - startTime).TotalSeconds |> int\r\n        let num = totalDur / repeatTime\r\n        let startTime = startTime.AddSeconds(float (repeatTime * num))\r\n        let endTime = startTime.AddSeconds(float repeatTime)\r\n\r\n        let blockheads = tokenIds |> Array.map (fun tid -> blockheadsDataByIndex.[tid] |> Blockhead.fromBlockheadData)\r\n\r\n        let getMintEvent tokenId =\r\n            contracts.blockmintingContract?getPastEvents \"Mint\"\r\n                (keyValueList CaseRules.LowerFirst\r\n                    [\"fromBlock\", !!0\r\n                     \"toBlock\", !!\"latest\"\r\n                     \"filter\", keyValueList CaseRules.LowerFirst [\"tokenId\", tokenId]])\r\n\r\n        let! mintEvents = tokenIds |> Array.map getMintEvent |> Promise.Parallel\r\n\r\n        let auctions =\r\n            Array.zip blockheads mintEvents\r\n                |> Array.map (fun (blockhead, event) ->\r\n                    let priceSold = if event?length > 0 then Some 1M else None\r\n                    { Home.Types.Auction.blockhead = blockhead; Home.Types.Auction.priceSold = priceSold; Home.Types.Auction.minting = None })\r\n                |> Array.toList\r\n\r\n        let! price = contracts.blockmintingContract?methods?getAuctionPrice()?call()\r\n        \r\n        return \r\n            { Home.Types.endTime = endTime\r\n              Home.Types.auctions = auctions\r\n              Home.Types.timeRemaining = endTime - now\r\n              Home.Types.price = web3?utils?fromWei(price, \"ether\")\r\n              Home.Types.priceRaw = price\r\n              Home.Types.repeatTimeSecs = repeatTime } \r\n        }\r\n\r\n\r\n\r\nlet init gbl result =\r\n    let initWeb3 = \r\n        Cmd.OfPromise.perform \r\n            (fun _ -> promise {\r\n                let web3 = gbl.web3\r\n\r\n                let! contracts = createContracts web3\r\n                gbl.contracts <- Some contracts\r\n\r\n                let! auctionEvents = contracts.blockmintingContract?getPastEvents \"Auction\" (keyValueList CaseRules.LowerFirst [(\"fromBlock\", !!0); (\"toBlock\", !!\"latest\")])\r\n                let currentAuction = auctionEvents?at(auctionEvents?length - 1)\r\n\r\n                let! auctionBatch = getAuctionBatchFromEvent contracts web3 currentAuction\r\n                return {\r\n                    auctionBlock = !!currentAuction?blockNumber\r\n                    auction = auctionBatch\r\n                }\r\n            }) () SetWeb3InitData\r\n    let (counter, counterCmd) = Counter.State.init()\r\n    let (home, homeCmd) = Home.State.init()\r\n    let (model, cmd) =\r\n        let (gchs1::gchs) = Blockhead.getAllBlockheadsPaged [] None\r\n        let launchTs = launchTime - System.DateTime.UtcNow\r\n        urlUpdate gbl result\r\n          { timeToLaunch = launchTs.Days, launchTs.Hours, launchTs.Minutes, launchTs.Seconds\r\n            CurrentPage = Home\r\n            Counter = counter\r\n            Home = home\r\n            accountData = None\r\n            blockhead = None\r\n            navbarMenuActive = false\r\n            gallery = { filter = Map.empty; idSearch = \"\"; blockheads = [gchs1]; filteredBlockheads = gchs }\r\n            carousel = 0\r\n            blockball =\r\n              { activeTab = Blockball.Types.Tab.AllBlockheads\r\n                blockheads = None\r\n                team = None\r\n                draftTeam = [|None; None; None; None|]\r\n                selectingBlockhead = None\r\n                results = None\r\n                saving = false\r\n                messageToSign = None } }\r\n    model, Cmd.batch [ cmd\r\n                       Cmd.map CounterMsg counterCmd\r\n                       Cmd.map HomeMsg homeCmd \r\n                       initWeb3 ]\r\n\r\nlet update gbl msg model =\r\n    let updateAccountCmd web3 =\r\n        Cmd.OfPromise.perform\r\n            (fun _ -> promise {\r\n                let! chainId = web3?eth?getChainId()\r\n                let! accounts = web3?eth?getAccounts()\r\n                let selectedAccount = accounts?at $ 0\r\n                let signedMessage = WebStorage.localStorage.[\"signed-message: \" + selectedAccount]\r\n                return\r\n                    { AccountData.selectedAccount = selectedAccount\r\n                      chainId = chainId\r\n                      signedMessage = if System.String.IsNullOrEmpty signedMessage then None else Some signedMessage }\r\n            }) () SetAccountData\r\n    let getPriceCmd =\r\n        Cmd.OfPromise.perform\r\n            (fun _ -> promise {\r\n                match gbl.contracts with\r\n                | Some contracts ->\r\n                    let! price = contracts.blockmintingContract?methods?getAuctionPrice()?call()\r\n                    return (price, gbl.web3?utils?fromWei(price, \"ether\"))\r\n            }) () SetAuctionPrice\r\n    match msg with\r\n    | CounterMsg msg ->\r\n        let (counter, counterCmd) = Counter.State.update msg model.Counter\r\n        { model with Counter = counter }, Cmd.map CounterMsg counterCmd\r\n    | HomeMsg (Home.Types.MintBlockhead index) ->\r\n        match model.accountData, model.Home.currentAuction with\r\n        | Some { selectedAccount = account }, Some auction ->\r\n            let tokenData = Common.blockheadsDataByIndex.[index].data\r\n            let merklePath = Common.getMerklePath gbl.blockheadsMerkleTree index\r\n            { model with\r\n                Home =\r\n                    { model.Home with\r\n                        currentAuction =\r\n                            Some { auction with\r\n                                    auctions =\r\n                                        auction.auctions\r\n                                            |> List.map (fun a ->\r\n                                                if a.blockhead.index = index then { a with minting = Some \"\" } else a) } } },\r\n                Cmd.OfPromise.either\r\n                    (fun _ -> promise {\r\n                        let! result = gbl.contracts.Value.blockmintingContract?methods?mint(index, tokenData, merklePath)?send(createObj [\"from\", !!account; \"value\", !!auction.priceRaw]) \r\n                        return result\r\n                    }) () (fun receipt -> HomeMsg (Home.Types.MintSuccess(index, receipt))) (fun exn -> HomeMsg (Home.Types.MintFail(index, exn)))\r\n        | _ -> model, Cmd.none\r\n    | HomeMsg (Home.Types.MintSuccess (index, receipt)) ->\r\n        match model.Home.currentAuction with\r\n        | Some auction ->\r\n            { model with\r\n                Home =\r\n                    { model.Home with\r\n                        currentAuction =\r\n                            Some { auction with\r\n                                    auctions =\r\n                                        auction.auctions\r\n                                            |> List.map (fun a ->\r\n                                                if a.blockhead.index = index then { a with minting = None; priceSold = Some 0M } else a) } } }, Cmd.none\r\n        | _ -> model, Cmd.none\r\n    | HomeMsg (Home.Types.MintFail (index, exn)) ->\r\n        match model.Home.currentAuction with\r\n        | Some auction ->\r\n            { model with\r\n                Home =\r\n                    { model.Home with\r\n                        currentAuction =\r\n                            Some { auction with\r\n                                    auctions =\r\n                                        auction.auctions\r\n                                            |> List.map (fun a ->\r\n                                                if a.blockhead.index = index then { a with minting = None } else a) } } }, Cmd.none\r\n        | _ -> model, Cmd.none\r\n    | HomeMsg msg ->\r\n        let (home, homeCmd) = Home.State.update msg model.Home\r\n        { model with Home = home }, Cmd.map HomeMsg homeCmd\r\n    | NavMsg Navbar.Types.Msg.ConnectWallet ->\r\n        model, Cmd.OfPromise.perform gbl.web3Modal.connect () SetProvider\r\n    | NavMsg Navbar.Types.Msg.ToggleNavbarMenu ->\r\n        { model with navbarMenuActive = not model.navbarMenuActive }, Cmd.none\r\n    | BlockballMsg (Blockball.Types.SignMessage) ->\r\n        match model with\r\n        | { blockball = { messageToSign = Some message }; accountData = Some data } ->\r\n            model,\r\n                Cmd.OfPromise.perform (fun _ -> promise {\r\n                    let! signedMessage = gbl.web3?eth?personal?sign(message, data.selectedAccount)\r\n                    return signedMessage\r\n                }) () SetSignedMessage\r\n        | _ -> model, Cmd.none\r\n    | BlockballMsg (Blockball.Types.SaveTeamChanges) ->\r\n        match model with\r\n        | { accountData = Some { signedMessage = Some _; selectedAccount = account }; blockball = { team = Some team } } ->\r\n            let salt = gbl.web3?utils?randomHex(32)\r\n            let team =\r\n                match model.blockball.team with\r\n                | None | Some [||] -> model.blockball.draftTeam |> Array.choose id\r\n                | Some team -> Array.zip team model.blockball.draftTeam |> Array.map (function | (_, Some (i, c)) -> (i, c) | c, _ -> c)\r\n            let teamArray = Array.append (team |> Array.map fst) (team |> Array.filter snd |> Array.map fst)\r\n            // fix indices for breeders\r\n            teamArray.[4] <-\r\n                match teamArray.[4] with\r\n                | x when teamArray.[0] = x -> 0\r\n                | x when teamArray.[1] = x -> 1\r\n                | x when teamArray.[2] = x -> 2\r\n                | x when teamArray.[3] = x -> 3\r\n            teamArray.[5] <-\r\n                match teamArray.[5] with\r\n                | x when teamArray.[0] = x -> 0\r\n                | x when teamArray.[1] = x -> 1\r\n                | x when teamArray.[2] = x -> 2\r\n                | x when teamArray.[3] = x -> 3\r\n            let hash = gbl.web3.utils.soliditySha3(teamArray.[0], teamArray.[1], teamArray.[2], teamArray.[3], teamArray.[4], teamArray.[5], salt)\r\n            console.log(\"hash: \" + hash)\r\n            { model with blockball = { model.blockball with saving = true } },\r\n                Cmd.OfPromise.either (fun _ ->\r\n                    promise {\r\n                        let value = gbl.web3?utils?toWei(\"0.02\", \"ether\")\r\n                        let blockheadId = teamArray |> Array.find (fun i -> i < 1995)\r\n                        let! result = gbl.contracts.Value.blockballContract?methods?commitTeams(blockheadId, hash)?send(createObj [\"from\", !!account; \"value\", !!value]) \r\n                        return salt, teamArray, result, hash\r\n                    }) () (BlockballMsg << Blockball.Types.CommitTeamSucceeded) (BlockballMsg << Blockball.Types.CommitTeamFailed)\r\n        | _ -> model, Cmd.none\r\n    | BlockballMsg (Blockball.Types.CommitTeamSucceeded (salt, teamArray, receipt, hash)) ->\r\n        match model with\r\n        | { accountData = Some { signedMessage = Some signedMessage; selectedAccount = account }; blockball = { team = Some team } } ->\r\n            { model with blockball = { model.blockball with saving = true } },\r\n                Cmd.OfAsync.perform (fun _ -> Server.saveTeam signedMessage account { date = System.DateTime.UtcNow; account = account; team = teamArray; teamHash = hash; salt = salt }\r\n                    ) () (fun _ -> BlockballMsg (Blockball.Types.SaveSucceeded))\r\n        | _ -> model, Cmd.none\r\n    | BlockballMsg msg ->\r\n        let (blockball, blockballCmd) = Blockball.State.update msg model.blockball\r\n        { model with blockball = blockball }, Cmd.map BlockballMsg blockballCmd\r\n    | GalleryMsg msg ->\r\n        let (gallery, galleryCmd) = Gallery.State.update msg model.gallery\r\n        { model with gallery = gallery }, Cmd.map GalleryMsg galleryCmd\r\n    | SetSignedMessage signedMessage ->\r\n        match model with\r\n        | { accountData = Some data } ->\r\n            WebStorage.localStorage.[\"signed-message: \" + data.selectedAccount] <- signedMessage\r\n            { model with accountData = Some { data with signedMessage = Some signedMessage } },\r\n                Cmd.OfAsync.perform (Server.getTeam) (signedMessage, data.selectedAccount) SetTeam\r\n        | _ -> model, Cmd.none\r\n    | SetTeam team ->\r\n        match model with\r\n        | { blockball = blockball } ->\r\n            { model with blockball = { blockball with team = Some team } }, Cmd.none\r\n    | SetProvider provider ->\r\n        gbl.window?web3provider <- provider\r\n        let web3 = new Web3(provider)\r\n        gbl.window?web3_ <- web3\r\n        gbl.web3 <- web3\r\n        model, updateAccountCmd web3\r\n    | SetAccountData data ->\r\n        match model.accountData with\r\n        | Some accountData when accountData.selectedAccount = data.selectedAccount && accountData.chainId = data.chainId ->\r\n            model, Cmd.none\r\n        | _ ->\r\n            // recreate contracts\r\n            { model with accountData = Some data },\r\n                Cmd.OfAsync.perform (fun _ ->\r\n                    async {\r\n                        let! contracts = createContracts gbl.web3 |> Async.AwaitPromise\r\n                        gbl.contracts <- Some contracts\r\n                        let! blockheads = Blockhead.getBlockheadsForAccount gbl.contracts.Value data.selectedAccount\r\n                        let! results = Blockhead.getResultsForAccount gbl.contracts.Value data.selectedAccount\r\n                        let! msgToSign = Server.getAuthenticationMessage data.selectedAccount\r\n                        let wblockheads = blockheads |> Array.map (fun c -> { blockhead = c; teamStatus = TeamStatus.NotInTeam })\r\n                        match data.signedMessage with\r\n                        | None -> \r\n                            return { blockheads = wblockheads; team = [||]; results = results |> Array.toList; teamFetched = false; messageToSign = msgToSign }\r\n                        | Some msg ->\r\n                            let! team = Server.getTeam (msg, data.selectedAccount)\r\n                            return { blockheads = wblockheads; team = team; results = results |> Array.toList; teamFetched = true; messageToSign = msgToSign } }) () SetWalletData\r\n    | SetWalletData walletData ->\r\n        { model with\r\n            blockball =\r\n                { model.blockball with\r\n                    blockheads = Some walletData.blockheads\r\n                    team = match walletData.teamFetched with | true -> Some walletData.team | false -> None\r\n                    results = Some walletData.results\r\n                    messageToSign = Some walletData.messageToSign } }, Cmd.none\r\n    | SetWeb3InitData web3Data ->\r\n        // load blockhead if blockhead page\r\n        let cmd =\r\n            match model.CurrentPage with\r\n            | Blockhead index -> Cmd.OfAsync.perform (fun _ -> Blockhead.getBlockheadGenericByIndex gbl.contracts.Value index) () SetBlockhead\r\n            | _ -> Cmd.none\r\n        // event subscriptions\r\n        let eventSubCmd =\r\n            Cmd.ofSub (fun dispatch ->\r\n                gbl.contracts.Value.blockmintingContract?events?Mint(createObj [\"fromBlock\", !!(web3Data.auctionBlock)])?on(\"data\", fun event ->\r\n                    dispatch <| MintEvent event)\r\n                gbl.contracts.Value.blockmintingContract?events?Auction(createObj [\"fromBlock\", !!(web3Data.auctionBlock)])?on(\"data\", fun event ->\r\n                    dispatch <| AuctionEvent event)\r\n                ())\r\n        { model with Home = { model.Home with currentAuction = Some web3Data.auction } }, Cmd.batch [cmd; eventSubCmd]\r\n    | SetAuctionPrice (priceRaw, price) ->\r\n        match model.Home.currentAuction with\r\n        | None -> model, Cmd.none\r\n        | Some auction ->\r\n            { model with Home = { model.Home with currentAuction = Some { auction with price = price; priceRaw = priceRaw } } }, Cmd.none\r\n    | SetBlockhead blockhead ->\r\n        match model.blockhead with\r\n        | None -> model, Cmd.none\r\n        | Some c -> { model with blockhead = Some { c with blockhead = Some blockhead} }, Cmd.none\r\n    | SetAuction auction ->\r\n        { model with Home = { model.Home with currentAuction = Some auction } }, Cmd.none\r\n    | MintEvent event ->\r\n        let index = event?returnValues?tokenId\r\n        match model.Home.currentAuction with\r\n        | None -> model, Cmd.none\r\n        | Some auction ->\r\n            let auctions = auction.auctions |> List.map (fun a -> if a.blockhead.index = index then { a with priceSold = Some 1M } else a)\r\n            { model with Home = { model.Home with currentAuction = Some { auction with auctions = auctions } } }, Cmd.none\r\n    | AuctionEvent event ->\r\n        model, Cmd.OfPromise.perform (getAuctionBatchFromEvent gbl.contracts.Value gbl.web3) event SetAuction\r\n    | TimerTick ->\r\n        let launchTs = launchTime - System.DateTime.UtcNow\r\n        let carousel = if launchTs.Seconds % 5 = 0 then model.carousel + 1 else model.carousel\r\n        { model with timeToLaunch = launchTs.Days, launchTs.Hours, launchTs.Minutes, launchTs.Seconds; carousel = carousel }, Cmd.none\r\n    | _ -> model, Cmd.none\r\n","module Blockball.State\r\n\r\nopen Elmish\r\nopen Types\r\nopen Fable.Core\r\nopen Common\r\n\r\nlet update msg model : Model * Cmd<Msg> =\r\n    match msg with\r\n    | SelectTab tab ->\r\n        { model with activeTab = tab }, Cmd.none\r\n    | SelectingBlockhead n ->\r\n        { model with selectingBlockhead = Some n }, Cmd.none\r\n    | CancelSelectBlockhead ->\r\n        { model with selectingBlockhead = None }, Cmd.none\r\n    | SelectBlockhead (pos, blockheadIndex) ->\r\n        let draftTeam = model.draftTeam |> Array.mapi (fun i t -> if i = pos then Some (blockheadIndex, false) else t)\r\n        { model with draftTeam = draftTeam; selectingBlockhead = None }, Cmd.none\r\n    | CancelTeamChanges ->\r\n        { model with draftTeam = [| None; None; None; None |] }, Cmd.none\r\n    | SaveSucceeded ->\r\n        { model with\r\n            saving = false\r\n            team =\r\n                match model.team with\r\n                | None | Some [||] -> model.draftTeam |> Array.choose id |> Some\r\n                | Some team -> Array.zip team model.draftTeam |> Array.map (function | (_, Some (i, c)) -> (i, c) | c, _ -> c) |> Some\r\n            draftTeam = [| None; None; None; None |]}, Cmd.none\r\n    | CommitTeamFailed e ->\r\n        Browser.Dom.console.log(\"error committing team: \" + e.Message)\r\n        { model with saving = false }, Cmd.none\r\n    | SetCaptainState (pos, captain) ->\r\n        match model.team, model.draftTeam.[pos] with\r\n        | _, Some _ ->\r\n            let draftTeam = model.draftTeam |> Array.mapi (fun i t -> if i = pos then Some (fst t.Value, captain) else t)\r\n            { model with draftTeam = draftTeam }, Cmd.none\r\n        | Some team, None ->\r\n            { model with draftTeam = model.draftTeam |> Array.mapi (fun i t -> if i = pos then Some (fst team.[pos], captain) else t) }, Cmd.none\r\n","module App.View\r\n\r\nopen Elmish\r\nopen Elmish.Navigation\r\nopen Elmish.UrlParser\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Types\r\nopen App.State\r\nopen Global\r\nopen Imports\r\n\r\nimportAll \"../sass/main.sass\"\r\n\r\nopen Fable.React\r\nopen Fable.React.Props\r\n\r\nlet [<Global(\"window\")>] window: obj = jsNative\r\n\r\nlet web3ModalConfig =\r\n    keyValueList CaseRules.LowerFirst\r\n        [!!(\"network\", \"mainnet\")\r\n         !!(\"cacheProvider\", true)\r\n         !!(\"providerOptions\", keyValueList CaseRules.LowerFirst [])]\r\n\r\nlet web3Modal = new Web3Modal(web3ModalConfig)\r\n\r\nlet menuItem label page currentPage =\r\n    li\r\n      [ ]\r\n      [ a\r\n          [ classList [ \"is-active\", page = currentPage ]\r\n            Href (toHash page) ]\r\n          [ str label ] ]\r\n\r\nlet menu currentPage =\r\n  aside\r\n    [ ClassName \"menu\" ]\r\n    [ p\r\n        [ ClassName \"menu-label\" ]\r\n        [ str \"General\" ]\r\n      ul\r\n        [ ClassName \"menu-list\" ]\r\n        [ menuItem \"Home\" Home currentPage\r\n          menuItem \"Counter sample\" Counter currentPage\r\n          menuItem \"About\" Page.About currentPage ] ]\r\n\r\nlet root model dispatch =\r\n\r\n  let pageHtml page =\r\n    match page with\r\n    | Page.About -> Info.View.root\r\n    | Counter -> Counter.View.root model.Counter (CounterMsg >> dispatch)\r\n    | Home -> Home.View.root model.timeToLaunch model.carousel (HomeMsg >> dispatch)\r\n    | Blockball -> Blockball.View.root model.blockball model.accountData (BlockballMsg >> dispatch)\r\n    | Blockhead _ -> Blockhead.View.root model.blockhead (BlockheadMsg >> dispatch)\r\n    | Gallery -> Gallery.View.root model.gallery model.accountData (GalleryMsg >> dispatch)\r\n    | UserGuide -> UserGuide.View.root\r\n\r\n  let containerCls page =\r\n    match page with\r\n    | Page.About -> \"\"\r\n    | _ -> \"container\"\r\n\r\n  div\r\n    []\r\n    [ Navbar.View.root model.accountData model.navbarMenuActive (NavMsg >> dispatch)\r\n      div [Id \"page-container\"]\r\n         [div [ClassName <| containerCls model.CurrentPage] [pageHtml model.CurrentPage ]\r\n          footer [ClassName \"footer\"]\r\n            [div [ClassName \"container content has-text-centered\"]\r\n                [img [ClassName \"opensea\"; Src \"/img/opensea.svg\"]\r\n                 img [ClassName \"discord\"; Src \"/img/discord.svg\"]\r\n                 img [ClassName \"twitter\"; Src \"/img/twitter.svg\"]\r\n                 img [ClassName \"instagram\"; Src \"/img/instagram.svg\"]\r\n                 img [ClassName \"medium\"; Src \"/img/medium.svg\"]]]]]\r\n\r\nopen Elmish.React\r\nopen Elmish.Debug\r\nopen Elmish.HMR\r\n\r\nlet gbl =\r\n    let web3 = new Web3(new Web3WsProvider(Common.Config.network.infuraWsUrl))\r\n    { web3Modal = web3Modal\r\n      window = window\r\n      web3 = web3\r\n      contracts = None\r\n      blockheadsMerkleTree = Common.buildBlockheadsMerkleTree web3 }\r\n\r\nwindow?path <- Common.getMerklePath gbl.blockheadsMerkleTree 888\r\n\r\nlet timer _ =\r\n    Cmd.ofSub (fun dispatch ->\r\n        JS.setInterval (fun () -> dispatch TimerTick) 1000 |> ignore)\r\n\r\n// App\r\nProgram.mkProgram (init gbl) (update gbl) root\r\n|> Program.withSubscription timer\r\n|> Program.toNavigable (parsePath pageParser) (urlUpdate gbl)\r\n#if DEBUG\r\n|> Program.withDebugger\r\n#endif\r\n|> Program.withReactBatched \"elmish-app\"\r\n|> Program.run\r\n","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { transpose as transpose$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { partialApply, getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { splitInto as splitInto$$1, chunkBySize as chunkBySize$$1, permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    const _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    const _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        const xs$$4 = $xs$$4$$10,\n              ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            const matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    const f = $f$$12,\n          i = $i$$13,\n          acc = $acc$$14,\n          _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    const f$$2 = $f$$2$$19,\n          state$$1 = $state$$1$$20,\n          xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  const xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  const xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $f$$5$$31,\n          i$$1 = $i$$1$$32,\n          acc$$5 = $acc$$5$$33,\n          bs = $bs$$34,\n          cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      const acc$$6 = $acc$$6$$51,\n            state$$8 = $state$$8$$52;\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $f$$10$$53,\n          i$$2 = $i$$2$$54,\n          acc$$7 = $acc$$7$$55,\n          bs$$1 = $bs$$1$$56,\n          cs$$1 = $cs$$1$$57,\n          ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  const xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  const xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  const xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  const xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  const xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  const xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  const xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  const xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  const xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $f$$28$$120,\n          i$$10 = $i$$10$$121,\n          _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      const result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  let xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  let xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  const array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  const array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  const xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  const xs$$75 = fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      const xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    const f$$51 = $f$$51$$180,\n          _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    const f$$52 = $f$$52$$182,\n          bs$$2 = $bs$$2$$183,\n          cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  let xs$$89;\n  const xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  let xs$$92;\n  const xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  let xs$$95;\n  const xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  let xs$$98;\n  const xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  let xs$$101;\n  const xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  let xs$$110;\n  let array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function chunkBySize(chunkSize, xs$$111) {\n  let xs$$114;\n  let xs$$112;\n  let array$$4;\n  array$$4 = ofList(xs$$111, Array);\n  xs$$112 = chunkBySize$$1(chunkSize, array$$4);\n  xs$$114 = ofArray(xs$$112);\n  return map(function f$$56(xs$$113) {\n    return ofArray(xs$$113);\n  }, xs$$114);\n}\nexport function skip(i$$16, xs$$115) {\n  const skipInner = function skipInner($i$$17$$240, $xs$$116$$241) {\n    skipInner: while (true) {\n      const i$$17 = $i$$17$$240,\n            xs$$116 = $xs$$116$$241;\n\n      if (i$$17 === 0) {\n        return xs$$116;\n      } else if (xs$$116.tail != null) {\n        $i$$17$$240 = i$$17 - 1;\n        $xs$$116$$241 = xs$$116.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$242, i$$20, xs$$119;\n\n    if (i$$16 === 0) {\n      $target$$242 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$115.tail != null) {\n        $target$$242 = 1;\n      } else {\n        $target$$242 = 2;\n        i$$20 = i$$16;\n        xs$$119 = xs$$115;\n      }\n    } else {\n      $target$$242 = 2;\n      i$$20 = i$$16;\n      xs$$119 = xs$$115;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          return xs$$115;\n        }\n\n      case 1:\n        {\n          return xs$$115.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$119);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$243, $xs$$120$$244) {\n  skipWhile: while (true) {\n    const predicate = $predicate$$243,\n          xs$$120 = $xs$$120$$244;\n    var $target$$245, h$$4, t$$4;\n\n    if (xs$$120.tail != null) {\n      if (predicate(xs$$120.head)) {\n        $target$$245 = 0;\n        h$$4 = xs$$120.head;\n        t$$4 = xs$$120.tail;\n      } else {\n        $target$$245 = 1;\n      }\n    } else {\n      $target$$245 = 1;\n    }\n\n    switch ($target$$245) {\n      case 0:\n        {\n          $predicate$$243 = predicate;\n          $xs$$120$$244 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$120;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$246, $i$$21$$247, $acc$$25$$248, $xs$$121$$249) {\n  takeSplitAux: while (true) {\n    const error = $error$$246,\n          i$$21 = $i$$21$$247,\n          acc$$25 = $acc$$25$$248,\n          xs$$121 = $xs$$121$$249;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$121];\n    } else if (xs$$121.tail != null) {\n      $error$$246 = error;\n      $i$$21$$247 = i$$21 - 1;\n      $acc$$25$$248 = new List(xs$$121.head, acc$$25);\n      $xs$$121$$249 = xs$$121.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$121];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$123) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$252, i$$25, xs$$124;\n\n    if (i$$22 === 0) {\n      $target$$252 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$252 = 1;\n      } else {\n        $target$$252 = 2;\n        i$$25 = i$$22;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$252 = 2;\n      i$$25 = i$$22;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$252) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple = takeSplitAux(true, i$$25, new List(), xs$$124);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$125) {\n  if (xs$$125.tail != null) {\n    if (xs$$125.tail.tail == null) {\n      if (predicate$$1(xs$$125.head)) {\n        return xs$$125;\n      } else {\n        return xs$$125.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$125.head)) {\n        return new List();\n      } else {\n        return new List(xs$$125.head, takeWhile(predicate$$1, xs$$125.tail));\n      }\n    }\n  } else {\n    return xs$$125;\n  }\n}\nexport function truncate(i$$26, xs$$127) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$29, xs$$128;\n\n    if (i$$26 === 0) {\n      $target$$257 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$127.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$29 = i$$26;\n        xs$$128 = xs$$127;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$29 = i$$26;\n      xs$$128 = xs$$127;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$127.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$128);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$129) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$260, i$$33, xs$$131;\n\n    if (i$$30 === 0) {\n      $target$$260 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$129.tail != null) {\n        $target$$260 = 1;\n      } else {\n        $target$$260 = 2;\n        i$$33 = i$$30;\n        xs$$131 = xs$$129;\n      }\n    } else {\n      $target$$260 = 2;\n      i$$33 = i$$30;\n      xs$$131 = xs$$129;\n    }\n\n    switch ($target$$260) {\n      case 0:\n        {\n          return [new List(), xs$$129];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$129.head, new List()), xs$$129.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$131);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$132) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    let res$$2;\n    const state$$13 = new List();\n    res$$2 = foldIndexed(function f$$57(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$132);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$134, eq$$2) {\n  const hashSet = createMutable([], eq$$2);\n  return filter(function f$$58($arg$$1) {\n    const arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$134);\n}\nexport function distinct(xs$$136, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$136, eq$$3);\n}\nexport function exactlyOne(xs$$137) {\n  if (xs$$137.tail != null) {\n    if (xs$$137.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$137.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$139, eq$$4) {\n  const dict = createMutable$$1([], eq$$4);\n  let keys = new List();\n  iterate(function f$$59(v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$139);\n  let result$$1 = new List();\n  const xs$$141 = keys;\n  iterate(function f$$60(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$141);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$142, eq$$5) {\n  const dict$$1 = createMutable$$1([], eq$$5);\n  let keys$$1 = new List();\n  iterate(function f$$61(v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$142);\n  let result$$2 = new List();\n  const xs$$144 = keys$$1;\n  iterate(function f$$62(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$144);\n  return result$$2;\n}\nexport function where(predicate$$2, xs$$145) {\n  return filter(predicate$$2, xs$$145);\n}\nexport function pairwise(xs$$146) {\n  const inner = function inner($xs$$147$$287, $acc$$27$$288, $x1$$1$$289) {\n    inner: while (true) {\n      const xs$$147 = $xs$$147$$287,\n            acc$$27 = $acc$$27$$288,\n            x1$$1 = $x1$$1$$289;\n\n      if (xs$$147.tail != null) {\n        let copyOfStruct = acc$$27;\n        copyOfStruct.push([x1$$1, xs$$147.head]);\n        $xs$$147$$287 = xs$$147.tail;\n        $acc$$27$$288 = acc$$27;\n        $x1$$1$$289 = xs$$147.head;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$290, x1$$2, x2$$2, xs$$149;\n\n  if (xs$$146.tail != null) {\n    if (xs$$146.tail.tail != null) {\n      $target$$290 = 1;\n      x1$$2 = xs$$146.head;\n      x2$$2 = xs$$146.tail.head;\n      xs$$149 = xs$$146.tail.tail;\n    } else {\n      $target$$290 = 0;\n    }\n  } else {\n    $target$$290 = 0;\n  }\n\n  switch ($target$$290) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        const acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        const clo1 = partialApply(2, inner, [xs$$149]);\n        const clo2 = clo1(acc$$28);\n        return clo2(x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source), res$$3);\n  }\n\n  return res$$3;\n}\nexport function splitInto(chunks, source$$1) {\n  let xs$$152;\n  let xs$$150;\n  let array$$5;\n  array$$5 = ofList(source$$1, Array);\n  xs$$150 = splitInto$$1(chunks, array$$5);\n  xs$$152 = ofArray(xs$$150);\n  return map(function f$$63(xs$$151) {\n    return ofArray(xs$$151);\n  }, xs$$152);\n}\nexport function transpose(lists$$1) {\n  let xs$$154;\n  let source$$3;\n  source$$3 = transpose$$1(lists$$1);\n  xs$$154 = map$$1(ofSeq, source$$3);\n  return ofSeq(xs$$154);\n}"],"sourceRoot":""}